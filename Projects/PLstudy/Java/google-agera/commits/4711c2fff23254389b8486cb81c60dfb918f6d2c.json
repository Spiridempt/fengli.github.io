{"sha":"4711c2fff23254389b8486cb81c60dfb918f6d2c","commit":{"author":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-05-08T15:39:38Z"},"committer":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-05-08T15:39:38Z"},"message":"Extracted inner classes from test app activity","tree":{"sha":"349a6b692cc3b9ddecce6e61b9f385226ea30f92","url":"https://api.github.com/repos/google/agera/git/trees/349a6b692cc3b9ddecce6e61b9f385226ea30f92"},"url":"https://api.github.com/repos/google/agera/git/commits/4711c2fff23254389b8486cb81c60dfb918f6d2c","comment_count":0},"url":"https://api.github.com/repos/google/agera/commits/4711c2fff23254389b8486cb81c60dfb918f6d2c","html_url":"https://github.com/google/agera/commit/4711c2fff23254389b8486cb81c60dfb918f6d2c","comments_url":"https://api.github.com/repos/google/agera/commits/4711c2fff23254389b8486cb81c60dfb918f6d2c/comments","author":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"committer":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"parents":[{"sha":"ae33552bd96e23f11e7595fdac79dbd121246349","url":"https://api.github.com/repos/google/agera/commits/ae33552bd96e23f11e7595fdac79dbd121246349","html_url":"https://github.com/google/agera/commit/ae33552bd96e23f11e7595fdac79dbd121246349"}],"stats":{"total":430,"additions":271,"deletions":159},"files":[{"sha":"42dc97328c2695a180676072ebea2bedcb2a4d51","filename":"testapp/src/main/java/com/google/android/agera/testapp/AddOnClickListener.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/google/agera/blob/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/AddOnClickListener.java","raw_url":"https://github.com/google/agera/raw/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/AddOnClickListener.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/AddOnClickListener.java?ref=4711c2fff23254389b8486cb81c60dfb918f6d2c","patch":"@@ -0,0 +1,28 @@\n+package com.google.android.agera.testapp;\n+\n+import static com.google.android.agera.Preconditions.checkNotNull;\n+\n+import android.app.AlertDialog;\n+import android.support.annotation.NonNull;\n+import android.view.View;\n+import android.widget.EditText;\n+\n+final class AddOnClickListener implements View.OnClickListener {\n+  @NonNull\n+  private final NotesStore notesStore;\n+\n+  public AddOnClickListener(@NonNull final NotesStore notesStore) {\n+    this.notesStore = checkNotNull(notesStore);\n+  }\n+\n+  @Override\n+  public void onClick(@NonNull final View view) {\n+    final EditText editText = new EditText(view.getContext());\n+    editText.setId(R.id.edit);\n+    new AlertDialog.Builder(view.getContext())\n+        .setTitle(R.string.add_note)\n+        .setView(editText)\n+        .setPositiveButton(R.string.add, new AddedOnClickListener(notesStore, editText))\n+        .create().show();\n+  }\n+}"},{"sha":"1114a5ed8c181b9d2c11a5ea9f5f8c97cca5d137","filename":"testapp/src/main/java/com/google/android/agera/testapp/AddedOnClickListener.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/google/agera/blob/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/AddedOnClickListener.java","raw_url":"https://github.com/google/agera/raw/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/AddedOnClickListener.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/AddedOnClickListener.java?ref=4711c2fff23254389b8486cb81c60dfb918f6d2c","patch":"@@ -0,0 +1,25 @@\n+package com.google.android.agera.testapp;\n+\n+import static com.google.android.agera.Preconditions.checkNotNull;\n+\n+import android.content.DialogInterface;\n+import android.support.annotation.NonNull;\n+import android.widget.EditText;\n+\n+final class AddedOnClickListener implements DialogInterface.OnClickListener {\n+  @NonNull\n+  private final EditText editText;\n+  @NonNull\n+  private final NotesStore notesStore;\n+\n+  public AddedOnClickListener(@NonNull final NotesStore notesStore,\n+      @NonNull final EditText editText) {\n+    this.editText = checkNotNull(editText);\n+    this.notesStore = checkNotNull(notesStore);\n+  }\n+\n+  @Override\n+  public void onClick(@NonNull final DialogInterface dialogInterface, final int i) {\n+    notesStore.insertNoteFromText(editText.getText().toString());\n+  }\n+}"},{"sha":"3864f13132376014f24919035fe674fc1ecb4f63","filename":"testapp/src/main/java/com/google/android/agera/testapp/ClearOnClickListener.java","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/google/agera/blob/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/ClearOnClickListener.java","raw_url":"https://github.com/google/agera/raw/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/ClearOnClickListener.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/ClearOnClickListener.java?ref=4711c2fff23254389b8486cb81c60dfb918f6d2c","patch":"@@ -0,0 +1,20 @@\n+package com.google.android.agera.testapp;\n+\n+import static com.google.android.agera.Preconditions.checkNotNull;\n+\n+import android.support.annotation.NonNull;\n+import android.view.View;\n+\n+final class ClearOnClickListener implements View.OnClickListener {\n+  @NonNull\n+  private final NotesStore notesStore;\n+\n+  public ClearOnClickListener(@NonNull final NotesStore notesStore) {\n+    this.notesStore = checkNotNull(notesStore);\n+  }\n+\n+  @Override\n+  public void onClick(final View view) {\n+    notesStore.clearNotes();\n+  }\n+}"},{"sha":"b7124f7f04538c4bff4313fc174dea68d6d98cd8","filename":"testapp/src/main/java/com/google/android/agera/testapp/DeleteOnLongClickListener.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/google/agera/blob/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/DeleteOnLongClickListener.java","raw_url":"https://github.com/google/agera/raw/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/DeleteOnLongClickListener.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/DeleteOnLongClickListener.java?ref=4711c2fff23254389b8486cb81c60dfb918f6d2c","patch":"@@ -0,0 +1,25 @@\n+package com.google.android.agera.testapp;\n+\n+import static com.google.android.agera.Preconditions.checkNotNull;\n+\n+import android.support.annotation.NonNull;\n+import android.view.View;\n+\n+final class DeleteOnLongClickListener implements View.OnLongClickListener {\n+  @NonNull\n+  private final Note note;\n+  @NonNull\n+  private final NotesStore notesStore;\n+\n+  public DeleteOnLongClickListener(@NonNull final NotesStore notesStore,\n+      @NonNull final Note note) {\n+    this.note = checkNotNull(note);\n+    this.notesStore = checkNotNull(notesStore);\n+  }\n+\n+  @Override\n+  public boolean onLongClick(final View view) {\n+    notesStore.deleteNote(note);\n+    return true;\n+  }\n+}"},{"sha":"cfd888a88111f385382a75ea47e519084481b61a","filename":"testapp/src/main/java/com/google/android/agera/testapp/EditOnClickListener.java","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/google/agera/blob/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/EditOnClickListener.java","raw_url":"https://github.com/google/agera/raw/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/EditOnClickListener.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/EditOnClickListener.java?ref=4711c2fff23254389b8486cb81c60dfb918f6d2c","patch":"@@ -0,0 +1,32 @@\n+package com.google.android.agera.testapp;\n+\n+import static com.google.android.agera.Preconditions.checkNotNull;\n+\n+import android.app.AlertDialog;\n+import android.support.annotation.NonNull;\n+import android.view.View;\n+import android.widget.EditText;\n+\n+final class EditOnClickListener implements View.OnClickListener {\n+  @NonNull\n+  private final Note note;\n+  @NonNull\n+  private final NotesStore notesStore;\n+\n+  public EditOnClickListener(@NonNull final NotesStore notesStore, @NonNull final Note note) {\n+    this.note = checkNotNull(note);\n+    this.notesStore = checkNotNull(notesStore);\n+  }\n+\n+  @Override\n+  public void onClick(final View view) {\n+    final EditText editText = new EditText(view.getContext());\n+    editText.setId(R.id.edit);\n+    editText.setText(note.getNote());\n+    new AlertDialog.Builder(view.getContext())\n+        .setTitle(R.string.edit_note)\n+        .setView(editText)\n+        .setPositiveButton(R.string.edit, new EditedOnClickListener(notesStore, note, editText))\n+        .create().show();\n+  }\n+}"},{"sha":"f3f6c03a5299aed6d831b55f93fe31d76d8531a1","filename":"testapp/src/main/java/com/google/android/agera/testapp/EditedOnClickListener.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/google/agera/blob/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/EditedOnClickListener.java","raw_url":"https://github.com/google/agera/raw/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/EditedOnClickListener.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/EditedOnClickListener.java?ref=4711c2fff23254389b8486cb81c60dfb918f6d2c","patch":"@@ -0,0 +1,28 @@\n+package com.google.android.agera.testapp;\n+\n+import static com.google.android.agera.Preconditions.checkNotNull;\n+\n+import android.content.DialogInterface;\n+import android.support.annotation.NonNull;\n+import android.widget.EditText;\n+\n+final class EditedOnClickListener implements DialogInterface.OnClickListener {\n+  @NonNull\n+  private final Note note;\n+  @NonNull\n+  private final EditText editText;\n+  @NonNull\n+  private final NotesStore notesStore;\n+\n+  public EditedOnClickListener(@NonNull final NotesStore notesStore, @NonNull final Note note,\n+      @NonNull final EditText editText) {\n+    this.note = checkNotNull(note);\n+    this.editText = checkNotNull(editText);\n+    this.notesStore = checkNotNull(notesStore);\n+  }\n+\n+  @Override\n+  public void onClick(@NonNull final DialogInterface dialogInterface, final int i) {\n+    notesStore.updateNote(note, editText.getText().toString());\n+  }\n+}"},{"sha":"8a3e97ff1a2ffaa09309bb5d3058bc9b46a462ee","filename":"testapp/src/main/java/com/google/android/agera/testapp/HttpResponseToBitmap.java","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/google/agera/blob/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/HttpResponseToBitmap.java","raw_url":"https://github.com/google/agera/raw/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/HttpResponseToBitmap.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/HttpResponseToBitmap.java?ref=4711c2fff23254389b8486cb81c60dfb918f6d2c","patch":"@@ -0,0 +1,20 @@\n+package com.google.android.agera.testapp;\n+\n+import static android.graphics.BitmapFactory.decodeByteArray;\n+import static com.google.android.agera.Result.absentIfNull;\n+\n+import com.google.android.agera.Function;\n+import com.google.android.agera.Result;\n+import com.google.android.agera.net.HttpResponse;\n+\n+import android.graphics.Bitmap;\n+import android.support.annotation.NonNull;\n+\n+final class HttpResponseToBitmap implements Function<HttpResponse, Result<Bitmap>> {\n+  @NonNull\n+  @Override\n+  public Result<Bitmap> apply(@NonNull final HttpResponse input) {\n+    final byte[] body = input.getBody();\n+    return absentIfNull(decodeByteArray(body, 0, body.length));\n+  }\n+}"},{"sha":"2f3533e88f5632400b0914ce1c2fa5247355dc0a","filename":"testapp/src/main/java/com/google/android/agera/testapp/ImageViewBitmapReceiver.java","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/google/agera/blob/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/ImageViewBitmapReceiver.java","raw_url":"https://github.com/google/agera/raw/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/ImageViewBitmapReceiver.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/ImageViewBitmapReceiver.java?ref=4711c2fff23254389b8486cb81c60dfb918f6d2c","patch":"@@ -0,0 +1,23 @@\n+package com.google.android.agera.testapp;\n+\n+import static com.google.android.agera.Preconditions.checkNotNull;\n+\n+import com.google.android.agera.Receiver;\n+\n+import android.graphics.Bitmap;\n+import android.support.annotation.NonNull;\n+import android.widget.ImageView;\n+\n+final class ImageViewBitmapReceiver implements Receiver<Bitmap> {\n+  @NonNull\n+  private final ImageView imageView;\n+\n+  public ImageViewBitmapReceiver(@NonNull final ImageView imageView) {\n+    this.imageView = checkNotNull(imageView);\n+  }\n+\n+  @Override\n+  public void accept(@NonNull final Bitmap value) {\n+    imageView.setImageBitmap(value);\n+  }\n+}"},{"sha":"52bce28ce40e294db72f6aa460ba3f584a5ce7a6","filename":"testapp/src/main/java/com/google/android/agera/testapp/NotePresenter.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/google/agera/blob/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/NotePresenter.java","raw_url":"https://github.com/google/agera/raw/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/NotePresenter.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/NotePresenter.java?ref=4711c2fff23254389b8486cb81c60dfb918f6d2c","patch":"@@ -0,0 +1,41 @@\n+package com.google.android.agera.testapp;\n+\n+import static com.google.android.agera.Preconditions.checkNotNull;\n+\n+import com.google.android.agera.rvadapter.RepositoryPresenter;\n+\n+import android.support.annotation.NonNull;\n+import android.support.v7.widget.RecyclerView;\n+import android.widget.TextView;\n+\n+import java.util.List;\n+\n+// Presents each note in the repository as a text view in the recycler view\n+final class NotePresenter extends RepositoryPresenter<List<Note>> {\n+  @NonNull\n+  private final NotesStore notesStore;\n+\n+  public NotePresenter(@NonNull final NotesStore notesStore) {\n+    this.notesStore = checkNotNull(notesStore);\n+  }\n+\n+  @Override\n+  public int getItemCount(@NonNull final List<Note> notes) {\n+    return notes.size();\n+  }\n+\n+  @Override\n+  public int getLayoutResId(@NonNull final List<Note> notes, final int index) {\n+    return R.layout.text_layout;\n+  }\n+\n+  @Override\n+  public void bind(@NonNull final List<Note> notes, final int index,\n+      @NonNull final RecyclerView.ViewHolder holder) {\n+    final Note note = notes.get(index);\n+    final TextView view = (TextView) holder.itemView;\n+    view.setText(note.getNote());\n+    view.setOnClickListener(new EditOnClickListener(notesStore, note));\n+    view.setOnLongClickListener(new DeleteOnLongClickListener(notesStore, note));\n+  }\n+}"},{"sha":"0ab687aae797bbc091a85367ae42b10359430aef","filename":"testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java","status":"modified","additions":13,"deletions":159,"changes":172,"blob_url":"https://github.com/google/agera/blob/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java","raw_url":"https://github.com/google/agera/raw/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java?ref=4711c2fff23254389b8486cb81c60dfb918f6d2c","patch":"@@ -15,63 +15,44 @@\n  */\n package com.google.android.agera.testapp;\n \n-import static android.graphics.BitmapFactory.decodeByteArray;\n import static android.os.StrictMode.ThreadPolicy;\n import static android.os.StrictMode.VmPolicy;\n import static android.os.StrictMode.setThreadPolicy;\n import static android.os.StrictMode.setVmPolicy;\n import static com.google.android.agera.Repositories.repositoryWithInitialValue;\n import static com.google.android.agera.RepositoryConfig.SEND_INTERRUPT;\n-import static com.google.android.agera.Result.absentIfNull;\n import static com.google.android.agera.Suppliers.staticSupplier;\n import static com.google.android.agera.net.HttpFunctions.httpFunction;\n-import static com.google.android.agera.net.HttpRequests.httpGetRequest;\n import static com.google.android.agera.rvadapter.RepositoryAdapter.repositoryAdapter;\n import static com.google.android.agera.testapp.NotesStore.notesStore;\n import static java.util.concurrent.Executors.newSingleThreadExecutor;\n \n-import com.google.android.agera.Function;\n-import com.google.android.agera.Merger;\n import com.google.android.agera.Receiver;\n import com.google.android.agera.Repository;\n import com.google.android.agera.Result;\n-import com.google.android.agera.Supplier;\n import com.google.android.agera.Updatable;\n-import com.google.android.agera.net.HttpRequest;\n-import com.google.android.agera.net.HttpResponse;\n import com.google.android.agera.rvadapter.RepositoryAdapter;\n-import com.google.android.agera.rvadapter.RepositoryPresenter;\n \n import android.app.Activity;\n-import android.app.AlertDialog;\n-import android.app.AlertDialog.Builder;\n-import android.content.DialogInterface;\n-import android.content.DialogInterface.OnClickListener;\n import android.graphics.Bitmap;\n import android.os.Bundle;\n-import android.support.annotation.NonNull;\n import android.support.v7.widget.LinearLayoutManager;\n import android.support.v7.widget.RecyclerView;\n import android.util.DisplayMetrics;\n-import android.view.View;\n-import android.view.View.OnLongClickListener;\n-import android.widget.EditText;\n import android.widget.ImageView;\n-import android.widget.TextView;\n \n-import java.util.List;\n-import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executor;\n \n public final class NotesActivity extends Activity implements Updatable {\n-  public static final UrlToHttpRequest URL_TO_HTTP_REQUEST = new UrlToHttpRequest();\n-  public static final HttpResponseToBitmap HTTP_RESPONSE_TO_BITMAP = new HttpResponseToBitmap();\n+  private static final UrlToHttpRequest URL_TO_HTTP_REQUEST = new UrlToHttpRequest();\n+  private static final HttpResponseToBitmap HTTP_RESPONSE_TO_BITMAP = new HttpResponseToBitmap();\n+  private static final Executor networkExecutor = newSingleThreadExecutor();\n+  private static final Executor calculationExecutor = newSingleThreadExecutor();\n   private static final String BACKGROUND_URL =\n       \"http://www.gravatar.com/avatar/4df6f4fe5976df17deeea19443d4429d\";\n+\n   private RepositoryAdapter adapter;\n-  private NotesStore notesStore;\n   private Repository<Result<Bitmap>> backgroundRepository;\n-  private ExecutorService networkExecutor;\n-  private ExecutorService calculationExecutor;\n   private Receiver<Bitmap> setBackgroundReceiver;\n \n   @Override\n@@ -84,76 +65,35 @@ protected void onCreate(final Bundle savedInstanceState) {\n     setVmPolicy(new VmPolicy.Builder().detectAll().penaltyLog().build());\n \n     // Create the notes store, containing all async IO\n-    notesStore = notesStore(getApplicationContext());\n+    final NotesStore notesStore = notesStore(getApplicationContext());\n \n     // Find the clear button and wire the click listener to call the clear notes updatable\n-    findViewById(R.id.clear).setOnClickListener(new View.OnClickListener() {\n-      @Override\n-      public void onClick(final View view) {\n-        notesStore.clearNotes();\n-      }\n-    });\n+    findViewById(R.id.clear).setOnClickListener(new ClearOnClickListener(notesStore));\n \n     // Find the add button and wire the click listener to show a dialog that in turn calls the add\n     // note from text from the notes store when adding notes\n-    findViewById(R.id.add).setOnClickListener(new View.OnClickListener() {\n-      @Override\n-      public void onClick(@NonNull final View view) {\n-        final EditText editText = new EditText(view.getContext());\n-        editText.setId(R.id.edit);\n-        new AlertDialog.Builder(view.getContext())\n-            .setTitle(R.string.add_note)\n-            .setView(editText)\n-            .setPositiveButton(R.string.add, new OnClickListener() {\n-              @Override\n-              public void onClick(@NonNull final DialogInterface dialogInterface, final int i) {\n-                notesStore.insertNoteFromText(editText.getText().toString());\n-              }\n-            })\n-            .create().show();\n-      }\n-    });\n+    findViewById(R.id.add).setOnClickListener(new AddOnClickListener(notesStore));\n \n     // Create a repository adapter, wiring up the notes repository from the store with a presenter\n     adapter = repositoryAdapter()\n-        .add(notesStore.getNotesRepository(), new NotePresenter())\n+        .add(notesStore.getNotesRepository(), new NotePresenter(notesStore))\n         .build();\n \n     // Setup the recycler view using the repository adapter\n     final RecyclerView recyclerView = (RecyclerView) findViewById(R.id.result);\n     recyclerView.setAdapter(adapter);\n     recyclerView.setLayoutManager(new LinearLayoutManager(this));\n \n-    networkExecutor = newSingleThreadExecutor();\n-    calculationExecutor = newSingleThreadExecutor();\n-\n     setBackgroundReceiver = new ImageViewBitmapReceiver((ImageView) findViewById(R.id.background));\n \n-    final Supplier<Integer> sizeSupplier = new Supplier<Integer>() {\n-      @NonNull\n-      @Override\n-      public Integer get() {\n-        final DisplayMetrics displayMetrics = getResources().getDisplayMetrics();\n-        return Math.max(displayMetrics.heightPixels, displayMetrics.widthPixels);\n-      }\n-    };\n-\n-    final Merger<Integer, String, String> sizedUrlMerger = new Merger<Integer, String, String>() {\n-      @NonNull\n-      @Override\n-      public String merge(@NonNull final Integer integer, @NonNull final String s) {\n-        return s + \"?s=\" + integer;\n-      }\n-    };\n-\n-    final Supplier<String> backgroundUrlSupplier = staticSupplier(BACKGROUND_URL);\n+    final DisplayMetrics displayMetrics = getResources().getDisplayMetrics();\n \n     backgroundRepository = repositoryWithInitialValue(Result.<Bitmap>absent())\n         .observe()\n         .onUpdatesPerLoop()\n-        .getFrom(sizeSupplier)\n         .goTo(networkExecutor)\n-        .mergeIn(backgroundUrlSupplier, sizedUrlMerger)\n+        .getFrom(staticSupplier(BACKGROUND_URL\n+            + \"?s=\" + Math.max(displayMetrics.heightPixels, displayMetrics.widthPixels)))\n         .transform(URL_TO_HTTP_REQUEST)\n         .attemptTransform(httpFunction()).orSkip()\n         .goTo(calculationExecutor)\n@@ -179,93 +119,7 @@ protected void onPause() {\n   }\n \n   @Override\n-  protected void onDestroy() {\n-    super.onDestroy();\n-    // Close the notes store and the associated database\n-    networkExecutor.shutdown();\n-    calculationExecutor.shutdown();\n-  }\n-\n-  @Override\n   public void update() {\n     backgroundRepository.get().ifSucceededSendTo(setBackgroundReceiver);\n   }\n-\n-  private static final class UrlToHttpRequest implements Function<String, HttpRequest> {\n-    @NonNull\n-    @Override\n-    public HttpRequest apply(@NonNull final String input) {\n-      return httpGetRequest(input).compile();\n-    }\n-  }\n-\n-  private static final class HttpResponseToBitmap\n-      implements Function<HttpResponse, Result<Bitmap>> {\n-    @NonNull\n-    @Override\n-    public Result<Bitmap> apply(@NonNull final HttpResponse input) {\n-      final byte[] body = input.getBody();\n-      return absentIfNull(decodeByteArray(body, 0, body.length));\n-    }\n-  }\n-\n-  private static class ImageViewBitmapReceiver implements Receiver<Bitmap> {\n-    @NonNull\n-    private final ImageView imageView;\n-\n-    public ImageViewBitmapReceiver(@NonNull final ImageView imageView) {\n-      this.imageView = imageView;\n-    }\n-\n-    @Override\n-    public void accept(@NonNull final Bitmap value) {\n-      imageView.setImageBitmap(value);\n-    }\n-  }\n-\n-  // Presents each note in the repository as a text view in the recycler view\n-  private final class NotePresenter extends RepositoryPresenter<List<Note>> {\n-    @Override\n-    public int getItemCount(@NonNull final List<Note> notes) {\n-      return notes.size();\n-    }\n-\n-    @Override\n-    public int getLayoutResId(@NonNull final List<Note> notes, final int index) {\n-      return R.layout.text_layout;\n-    }\n-\n-    @Override\n-    public void bind(@NonNull final List<Note> notes, final int index,\n-        @NonNull final RecyclerView.ViewHolder holder) {\n-      final Note note = notes.get(index);\n-      TextView view = (TextView) holder.itemView;\n-      view.setText(note.getNote());\n-      view.setOnClickListener(new View.OnClickListener() {\n-        @Override\n-        public void onClick(final View view) {\n-          final EditText editText = new EditText(view.getContext());\n-          editText.setId(R.id.edit);\n-          editText.setText(note.getNote());\n-          new Builder(view.getContext())\n-              .setTitle(R.string.edit_note)\n-              .setView(editText)\n-              .setPositiveButton(R.string.edit, new OnClickListener() {\n-                @Override\n-                public void onClick(@NonNull final DialogInterface dialogInterface, final int i) {\n-                  notesStore.updateNote(note, editText.getText().toString());\n-                }\n-              })\n-              .create().show();\n-        }\n-      });\n-      view.setOnLongClickListener(new OnLongClickListener() {\n-        @Override\n-        public boolean onLongClick(final View view) {\n-          notesStore.deleteNote(note);\n-          return true;\n-        }\n-      });\n-    }\n-  }\n }\n\\ No newline at end of file"},{"sha":"6e27f5c3f10ba72191eafe674e9e8252971afcfd","filename":"testapp/src/main/java/com/google/android/agera/testapp/UrlToHttpRequest.java","status":"added","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/google/agera/blob/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/UrlToHttpRequest.java","raw_url":"https://github.com/google/agera/raw/4711c2fff23254389b8486cb81c60dfb918f6d2c/testapp/src/main/java/com/google/android/agera/testapp/UrlToHttpRequest.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/UrlToHttpRequest.java?ref=4711c2fff23254389b8486cb81c60dfb918f6d2c","patch":"@@ -0,0 +1,16 @@\n+package com.google.android.agera.testapp;\n+\n+import static com.google.android.agera.net.HttpRequests.httpGetRequest;\n+\n+import com.google.android.agera.Function;\n+import com.google.android.agera.net.HttpRequest;\n+\n+import android.support.annotation.NonNull;\n+\n+final class UrlToHttpRequest implements Function<String, HttpRequest> {\n+  @NonNull\n+  @Override\n+  public HttpRequest apply(@NonNull final String input) {\n+    return httpGetRequest(input).compile();\n+  }\n+}"}]}