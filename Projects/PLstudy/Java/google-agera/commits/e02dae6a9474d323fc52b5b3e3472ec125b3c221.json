{"sha":"e02dae6a9474d323fc52b5b3e3472ec125b3c221","commit":{"author":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-05-15T07:18:44Z"},"committer":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-05-15T07:56:54Z"},"message":"Added missing tests to (non)absent send result methods","tree":{"sha":"d96afe2135c3153d32b0ac41865c2a27ced0534d","url":"https://api.github.com/repos/google/agera/git/trees/d96afe2135c3153d32b0ac41865c2a27ced0534d"},"url":"https://api.github.com/repos/google/agera/git/commits/e02dae6a9474d323fc52b5b3e3472ec125b3c221","comment_count":0},"url":"https://api.github.com/repos/google/agera/commits/e02dae6a9474d323fc52b5b3e3472ec125b3c221","html_url":"https://github.com/google/agera/commit/e02dae6a9474d323fc52b5b3e3472ec125b3c221","comments_url":"https://api.github.com/repos/google/agera/commits/e02dae6a9474d323fc52b5b3e3472ec125b3c221/comments","author":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"committer":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"parents":[{"sha":"5182f91a1b5ffae62c5fe21ff97975012e69f638","url":"https://api.github.com/repos/google/agera/commits/5182f91a1b5ffae62c5fe21ff97975012e69f638","html_url":"https://github.com/google/agera/commit/5182f91a1b5ffae62c5fe21ff97975012e69f638"}],"stats":{"total":24,"additions":20,"deletions":4},"files":[{"sha":"c1ac0dfc9ce8e0168b08d706524e060d4e89dc69","filename":"agera/src/main/java/com/google/android/agera/Result.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/google/agera/blob/e02dae6a9474d323fc52b5b3e3472ec125b3c221/agera/src/main/java/com/google/android/agera/Result.java","raw_url":"https://github.com/google/agera/raw/e02dae6a9474d323fc52b5b3e3472ec125b3c221/agera/src/main/java/com/google/android/agera/Result.java","contents_url":"https://api.github.com/repos/google/agera/contents/agera/src/main/java/com/google/android/agera/Result.java?ref=e02dae6a9474d323fc52b5b3e3472ec125b3c221","patch":"@@ -39,9 +39,11 @@\n   @NonNull\n   private static final Result<Object> FAILURE =\n       new Result<>(null, new Throwable(\"Attempt failed\"));\n+  @SuppressWarnings(\"ThrowableInstanceNeverThrown\")\n   @NonNull\n-  private static final Result<Object> ABSENT =\n-      new Result<>(null, new NullPointerException(\"Value is absent\"));\n+  private static final Throwable ABSENT_THROWABLE = new NullPointerException(\"Value is absent\");\n+  @NonNull\n+  private static final Result<Object> ABSENT = new Result<>(null, ABSENT_THROWABLE);\n \n   @Nullable\n   private final T value;\n@@ -216,7 +218,7 @@ public Throwable failureOrNull() {\n    */\n   @NonNull\n   public Result<T> ifAbsentFailureSendTo(@NonNull final Receiver<? super Throwable> receiver) {\n-    if (failure != null && failure == ABSENT.failure) {\n+    if (failure == ABSENT_THROWABLE) {\n       receiver.accept(failure);\n     }\n     return this;\n@@ -230,7 +232,7 @@ public Throwable failureOrNull() {\n    */\n   @NonNull\n   public Result<T> ifNonAbsentFailureSendTo(@NonNull final Receiver<? super Throwable> receiver) {\n-    if (failure != null && failure != ABSENT.failure) {\n+    if (failure != null && failure != ABSENT_THROWABLE) {\n       receiver.accept(failure);\n     }\n     return this;"},{"sha":"91c31ffc353b20fea299bcd9b5becc259289a927","filename":"agera/src/test/java/com/google/android/agera/ResultTest.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/google/agera/blob/e02dae6a9474d323fc52b5b3e3472ec125b3c221/agera/src/test/java/com/google/android/agera/ResultTest.java","raw_url":"https://github.com/google/agera/raw/e02dae6a9474d323fc52b5b3e3472ec125b3c221/agera/src/test/java/com/google/android/agera/ResultTest.java","contents_url":"https://api.github.com/repos/google/agera/contents/agera/src/test/java/com/google/android/agera/ResultTest.java?ref=e02dae6a9474d323fc52b5b3e3472ec125b3c221","patch":"@@ -288,6 +288,13 @@ public void shouldApplySendIfFailedExceptAbsent() {\n   }\n \n   @Test\n+  public void shouldNotApplySendIfSucceededIfAbsent() {\n+    SUCCESS_WITH_VALUE.ifNonAbsentFailureSendTo(mockThrowableReceiver);\n+\n+    verifyZeroInteractions(mockThrowableReceiver);\n+  }\n+\n+  @Test\n   public void shouldNotApplySendIfFailedIfSucceeded() {\n     SUCCESS_WITH_VALUE.ifFailedSendTo(mockThrowableReceiver);\n \n@@ -323,6 +330,13 @@ public void shouldNotApplySendIfFailedAbsentIfAbsent() {\n   }\n \n   @Test\n+  public void shouldNotApplySendIfFailedAbsentIfSucceeded() {\n+    failure(THROWABLE).ifAbsentFailureSendTo(mockThrowableReceiver);\n+\n+    verifyZeroInteractions(mockThrowableReceiver);\n+  }\n+\n+  @Test\n   public void shouldAllowForChainedCallsToSendIfFailed() {\n     assertThat(SUCCESS_WITH_VALUE.ifSucceededSendTo(mockReceiver),\n         sameInstance(SUCCESS_WITH_VALUE));"}]}