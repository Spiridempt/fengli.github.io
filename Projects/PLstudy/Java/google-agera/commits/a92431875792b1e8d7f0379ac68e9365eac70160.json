{"sha":"a92431875792b1e8d7f0379ac68e9365eac70160","commit":{"author":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2017-03-20T10:58:06Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2017-03-20T10:58:06Z"},"message":"Added support for static id for item repo presenters (#154)","tree":{"sha":"5e5ba129058012599bb44c5df67bfcaebb77f342","url":"https://api.github.com/repos/google/agera/git/trees/5e5ba129058012599bb44c5df67bfcaebb77f342"},"url":"https://api.github.com/repos/google/agera/git/commits/a92431875792b1e8d7f0379ac68e9365eac70160","comment_count":0},"url":"https://api.github.com/repos/google/agera/commits/a92431875792b1e8d7f0379ac68e9365eac70160","html_url":"https://github.com/google/agera/commit/a92431875792b1e8d7f0379ac68e9365eac70160","comments_url":"https://api.github.com/repos/google/agera/commits/a92431875792b1e8d7f0379ac68e9365eac70160/comments","author":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"avatar_url":"https://avatars0.githubusercontent.com/u/19864447?v=3","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"7bd61e35ca58c7ee87e2fbdab8237025eddb9299","url":"https://api.github.com/repos/google/agera/commits/7bd61e35ca58c7ee87e2fbdab8237025eddb9299","html_url":"https://github.com/google/agera/commit/7bd61e35ca58c7ee87e2fbdab8237025eddb9299"}],"stats":{"total":197,"additions":164,"deletions":33},"files":[{"sha":"3b68959aeb3bd009fc72938010cbc973d2a546d4","filename":"extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompiler.java","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/google/agera/blob/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompiler.java","raw_url":"https://github.com/google/agera/raw/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompiler.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompiler.java?ref=a92431875792b1e8d7f0379ac68e9365eac70160","patch":"@@ -34,12 +34,15 @@\n import com.google.android.agera.Receiver;\n import com.google.android.agera.Result;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPLayout;\n+import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPViewBinderRecycleItemCompile;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPViewBinderRecycleStableIdCompile;\n import java.lang.ref.WeakReference;\n import java.util.List;\n \n @SuppressWarnings({\"unchecked, rawtypes\"})\n-final class RepositoryPresenterCompiler implements RPLayout, RPViewBinderRecycleStableIdCompile {\n+final class RepositoryPresenterCompiler implements RPLayout, RPViewBinderRecycleStableIdCompile,\n+    RPViewBinderRecycleItemCompile {\n+  @NonNull\n   private Function<Object, Integer> layoutForItem;\n   @NonNull\n   private Binder binder = nullBinder();\n@@ -106,6 +109,13 @@ public Object stableIdForItem(@NonNull final Function stableIdForItem) {\n \n   @NonNull\n   @Override\n+  public Object stableId(final long stableId) {\n+    this.stableIdForItem(staticFunction(stableId));\n+    return this;\n+  }\n+\n+  @NonNull\n+  @Override\n   public Object recycleWith(@NonNull final Receiver recycler) {\n     this.recycler = recycler;\n     return this;"},{"sha":"532870b220d0dd1e648cea9fdfb04ed8900c3bcb","filename":"extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompilerStates.java","status":"modified","additions":52,"deletions":17,"changes":69,"blob_url":"https://github.com/google/agera/blob/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompilerStates.java","raw_url":"https://github.com/google/agera/raw/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompilerStates.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompilerStates.java?ref=a92431875792b1e8d7f0379ac68e9365eac70160","patch":"@@ -82,25 +82,37 @@\n    * Compiler state to specify how to generate stable IDs when {@link\n    * android.support.v7.widget.RecyclerView.Adapter#setHasStableIds(boolean)} is true.\n    */\n-  interface RPStableId<TVal, TRet> {\n+  interface RPStableId<TVal, TRet, TRetItem> {\n \n     /**\n      * Specifies a {@link Function} providing a stable id for the given item. Called only if stable\n-     * IDs are enabled with {@link RepositoryAdapter#setHasStableIds RepositoryAdapter.setHasStableIds(true)},\n-     * and therefore this method is optional with a default implementation of returning {@link\n-     * RecyclerView#NO_ID}. If stable IDs are enabled, the returned ID and the layout returned by\n+     * IDs are enabled with {@link RepositoryAdapter#setHasStableIds}, and therefore this method is\n+     * optional with a default implementation of returning {@link RecyclerView#NO_ID}. If stable IDs\n+     * are enabled, the returned ID and the layout returned by\n      * {@link RPLayout#layoutForItem(Function)} or {@link RPLayout#layout(int)} for the given item\n      * should together uniquely identify this item in the whole {@link RecyclerView} throughout all\n      * changes.\n      */\n     @NonNull\n     TRet stableIdForItem(@NonNull Function<? super TVal, Long> stableIdForItem);\n+\n+    /**\n+     * Specifies a {@code stable:Id} for the given item. Called only if stable IDs are enabled with\n+     * {@link RepositoryAdapter#setHasStableIds}, and therefore this method is optional with a\n+     * default implementation of returning {@link RecyclerView#NO_ID}. If stable IDs are enabled,\n+     * the returned ID and the layout returned by {@link RPLayout#layoutForItem(Function)} or\n+     * {@link RPLayout#layout(int)} for the given item should together uniquely identify this item\n+     * in the whole {@link RecyclerView} throughout all changes.\n+     */\n+    @NonNull\n+    TRetItem stableId(long stableId);\n   }\n \n   /**\n-   * Compiler state to create the @{link RepositoryPresenter}.\n+   * Compiler state to compile for the specified item container type of the associated\n+   * {@link Repository}.\n    */\n-  interface RPCompile<TVal> {\n+  interface RPItemCompile<TVal> {\n \n     /**\n      * Creates a {@link RepositoryPresenter} for a @{link Repository} of a single item that will be\n@@ -110,18 +122,25 @@\n     RepositoryPresenter<TVal> forItem();\n \n     /**\n-     * Creates a {@link RepositoryPresenter} for a @{link Repository} of a {@link List} where each\n-     * item in the {@link List} will be bound to the {@link RecyclerView}.\n+     * Creates a {@link RepositoryPresenter} for a @{link Repository} of a {@link Result} where the\n+     * item in the {@link Result} will be bound to the @{link RecyclerView} if present.\n      */\n     @NonNull\n-    RepositoryPresenter<List<TVal>> forList();\n+    RepositoryPresenter<Result<TVal>> forResult();\n+  }\n+\n+  /**\n+   * Compiler state to compile for the specified container type of the associated\n+   * {@link Repository}.\n+   */\n+  interface RPCompile<TVal> extends RPItemCompile<TVal> {\n \n     /**\n-     * Creates a {@link RepositoryPresenter} for a @{link Repository} of a {@link Result} where the\n-     * item in the {@link Result} will be bound to the @{link RecyclerView} if present.\n+     * Creates a {@link RepositoryPresenter} for a @{link Repository} of a {@link List} where each\n+     * item in the {@link List} will be bound to the {@link RecyclerView}.\n      */\n     @NonNull\n-    RepositoryPresenter<Result<TVal>> forResult();\n+    RepositoryPresenter<List<TVal>> forList();\n \n     /**\n      * Creates a {@link RepositoryPresenter} for a @{link Repository} of a {@link Result} containing\n@@ -135,17 +154,33 @@\n   /**\n    * Compiler state allowing to specify Recycle or compile.\n    */\n-  interface RPRecycleCompile<TVal> extends RPRecycle<RPCompile<TVal>>, RPCompile<TVal> {}\n+  interface RPRecycleItemCompile<TVal, TRec>\n+      extends RPRecycle<TRec>, RPItemCompile<TVal> {}\n+\n+  /**\n+   * Compiler state allowing to specify view binder, view recycler, function or compile.\n+   */\n+  interface RPViewBinderRecycleItemCompile<TVal, TVBin>\n+      extends RPRecycleItemCompile<TVal, RPCompile<TVal>>,\n+      RPViewBinder<TVal, TVBin> {}\n+\n+  /**\n+   * Compiler state allowing to specify Recycle or compile.\n+   */\n+  interface RPRecycleCompile<TVal, TRec> extends RPRecycle<TRec>,\n+      RPCompile<TVal> {}\n \n   /**\n    * Compiler state allowing to specify view binder, view recycler, function or compile.\n    */\n-  interface RPViewBinderRecycleCompile<TVal> extends RPRecycleCompile<TVal>,\n-      RPViewBinder<TVal, RPRecycleCompile<TVal>> {}\n+  interface RPViewBinderRecycleCompile<TVal, TVBin> extends RPRecycleCompile<TVal, RPCompile<TVal>>,\n+      RPViewBinder<TVal, TVBin> {}\n \n   /**\n    * Compiler state allowing to specify view binder, view recycler, stable id function or compile.\n    */\n-  interface RPViewBinderRecycleStableIdCompile<TVal> extends RPViewBinderRecycleCompile<TVal>,\n-      RPStableId<TVal, RPViewBinderRecycleCompile<TVal>> {}\n+  interface RPViewBinderRecycleStableIdCompile<TVal, TVBRC>\n+      extends RPViewBinderRecycleCompile<TVal, TVBRC>,\n+      RPStableId<TVal, RPViewBinderRecycleCompile<TVal, RPRecycleCompile<TVal, RPCompile<TVal>>>,\n+          RPViewBinderRecycleItemCompile<TVal, RPRecycleItemCompile<TVal, RPCompile<TVal>>>> {}\n }"},{"sha":"21d560a7ac2f9d0c76d674fee0ac196c8cd67e10","filename":"extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenters.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/google/agera/blob/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenters.java","raw_url":"https://github.com/google/agera/raw/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenters.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenters.java?ref=a92431875792b1e8d7f0379ac68e9365eac70160","patch":"@@ -19,7 +19,9 @@\n import android.support.annotation.Nullable;\n import com.google.android.agera.Repository;\n import com.google.android.agera.Result;\n+import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPCompile;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPLayout;\n+import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPRecycleCompile;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPViewBinderRecycleStableIdCompile;\n import java.util.List;\n \n@@ -35,8 +37,9 @@\n    */\n   @SuppressWarnings({\"unchecked\", \"UnusedParameters\"})\n   @NonNull\n-  public static <T> RPLayout<T, RPViewBinderRecycleStableIdCompile<T>> repositoryPresenterOf(\n-      @Nullable final Class<T> type) {\n+  public static <T> RPLayout<T, RPViewBinderRecycleStableIdCompile<T,\n+      RPRecycleCompile<T, RPCompile<T>>>>\n+  repositoryPresenterOf(@Nullable final Class<T> type) {\n     return new RepositoryPresenterCompiler();\n   }\n "},{"sha":"a74d916b5d2e31c4e5296b04805afafd7d0cc3c2","filename":"extensions/rvadapter/src/test/java/com/google/android/agera/rvadapter/RepositoryPresentersTest.java","status":"modified","additions":35,"deletions":4,"changes":39,"blob_url":"https://github.com/google/agera/blob/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvadapter/src/test/java/com/google/android/agera/rvadapter/RepositoryPresentersTest.java","raw_url":"https://github.com/google/agera/raw/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvadapter/src/test/java/com/google/android/agera/rvadapter/RepositoryPresentersTest.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvadapter/src/test/java/com/google/android/agera/rvadapter/RepositoryPresentersTest.java?ref=a92431875792b1e8d7f0379ac68e9365eac70160","patch":"@@ -211,21 +211,47 @@ public void shouldGenerateLayoutForItemOfRepositoryPresenterOfResultList() {\n   }\n \n   @Test\n-  public void shouldHavePrivateConstructor() {\n-    assertThat(RepositoryPresenters.class, hasPrivateConstructor());\n+  public void shouldReturnStableIdForRepositoryPresenterOfResult() {\n+    final RepositoryPresenter<Result<String>> resultRepositoryPresenter =\n+        repositoryPresenterOf(String.class)\n+            .layout(LAYOUT_ID)\n+            .stableIdForItem(Functions.<String, Long>staticFunction(STABLE_ID))\n+            .forResult();\n+    assertThat(resultRepositoryPresenter.getItemId(STRING_RESULT, 0), is(STABLE_ID));\n   }\n \n+\n   @Test\n-  public void shouldReturnStableIdForRepositoryPresenterOfResult() {\n-    final RepositoryPresenter<Result<String>> resultRepositoryPresenter =\n+  public void shouldReturnStableIdForRepositoryPresenterOfItem() {\n+    final RepositoryPresenter<String> resultRepositoryPresenter =\n         repositoryPresenterOf(String.class)\n             .layout(LAYOUT_ID)\n             .stableIdForItem(Functions.<String, Long>staticFunction(STABLE_ID))\n+            .forItem();\n+    assertThat(resultRepositoryPresenter.getItemId(STRING, 0), is(STABLE_ID));\n+  }\n+\n+  @Test\n+  public void shouldReturnStaticStableIdForRepositoryPresenterOfResult() {\n+    final RepositoryPresenter<Result<String>> resultRepositoryPresenter =\n+        repositoryPresenterOf(String.class)\n+            .layout(LAYOUT_ID)\n+            .stableId(STABLE_ID)\n             .forResult();\n     assertThat(resultRepositoryPresenter.getItemId(STRING_RESULT, 0), is(STABLE_ID));\n   }\n \n   @Test\n+  public void shouldReturnStaticStableIdForRepositoryPresenterOfItem() {\n+    final RepositoryPresenter<String> resultRepositoryPresenter =\n+        repositoryPresenterOf(String.class)\n+            .layout(LAYOUT_ID)\n+            .stableId(STABLE_ID)\n+            .forItem();\n+    assertThat(resultRepositoryPresenter.getItemId(STRING, 0), is(STABLE_ID));\n+  }\n+\n+  @Test\n   public void shouldReturnStableIdForRepositoryPresenterOfResultList() {\n     final RepositoryPresenter<Result<List<String>>> resultListRepositoryPresenter =\n         repositoryPresenterOf(String.class)\n@@ -263,4 +289,9 @@ public void shouldAllowStableIdMethodForAnySuperType() {\n         .stableIdForItem(Functions.<CharSequence, Long>staticFunction(STABLE_ID))\n         .forResult();\n   }\n+\n+  @Test\n+  public void shouldHavePrivateConstructor() {\n+    assertThat(RepositoryPresenters.class, hasPrivateConstructor());\n+  }\n }"},{"sha":"dde42284b0f8ac0dba789baf4f36699749ac29d4","filename":"extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompiler.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/google/agera/blob/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompiler.java","raw_url":"https://github.com/google/agera/raw/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompiler.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompiler.java?ref=a92431875792b1e8d7f0379ac68e9365eac70160","patch":"@@ -40,11 +40,12 @@\n import com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenterCompilerStates.DBRPHandlerStableIdRecycleCompile;\n import com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenterCompilerStates.DBRPItemBinding;\n import java.lang.ref.WeakReference;\n+import com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenterCompilerStates.DBRPRecycleItemCompile;\n import java.util.List;\n \n @SuppressWarnings(\"unchecked\")\n-final class DataBindingRepositoryPresenterCompiler\n-    implements DBRPItemBinding, DBRPHandlerStableIdRecycleCompile, RPLayout {\n+final class DataBindingRepositoryPresenterCompiler implements DBRPItemBinding,\n+    DBRPHandlerStableIdRecycleCompile, DBRPRecycleItemCompile, RPLayout {\n   @NonNull\n   private final SparseArray<Object> handlers;\n   private Function<Object, Integer> layoutFactory;\n@@ -130,6 +131,13 @@ public Object stableIdForItem(@NonNull final Function stableIdForItem) {\n \n   @NonNull\n   @Override\n+  public Object stableId(final long stableId) {\n+    this.stableIdForItem = staticFunction(stableId);\n+    return this;\n+  }\n+\n+  @NonNull\n+  @Override\n   public Object onRecycle(@RecycleConfig final int recycleConfig) {\n     this.recycleConfig = recycleConfig;\n     return this;"},{"sha":"03504c26418c43acdf77a0e6ba5b52265bafca71","filename":"extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompilerStates.java","status":"modified","additions":14,"deletions":6,"changes":20,"blob_url":"https://github.com/google/agera/blob/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompilerStates.java","raw_url":"https://github.com/google/agera/raw/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompilerStates.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompilerStates.java?ref=a92431875792b1e8d7f0379ac68e9365eac70160","patch":"@@ -20,6 +20,7 @@\n import com.google.android.agera.Repository;\n import com.google.android.agera.rvadapter.RepositoryPresenter;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPCompile;\n+import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPItemCompile;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPStableId;\n \n /**\n@@ -75,18 +76,25 @@\n   /**\n    * Compiler state allowing to specify handlers, stable id, recycle strategy or compile.\n    */\n-  interface DBRPHandlerStableIdRecycleCompile<TVal>\n-      extends DBRPHandlerBinding<DBRPHandlerStableIdRecycleCompile<TVal>>,\n-      DBRPStableIdRecycleCompile<TVal> {}\n+  interface DBRPHandlerStableIdRecycleCompile<TVal, TCom>\n+      extends DBRPHandlerBinding<DBRPHandlerStableIdRecycleCompile<TVal, TCom>>,\n+      DBRPStableIdRecycleCompile<TVal, TCom, RPItemCompile<TVal>> {}\n \n   /**\n    * Compiler state allowing to specify stable id, recycle strategy or compile.\n    */\n-  interface DBRPStableIdRecycleCompile<TVal>\n-      extends RPStableId<TVal, DBRPRecycleCompile<TVal>>, DBRPRecycleCompile<TVal> {}\n+  interface DBRPStableIdRecycleCompile<TVal, TCom, TICom>\n+      extends RPStableId<TVal, DBRPRecycleCompile<TVal, TCom>,\n+      DBRPRecycleItemCompile<TVal, TICom>>, DBRPRecycleCompile<TVal, TCom> {}\n \n   /**\n    * Compiler state allowing to specify recycle strategy or compile.\n    */\n-  interface DBRPRecycleCompile<TVal> extends RPCompile<TVal>, DBRPRecycle<RPCompile<TVal>> {}\n+  interface DBRPRecycleCompile<TVal, TRec> extends RPCompile<TVal>, DBRPRecycle<TRec> {}\n+\n+  /**\n+   * Compiler state allowing to specify recycle strategy or compile.\n+   */\n+  interface DBRPRecycleItemCompile<TVal, TRec>\n+      extends RPItemCompile<TVal>, DBRPRecycle<TRec> {}\n }"},{"sha":"d9a4e0f14709700b123206c64daa77937f2b3ee3","filename":"extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenters.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/google/agera/blob/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenters.java","raw_url":"https://github.com/google/agera/raw/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenters.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenters.java?ref=a92431875792b1e8d7f0379ac68e9365eac70160","patch":"@@ -19,6 +19,7 @@\n import android.support.annotation.Nullable;\n import com.google.android.agera.Repository;\n import com.google.android.agera.rvadapter.RepositoryPresenter;\n+import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPCompile;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPLayout;\n import com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenterCompilerStates.DBRPHandlerStableIdRecycleCompile;\n import com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenterCompilerStates.DBRPItemBinding;\n@@ -75,7 +76,8 @@\n \n   @SuppressWarnings(\"unchecked\")\n   @NonNull\n-  public static <T> RPLayout<T, DBRPItemBinding<T, DBRPHandlerStableIdRecycleCompile<T>>>\n+  public static <T> RPLayout<T, DBRPItemBinding<T,\n+      DBRPHandlerStableIdRecycleCompile<T, RPCompile<T>>>>\n   dataBindingRepositoryPresenterOf(@Nullable final Class<T> type) {\n     return new DataBindingRepositoryPresenterCompiler();\n   }"},{"sha":"d8badfa21c9508b01979b03a3d3acf2373a353a6","filename":"extensions/rvdatabinding/src/test/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresentersTest.java","status":"modified","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/google/agera/blob/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvdatabinding/src/test/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresentersTest.java","raw_url":"https://github.com/google/agera/raw/a92431875792b1e8d7f0379ac68e9365eac70160/extensions/rvdatabinding/src/test/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresentersTest.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvdatabinding/src/test/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresentersTest.java?ref=a92431875792b1e8d7f0379ac68e9365eac70160","patch":"@@ -524,6 +524,17 @@ public void shouldGenerateItemIdForItemOfRepositoryPresenterOfResultList() {\n   }\n \n   @Test\n+  public void shouldReturnStableIdForRepositoryPresenterOfItem() {\n+    final RepositoryPresenter<String> resultRepositoryPresenter =\n+        dataBindingRepositoryPresenterOf(String.class)\n+            .layout(LAYOUT_ID)\n+            .itemId(ITEM_ID)\n+            .stableIdForItem(Functions.<String, Long>staticFunction(STABLE_ID))\n+        .forItem();\n+    assertThat(resultRepositoryPresenter.getItemId(STRING, 0), is(STABLE_ID));\n+  }\n+\n+  @Test\n   public void shouldReturnStableIdForRepositoryPresenterOfResult() {\n     final RepositoryPresenter<Result<String>> resultRepositoryPresenter =\n         dataBindingRepositoryPresenterOf(String.class)\n@@ -534,6 +545,29 @@ public void shouldReturnStableIdForRepositoryPresenterOfResult() {\n     assertThat(resultRepositoryPresenter.getItemId(STRING_RESULT, 0), is(STABLE_ID));\n   }\n \n+\n+  @Test\n+  public void shouldReturnStaticStableIdForRepositoryPresenterOfItem() {\n+    final RepositoryPresenter<String> resultRepositoryPresenter =\n+        dataBindingRepositoryPresenterOf(String.class)\n+            .layout(LAYOUT_ID)\n+            .itemId(ITEM_ID)\n+            .stableId(STABLE_ID)\n+            .forItem();\n+    assertThat(resultRepositoryPresenter.getItemId(STRING, 0), is(STABLE_ID));\n+  }\n+\n+  @Test\n+  public void shouldReturnStaticStableIdForRepositoryPresenterOfResult() {\n+    final RepositoryPresenter<Result<String>> resultRepositoryPresenter =\n+        dataBindingRepositoryPresenterOf(String.class)\n+            .layout(LAYOUT_ID)\n+            .itemId(ITEM_ID)\n+            .stableId(STABLE_ID)\n+            .forResult();\n+    assertThat(resultRepositoryPresenter.getItemId(STRING_RESULT, 0), is(STABLE_ID));\n+  }\n+\n   @Test\n   public void shouldReturnStableIdForRepositoryPresenterOfResultList() {\n     final RepositoryPresenter<Result<List<String>>> resultListRepositoryPresenter ="}]}