{"sha":"5e518b7b05f9e7a34a314945f68deff7b2c3e334","commit":{"author":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-05-19T17:52:56Z"},"committer":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-05-19T17:52:56Z"},"message":"Collapsed testapp with retrolambda","tree":{"sha":"b3c2768fbcced8fa6bf25d40e7f13160753c59f7","url":"https://api.github.com/repos/google/agera/git/trees/b3c2768fbcced8fa6bf25d40e7f13160753c59f7"},"url":"https://api.github.com/repos/google/agera/git/commits/5e518b7b05f9e7a34a314945f68deff7b2c3e334","comment_count":0},"url":"https://api.github.com/repos/google/agera/commits/5e518b7b05f9e7a34a314945f68deff7b2c3e334","html_url":"https://github.com/google/agera/commit/5e518b7b05f9e7a34a314945f68deff7b2c3e334","comments_url":"https://api.github.com/repos/google/agera/commits/5e518b7b05f9e7a34a314945f68deff7b2c3e334/comments","author":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"committer":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"parents":[{"sha":"42c7440a3851c594d19316f45f45b3c21a2d0ece","url":"https://api.github.com/repos/google/agera/commits/42c7440a3851c594d19316f45f45b3c21a2d0ece","html_url":"https://github.com/google/agera/commit/42c7440a3851c594d19316f45f45b3c21a2d0ece"}],"stats":{"total":539,"additions":111,"deletions":428},"files":[{"sha":"fd595771391ca4d1b6d730ea5318a85483a854a3","filename":"agera/build.gradle","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/google/agera/blob/5e518b7b05f9e7a34a314945f68deff7b2c3e334/agera/build.gradle","raw_url":"https://github.com/google/agera/raw/5e518b7b05f9e7a34a314945f68deff7b2c3e334/agera/build.gradle","contents_url":"https://api.github.com/repos/google/agera/contents/agera/build.gradle?ref=5e518b7b05f9e7a34a314945f68deff7b2c3e334","patch":"@@ -18,6 +18,13 @@ apply plugin: 'com.github.dcendents.android-maven'\n apply plugin: 'com.novoda.bintray-release'\n apply plugin: 'jacoco'\n \n+android {\n+    compileOptions {\n+        sourceCompatibility gradle.javaVersion\n+        targetCompatibility gradle.javaVersion\n+    }\n+}\n+\n publish {\n     userOrg = gradle.bintrayUser\n     uploadName = gradle.bintrayName"},{"sha":"2ce125d29a58342dd41049bf873ecef2641de5c4","filename":"extensions/content/build.gradle","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/google/agera/blob/5e518b7b05f9e7a34a314945f68deff7b2c3e334/extensions/content/build.gradle","raw_url":"https://github.com/google/agera/raw/5e518b7b05f9e7a34a314945f68deff7b2c3e334/extensions/content/build.gradle","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/content/build.gradle?ref=5e518b7b05f9e7a34a314945f68deff7b2c3e334","patch":"@@ -22,6 +22,13 @@ dependencies {\n     compile project(':agera')\n }\n \n+android {\n+    compileOptions {\n+        sourceCompatibility gradle.javaVersion\n+        targetCompatibility gradle.javaVersion\n+    }\n+}\n+\n publish {\n     userOrg = gradle.bintrayUser\n     uploadName = gradle.bintrayName"},{"sha":"9b54a8bc89deebbf55c1b4dd18a838c7390a8038","filename":"extensions/database/build.gradle","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/google/agera/blob/5e518b7b05f9e7a34a314945f68deff7b2c3e334/extensions/database/build.gradle","raw_url":"https://github.com/google/agera/raw/5e518b7b05f9e7a34a314945f68deff7b2c3e334/extensions/database/build.gradle","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/database/build.gradle?ref=5e518b7b05f9e7a34a314945f68deff7b2c3e334","patch":"@@ -22,6 +22,13 @@ dependencies {\n     compile project(':agera')\n }\n \n+android {\n+    compileOptions {\n+        sourceCompatibility gradle.javaVersion\n+        targetCompatibility gradle.javaVersion\n+    }\n+}\n+\n publish {\n     userOrg = gradle.bintrayUser\n     uploadName = gradle.bintrayName"},{"sha":"806a820292f9f86695b0ef0aa1b2d9a58ceef977","filename":"extensions/net/build.gradle","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/google/agera/blob/5e518b7b05f9e7a34a314945f68deff7b2c3e334/extensions/net/build.gradle","raw_url":"https://github.com/google/agera/raw/5e518b7b05f9e7a34a314945f68deff7b2c3e334/extensions/net/build.gradle","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/net/build.gradle?ref=5e518b7b05f9e7a34a314945f68deff7b2c3e334","patch":"@@ -22,6 +22,13 @@ dependencies {\n     compile project(':agera')\n }\n \n+android {\n+    compileOptions {\n+        sourceCompatibility gradle.javaVersion\n+        targetCompatibility gradle.javaVersion\n+    }\n+}\n+\n publish {\n     userOrg = gradle.bintrayUser\n     uploadName = gradle.bintrayName"},{"sha":"fb20350a81829b0368e37529fc8eb3d94950189e","filename":"extensions/rvadapter/build.gradle","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/google/agera/blob/5e518b7b05f9e7a34a314945f68deff7b2c3e334/extensions/rvadapter/build.gradle","raw_url":"https://github.com/google/agera/raw/5e518b7b05f9e7a34a314945f68deff7b2c3e334/extensions/rvadapter/build.gradle","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvadapter/build.gradle?ref=5e518b7b05f9e7a34a314945f68deff7b2c3e334","patch":"@@ -23,6 +23,13 @@ dependencies {\n     compile \"com.android.support:recyclerview-v7:$gradle.supportLibraryVersion\"\n }\n \n+android {\n+    compileOptions {\n+        sourceCompatibility gradle.javaVersion\n+        targetCompatibility gradle.javaVersion\n+    }\n+}\n+\n publish {\n     userOrg = gradle.bintrayUser\n     uploadName = gradle.bintrayName"},{"sha":"f9979c60eb3871e497bff5a76ff1c90c832e9d64","filename":"settings.gradle","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/google/agera/blob/5e518b7b05f9e7a34a314945f68deff7b2c3e334/settings.gradle","raw_url":"https://github.com/google/agera/raw/5e518b7b05f9e7a34a314945f68deff7b2c3e334/settings.gradle","contents_url":"https://api.github.com/repos/google/agera/contents/settings.gradle?ref=5e518b7b05f9e7a34a314945f68deff7b2c3e334","patch":"@@ -46,6 +46,7 @@ gradle.allprojects {\n             jcenter()\n         }\n         dependencies {\n+            classpath 'me.tatarka:gradle-retrolambda:3.2.5'\n             classpath 'com.android.tools.build:gradle:2.1.0'\n             classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'\n             classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.3.1'\n@@ -76,10 +77,6 @@ gradle.allprojects {\n                     versionCode gradle.versionCode\n                     versionName gradle.versionName\n                 }\n-                compileOptions {\n-                    sourceCompatibility gradle.javaVersion\n-                    targetCompatibility gradle.javaVersion\n-                }\n             }\n             if (android.hasProperty('libraryVariants')) {\n                 version = gradle.versionName"},{"sha":"cffdcbab9327a06e65debaaafbdf1b2f29a75999","filename":"testapp/build.gradle","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/google/agera/blob/5e518b7b05f9e7a34a314945f68deff7b2c3e334/testapp/build.gradle","raw_url":"https://github.com/google/agera/raw/5e518b7b05f9e7a34a314945f68deff7b2c3e334/testapp/build.gradle","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/build.gradle?ref=5e518b7b05f9e7a34a314945f68deff7b2c3e334","patch":"@@ -15,6 +15,7 @@\n  */\n apply plugin: 'com.android.application'\n apply plugin: 'com.getkeepsafe.dexcount'\n+apply plugin: 'me.tatarka.retrolambda'\n \n android {\n     compileSdkVersion gradle.ext.compileSdkVersion\n@@ -23,6 +24,10 @@ android {\n         applicationId \"com.google.android.agera.testapp\"\n         testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n     }\n+    compileOptions {\n+        sourceCompatibility JavaVersion.VERSION_1_8\n+        targetCompatibility JavaVersion.VERSION_1_8\n+    }\n     lintOptions {\n         abortOnError false\n         textReport true"},{"sha":"51cafe257b089960ac17cddd461ed03accf4003e","filename":"testapp/src/main/java/com/google/android/agera/testapp/AddOnClickListener.java","status":"removed","additions":0,"deletions":43,"changes":43,"blob_url":"https://github.com/google/agera/blob/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/AddOnClickListener.java","raw_url":"https://github.com/google/agera/raw/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/AddOnClickListener.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/AddOnClickListener.java?ref=42c7440a3851c594d19316f45f45b3c21a2d0ece","patch":"@@ -1,43 +0,0 @@\n-/*\n- * Copyright 2016 Google Inc. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.google.android.agera.testapp;\n-\n-import static com.google.android.agera.Preconditions.checkNotNull;\n-\n-import android.app.AlertDialog;\n-import android.support.annotation.NonNull;\n-import android.view.View;\n-import android.widget.EditText;\n-\n-final class AddOnClickListener implements View.OnClickListener {\n-  @NonNull\n-  private final NotesStore notesStore;\n-\n-  public AddOnClickListener(@NonNull final NotesStore notesStore) {\n-    this.notesStore = checkNotNull(notesStore);\n-  }\n-\n-  @Override\n-  public void onClick(@NonNull final View view) {\n-    final EditText editText = new EditText(view.getContext());\n-    editText.setId(R.id.edit);\n-    new AlertDialog.Builder(view.getContext())\n-        .setTitle(R.string.add_note)\n-        .setView(editText)\n-        .setPositiveButton(R.string.add, new AddedOnClickListener(notesStore, editText))\n-        .create().show();\n-  }\n-}"},{"sha":"beb48dbeb6a47d783e6858167c466b0e7a0d7cbf","filename":"testapp/src/main/java/com/google/android/agera/testapp/AddedOnClickListener.java","status":"removed","additions":0,"deletions":40,"changes":40,"blob_url":"https://github.com/google/agera/blob/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/AddedOnClickListener.java","raw_url":"https://github.com/google/agera/raw/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/AddedOnClickListener.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/AddedOnClickListener.java?ref=42c7440a3851c594d19316f45f45b3c21a2d0ece","patch":"@@ -1,40 +0,0 @@\n-/*\n- * Copyright 2016 Google Inc. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.google.android.agera.testapp;\n-\n-import static com.google.android.agera.Preconditions.checkNotNull;\n-\n-import android.content.DialogInterface;\n-import android.support.annotation.NonNull;\n-import android.widget.EditText;\n-\n-final class AddedOnClickListener implements DialogInterface.OnClickListener {\n-  @NonNull\n-  private final EditText editText;\n-  @NonNull\n-  private final NotesStore notesStore;\n-\n-  public AddedOnClickListener(@NonNull final NotesStore notesStore,\n-      @NonNull final EditText editText) {\n-    this.editText = checkNotNull(editText);\n-    this.notesStore = checkNotNull(notesStore);\n-  }\n-\n-  @Override\n-  public void onClick(@NonNull final DialogInterface dialogInterface, final int i) {\n-    notesStore.insertNoteFromText(editText.getText().toString());\n-  }\n-}"},{"sha":"6945ea79d3860b94bb6e7e41d12b44753b98c21f","filename":"testapp/src/main/java/com/google/android/agera/testapp/ClearOnClickListener.java","status":"removed","additions":0,"deletions":35,"changes":35,"blob_url":"https://github.com/google/agera/blob/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/ClearOnClickListener.java","raw_url":"https://github.com/google/agera/raw/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/ClearOnClickListener.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/ClearOnClickListener.java?ref=42c7440a3851c594d19316f45f45b3c21a2d0ece","patch":"@@ -1,35 +0,0 @@\n-/*\n- * Copyright 2016 Google Inc. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.google.android.agera.testapp;\n-\n-import static com.google.android.agera.Preconditions.checkNotNull;\n-\n-import android.support.annotation.NonNull;\n-import android.view.View;\n-\n-final class ClearOnClickListener implements View.OnClickListener {\n-  @NonNull\n-  private final NotesStore notesStore;\n-\n-  public ClearOnClickListener(@NonNull final NotesStore notesStore) {\n-    this.notesStore = checkNotNull(notesStore);\n-  }\n-\n-  @Override\n-  public void onClick(final View view) {\n-    notesStore.clearNotes();\n-  }\n-}"},{"sha":"013f3bfb638649e8251698c846284d227385ebd7","filename":"testapp/src/main/java/com/google/android/agera/testapp/DeleteOnLongClickListener.java","status":"removed","additions":0,"deletions":40,"changes":40,"blob_url":"https://github.com/google/agera/blob/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/DeleteOnLongClickListener.java","raw_url":"https://github.com/google/agera/raw/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/DeleteOnLongClickListener.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/DeleteOnLongClickListener.java?ref=42c7440a3851c594d19316f45f45b3c21a2d0ece","patch":"@@ -1,40 +0,0 @@\n-/*\n- * Copyright 2016 Google Inc. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.google.android.agera.testapp;\n-\n-import static com.google.android.agera.Preconditions.checkNotNull;\n-\n-import android.support.annotation.NonNull;\n-import android.view.View;\n-\n-final class DeleteOnLongClickListener implements View.OnLongClickListener {\n-  @NonNull\n-  private final Note note;\n-  @NonNull\n-  private final NotesStore notesStore;\n-\n-  public DeleteOnLongClickListener(@NonNull final NotesStore notesStore,\n-      @NonNull final Note note) {\n-    this.note = checkNotNull(note);\n-    this.notesStore = checkNotNull(notesStore);\n-  }\n-\n-  @Override\n-  public boolean onLongClick(final View view) {\n-    notesStore.deleteNote(note);\n-    return true;\n-  }\n-}"},{"sha":"bb9cf8aba751241fd4da067cbc970979fddb092b","filename":"testapp/src/main/java/com/google/android/agera/testapp/EditOnClickListener.java","status":"removed","additions":0,"deletions":47,"changes":47,"blob_url":"https://github.com/google/agera/blob/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/EditOnClickListener.java","raw_url":"https://github.com/google/agera/raw/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/EditOnClickListener.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/EditOnClickListener.java?ref=42c7440a3851c594d19316f45f45b3c21a2d0ece","patch":"@@ -1,47 +0,0 @@\n-/*\n- * Copyright 2016 Google Inc. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.google.android.agera.testapp;\n-\n-import static com.google.android.agera.Preconditions.checkNotNull;\n-\n-import android.app.AlertDialog;\n-import android.support.annotation.NonNull;\n-import android.view.View;\n-import android.widget.EditText;\n-\n-final class EditOnClickListener implements View.OnClickListener {\n-  @NonNull\n-  private final Note note;\n-  @NonNull\n-  private final NotesStore notesStore;\n-\n-  public EditOnClickListener(@NonNull final NotesStore notesStore, @NonNull final Note note) {\n-    this.note = checkNotNull(note);\n-    this.notesStore = checkNotNull(notesStore);\n-  }\n-\n-  @Override\n-  public void onClick(final View view) {\n-    final EditText editText = new EditText(view.getContext());\n-    editText.setId(R.id.edit);\n-    editText.setText(note.getNote());\n-    new AlertDialog.Builder(view.getContext())\n-        .setTitle(R.string.edit_note)\n-        .setView(editText)\n-        .setPositiveButton(R.string.edit, new EditedOnClickListener(notesStore, note, editText))\n-        .create().show();\n-  }\n-}"},{"sha":"d85da0584b0f4e12bea5d595ab3a06786f282465","filename":"testapp/src/main/java/com/google/android/agera/testapp/EditedOnClickListener.java","status":"removed","additions":0,"deletions":43,"changes":43,"blob_url":"https://github.com/google/agera/blob/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/EditedOnClickListener.java","raw_url":"https://github.com/google/agera/raw/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/EditedOnClickListener.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/EditedOnClickListener.java?ref=42c7440a3851c594d19316f45f45b3c21a2d0ece","patch":"@@ -1,43 +0,0 @@\n-/*\n- * Copyright 2016 Google Inc. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.google.android.agera.testapp;\n-\n-import static com.google.android.agera.Preconditions.checkNotNull;\n-\n-import android.content.DialogInterface;\n-import android.support.annotation.NonNull;\n-import android.widget.EditText;\n-\n-final class EditedOnClickListener implements DialogInterface.OnClickListener {\n-  @NonNull\n-  private final Note note;\n-  @NonNull\n-  private final EditText editText;\n-  @NonNull\n-  private final NotesStore notesStore;\n-\n-  public EditedOnClickListener(@NonNull final NotesStore notesStore, @NonNull final Note note,\n-      @NonNull final EditText editText) {\n-    this.note = checkNotNull(note);\n-    this.editText = checkNotNull(editText);\n-    this.notesStore = checkNotNull(notesStore);\n-  }\n-\n-  @Override\n-  public void onClick(@NonNull final DialogInterface dialogInterface, final int i) {\n-    notesStore.updateNote(note, editText.getText().toString());\n-  }\n-}"},{"sha":"25febfd0d280e433f21439fd55432b568f38f1e2","filename":"testapp/src/main/java/com/google/android/agera/testapp/HttpResponseToBitmap.java","status":"removed","additions":0,"deletions":35,"changes":35,"blob_url":"https://github.com/google/agera/blob/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/HttpResponseToBitmap.java","raw_url":"https://github.com/google/agera/raw/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/HttpResponseToBitmap.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/HttpResponseToBitmap.java?ref=42c7440a3851c594d19316f45f45b3c21a2d0ece","patch":"@@ -1,35 +0,0 @@\n-/*\n- * Copyright 2016 Google Inc. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.google.android.agera.testapp;\n-\n-import static android.graphics.BitmapFactory.decodeByteArray;\n-import static com.google.android.agera.Result.absentIfNull;\n-\n-import com.google.android.agera.Function;\n-import com.google.android.agera.Result;\n-import com.google.android.agera.net.HttpResponse;\n-\n-import android.graphics.Bitmap;\n-import android.support.annotation.NonNull;\n-\n-final class HttpResponseToBitmap implements Function<HttpResponse, Result<Bitmap>> {\n-  @NonNull\n-  @Override\n-  public Result<Bitmap> apply(@NonNull final HttpResponse input) {\n-    final byte[] body = input.getBody();\n-    return absentIfNull(decodeByteArray(body, 0, body.length));\n-  }\n-}"},{"sha":"70d8e71b4a79aa949b1a1718e66dc0cc4627485a","filename":"testapp/src/main/java/com/google/android/agera/testapp/ImageViewBitmapReceiver.java","status":"removed","additions":0,"deletions":38,"changes":38,"blob_url":"https://github.com/google/agera/blob/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/ImageViewBitmapReceiver.java","raw_url":"https://github.com/google/agera/raw/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/ImageViewBitmapReceiver.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/ImageViewBitmapReceiver.java?ref=42c7440a3851c594d19316f45f45b3c21a2d0ece","patch":"@@ -1,38 +0,0 @@\n-/*\n- * Copyright 2016 Google Inc. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.google.android.agera.testapp;\n-\n-import static com.google.android.agera.Preconditions.checkNotNull;\n-\n-import com.google.android.agera.Receiver;\n-\n-import android.graphics.Bitmap;\n-import android.support.annotation.NonNull;\n-import android.widget.ImageView;\n-\n-final class ImageViewBitmapReceiver implements Receiver<Bitmap> {\n-  @NonNull\n-  private final ImageView imageView;\n-\n-  public ImageViewBitmapReceiver(@NonNull final ImageView imageView) {\n-    this.imageView = checkNotNull(imageView);\n-  }\n-\n-  @Override\n-  public void accept(@NonNull final Bitmap value) {\n-    imageView.setImageBitmap(value);\n-  }\n-}"},{"sha":"6bf73d6b106f82c7a46d41c4fd274316723d0b6e","filename":"testapp/src/main/java/com/google/android/agera/testapp/NotePresenter.java","status":"modified","additions":17,"deletions":2,"changes":19,"blob_url":"https://github.com/google/agera/blob/5e518b7b05f9e7a34a314945f68deff7b2c3e334/testapp/src/main/java/com/google/android/agera/testapp/NotePresenter.java","raw_url":"https://github.com/google/agera/raw/5e518b7b05f9e7a34a314945f68deff7b2c3e334/testapp/src/main/java/com/google/android/agera/testapp/NotePresenter.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/NotePresenter.java?ref=5e518b7b05f9e7a34a314945f68deff7b2c3e334","patch":"@@ -19,8 +19,10 @@\n \n import com.google.android.agera.rvadapter.RepositoryPresenter;\n \n+import android.app.AlertDialog;\n import android.support.annotation.NonNull;\n import android.support.v7.widget.RecyclerView;\n+import android.widget.EditText;\n import android.widget.TextView;\n \n import java.util.List;\n@@ -49,7 +51,20 @@ public void bind(@NonNull final List<Note> notes, final int index,\n     final Note note = notes.get(index);\n     final TextView view = (TextView) holder.itemView;\n     view.setText(note.getNote());\n-    view.setOnClickListener(new EditOnClickListener(notesStore, note));\n-    view.setOnLongClickListener(new DeleteOnLongClickListener(notesStore, note));\n+    view.setOnClickListener(v -> {\n+      final EditText editText = new EditText(v.getContext());\n+      editText.setId(R.id.edit);\n+      editText.setText(note.getNote());\n+      new AlertDialog.Builder(v.getContext())\n+          .setTitle(R.string.edit_note)\n+          .setView(editText)\n+          .setPositiveButton(R.string.edit,\n+              (d, i) -> notesStore.updateNote(note, editText.getText().toString()))\n+          .create().show();\n+    });\n+    view.setOnLongClickListener(v -> {\n+      notesStore.deleteNote(note);\n+      return true;\n+    });\n   }\n }"},{"sha":"e4aae179454bd8c5a55035337cc230c5483faad0","filename":"testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java","status":"modified","additions":33,"deletions":24,"changes":57,"blob_url":"https://github.com/google/agera/blob/5e518b7b05f9e7a34a314945f68deff7b2c3e334/testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java","raw_url":"https://github.com/google/agera/raw/5e518b7b05f9e7a34a314945f68deff7b2c3e334/testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java?ref=5e518b7b05f9e7a34a314945f68deff7b2c3e334","patch":"@@ -15,45 +15,44 @@\n  */\n package com.google.android.agera.testapp;\n \n+import static android.graphics.BitmapFactory.decodeByteArray;\n import static android.os.StrictMode.ThreadPolicy;\n import static android.os.StrictMode.VmPolicy;\n import static android.os.StrictMode.setThreadPolicy;\n import static android.os.StrictMode.setVmPolicy;\n import static com.google.android.agera.Repositories.repositoryWithInitialValue;\n import static com.google.android.agera.RepositoryConfig.SEND_INTERRUPT;\n-import static com.google.android.agera.Suppliers.staticSupplier;\n+import static com.google.android.agera.Result.absentIfNull;\n import static com.google.android.agera.net.HttpFunctions.httpFunction;\n+import static com.google.android.agera.net.HttpRequests.httpGetRequest;\n import static com.google.android.agera.rvadapter.RepositoryAdapter.repositoryAdapter;\n import static com.google.android.agera.testapp.NotesStore.notesStore;\n import static java.util.concurrent.Executors.newSingleThreadExecutor;\n \n-import com.google.android.agera.Receiver;\n import com.google.android.agera.Repository;\n import com.google.android.agera.Result;\n import com.google.android.agera.Updatable;\n import com.google.android.agera.rvadapter.RepositoryAdapter;\n \n import android.app.Activity;\n+import android.app.AlertDialog;\n import android.graphics.Bitmap;\n import android.os.Bundle;\n import android.support.v7.widget.LinearLayoutManager;\n import android.support.v7.widget.RecyclerView;\n import android.util.DisplayMetrics;\n+import android.widget.EditText;\n import android.widget.ImageView;\n \n import java.util.concurrent.Executor;\n \n-public final class NotesActivity extends Activity implements Updatable {\n-  private static final UrlToHttpRequest URL_TO_HTTP_REQUEST = new UrlToHttpRequest();\n-  private static final HttpResponseToBitmap HTTP_RESPONSE_TO_BITMAP = new HttpResponseToBitmap();\n+public final class NotesActivity extends Activity {\n   private static final Executor networkExecutor = newSingleThreadExecutor();\n   private static final Executor calculationExecutor = newSingleThreadExecutor();\n-  private static final String BACKGROUND_URL =\n-      \"http://www.gravatar.com/avatar/4df6f4fe5976df17deeea19443d4429d\";\n \n   private RepositoryAdapter adapter;\n   private Repository<Result<Bitmap>> backgroundRepository;\n-  private Receiver<Bitmap> setBackgroundReceiver;\n+  private Updatable updatable;\n \n   @Override\n   protected void onCreate(final Bundle savedInstanceState) {\n@@ -68,11 +67,21 @@ protected void onCreate(final Bundle savedInstanceState) {\n     final NotesStore notesStore = notesStore(getApplicationContext());\n \n     // Find the clear button and wire the click listener to call the clear notes updatable\n-    findViewById(R.id.clear).setOnClickListener(new ClearOnClickListener(notesStore));\n+    findViewById(R.id.clear).setOnClickListener(v -> notesStore.clearNotes());\n \n     // Find the add button and wire the click listener to show a dialog that in turn calls the add\n     // note from text from the notes store when adding notes\n-    findViewById(R.id.add).setOnClickListener(new AddOnClickListener(notesStore));\n+    findViewById(R.id.add).setOnClickListener(v -> {\n+      final EditText editText = new EditText(v.getContext());\n+      editText.setId(R.id.edit);\n+      new AlertDialog.Builder(v.getContext())\n+          .setTitle(R.string.add_note)\n+          .setView(editText)\n+          .setPositiveButton(R.string.add, (d, i) -> {\n+            notesStore.insertNoteFromText(editText.getText().toString());\n+          })\n+          .create().show();\n+    });\n \n     // Create a repository adapter, wiring up the notes repository from the store with a presenter\n     adapter = repositoryAdapter()\n@@ -84,42 +93,42 @@ protected void onCreate(final Bundle savedInstanceState) {\n     recyclerView.setAdapter(adapter);\n     recyclerView.setLayoutManager(new LinearLayoutManager(this));\n \n-    setBackgroundReceiver = new ImageViewBitmapReceiver((ImageView) findViewById(R.id.background));\n-\n     final DisplayMetrics displayMetrics = getResources().getDisplayMetrics();\n \n     backgroundRepository = repositoryWithInitialValue(Result.<Bitmap>absent())\n         .observe()\n         .onUpdatesPerLoop()\n         .goTo(networkExecutor)\n-        .getFrom(staticSupplier(BACKGROUND_URL\n-            + \"?s=\" + Math.max(displayMetrics.heightPixels, displayMetrics.widthPixels)))\n-        .transform(URL_TO_HTTP_REQUEST)\n-        .attemptTransform(httpFunction()).orSkip()\n+        .getFrom(() -> \"http://www.gravatar.com/avatar/4df6f4fe5976df17deeea19443d4429d?s=\"\n+            + Math.max(displayMetrics.heightPixels, displayMetrics.widthPixels))\n+        .transform(url -> httpGetRequest(url).compile())\n+        .attemptTransform(httpFunction()).orEnd(Result::failure)\n         .goTo(calculationExecutor)\n-        .thenTransform(HTTP_RESPONSE_TO_BITMAP)\n+        .thenTransform(input -> {\n+          final byte[] body = input.getBody();\n+          return absentIfNull(decodeByteArray(body, 0, body.length));\n+        })\n         .onDeactivation(SEND_INTERRUPT)\n         .compile();\n+\n+    final ImageView imageView = (ImageView) findViewById(R.id.background);\n+\n+    updatable = () -> backgroundRepository.get().ifSucceededSendTo(imageView::setImageBitmap);\n   }\n \n   @Override\n   protected void onResume() {\n     super.onResume();\n     // The adapter is dormant before start observing is called\n     adapter.startObserving();\n-    backgroundRepository.addUpdatable(this);\n+    backgroundRepository.addUpdatable(updatable);\n   }\n \n   @Override\n   protected void onPause() {\n     super.onPause();\n     // Start observing needs to be paired with stop observing\n     adapter.stopObserving();\n-    backgroundRepository.removeUpdatable(this);\n-  }\n-\n-  @Override\n-  public void update() {\n-    backgroundRepository.get().ifSucceededSendTo(setBackgroundReceiver);\n+    backgroundRepository.removeUpdatable(updatable);\n   }\n }\n\\ No newline at end of file"},{"sha":"9651afe8022ff87908fa03df9ff09ba8543f49c6","filename":"testapp/src/main/java/com/google/android/agera/testapp/NotesStore.java","status":"modified","additions":20,"deletions":46,"changes":66,"blob_url":"https://github.com/google/agera/blob/5e518b7b05f9e7a34a314945f68deff7b2c3e334/testapp/src/main/java/com/google/android/agera/testapp/NotesStore.java","raw_url":"https://github.com/google/agera/raw/5e518b7b05f9e7a34a314945f68deff7b2c3e334/testapp/src/main/java/com/google/android/agera/testapp/NotesStore.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/NotesStore.java?ref=5e518b7b05f9e7a34a314945f68deff7b2c3e334","patch":"@@ -21,7 +21,6 @@\n import static com.google.android.agera.RepositoryConfig.SEND_INTERRUPT;\n import static com.google.android.agera.Reservoirs.reservoir;\n import static com.google.android.agera.Result.failure;\n-import static com.google.android.agera.Suppliers.staticSupplier;\n import static com.google.android.agera.database.SqlDatabaseFunctions.databaseDeleteFunction;\n import static com.google.android.agera.database.SqlDatabaseFunctions.databaseInsertFunction;\n import static com.google.android.agera.database.SqlDatabaseFunctions.databaseQueryFunction;\n@@ -45,15 +44,11 @@\n import com.google.android.agera.Repository;\n import com.google.android.agera.Reservoir;\n import com.google.android.agera.Result;\n-import com.google.android.agera.Supplier;\n-import com.google.android.agera.Updatable;\n import com.google.android.agera.database.SqlDeleteRequest;\n import com.google.android.agera.database.SqlInsertRequest;\n-import com.google.android.agera.database.SqlRequest;\n import com.google.android.agera.database.SqlUpdateRequest;\n \n import android.content.Context;\n-import android.database.Cursor;\n import android.support.annotation.NonNull;\n \n import java.util.List;\n@@ -106,23 +101,6 @@ public synchronized static NotesStore notesStore(@NonNull final Context applicat\n         databaseUpdateFunction(databaseSupplier);\n     final Function<SqlDeleteRequest, Result<Integer>> deleteNoteFunction =\n         databaseDeleteFunction(databaseSupplier);\n-    final Function<Object, Result<? extends Number>> writeOperation =\n-        new Function<Object, Result<? extends Number>>() {\n-          @NonNull\n-          @Override\n-          public Result<? extends Number> apply(@NonNull Object input) {\n-            if (input instanceof SqlInsertRequest) {\n-              return insertNoteFunction.apply((SqlInsertRequest) input);\n-            }\n-            if (input instanceof SqlUpdateRequest) {\n-              return updateNoteFunction.apply((SqlUpdateRequest) input);\n-            }\n-            if (input instanceof SqlDeleteRequest) {\n-              return deleteNoteFunction.apply((SqlDeleteRequest) input);\n-            }\n-            return failure();\n-          }\n-        };\n \n     // Create a reservoir of database write requests. This will be used as the receiver of write\n     // requests submitted to the NotesStore, and the event/data source of the reacting repository.\n@@ -140,45 +118,41 @@ public synchronized static NotesStore notesStore(@NonNull final Context applicat\n         .onUpdatesPerLoop()\n         .goTo(executor)\n         .attemptGetFrom(writeRequestReservoir).orSkip()\n-        .thenAttemptTransform(writeOperation).orSkip()\n+        .thenAttemptTransform(input -> {\n+          if (input instanceof SqlInsertRequest) {\n+            return insertNoteFunction.apply((SqlInsertRequest) input);\n+          }\n+          if (input instanceof SqlUpdateRequest) {\n+            return updateNoteFunction.apply((SqlUpdateRequest) input);\n+          }\n+          if (input instanceof SqlDeleteRequest) {\n+            return deleteNoteFunction.apply((SqlDeleteRequest) input);\n+          }\n+          return failure();\n+        }).orSkip()\n         .notifyIf(alwaysNotify)\n         .compile();\n \n     // Keep the reacting repository in this lazy singleton activated for the full app life cycle.\n     // This is optional -- it allows the write requests submitted when the notes repository is not\n     // active to still be processed asap.\n-    final Updatable dummyUpdatable = new Updatable() {\n-      @Override\n-      public void update() {}\n-    };\n-    writeReaction.addUpdatable(dummyUpdatable);\n-\n-    // Create a function to map each data row to a Note.\n-    final Function<Cursor, Note> cursorToNote = new Function<Cursor, Note>() {\n-      @NonNull\n-      @Override\n-      public Note apply(@NonNull final Cursor cursor) {\n-        return note(cursor.getInt(ID_COLUMN_INDEX), cursor.getString(NOTE_COLUMN_INDEX));\n-      }\n-    };\n+    writeReaction.addUpdatable(() -> {});\n \n     // Create the repository of notes, wire it up to update on each database write, set it to fetch\n     // notes from the database on the database thread executor.\n-    final Supplier<SqlRequest> getNotesQuerySupplier =\n-        staticSupplier(sqlRequest().sql(GET_NOTES_FROM_TABLE).compile());\n-    final Repository<List<Note>> notesRepository = repositoryWithInitialValue(INITIAL_VALUE)\n+\n+    // Create the wired up notes store\n+    notesStore = new NotesStore(repositoryWithInitialValue(INITIAL_VALUE)\n         .observe(writeReaction)\n         .onUpdatesPerLoop()\n         .goTo(executor)\n-        .getFrom(getNotesQuerySupplier)\n-        .thenAttemptTransform(databaseQueryFunction(databaseSupplier, cursorToNote))\n+        .getFrom(() -> sqlRequest().sql(GET_NOTES_FROM_TABLE).compile())\n+        .thenAttemptTransform(databaseQueryFunction(databaseSupplier,\n+            cursor -> note(cursor.getInt(ID_COLUMN_INDEX), cursor.getString(NOTE_COLUMN_INDEX))))\n         .orEnd(staticFunction(INITIAL_VALUE))\n         .onConcurrentUpdate(SEND_INTERRUPT)\n         .onDeactivation(SEND_INTERRUPT)\n-        .compile();\n-\n-    // Create the wired up notes store\n-    notesStore = new NotesStore(notesRepository, writeRequestReservoir);\n+        .compile(), writeRequestReservoir);\n     return notesStore;\n   }\n "},{"sha":"9231fe7df66c3979975430737236aa2920991b05","filename":"testapp/src/main/java/com/google/android/agera/testapp/UrlToHttpRequest.java","status":"removed","additions":0,"deletions":31,"changes":31,"blob_url":"https://github.com/google/agera/blob/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/UrlToHttpRequest.java","raw_url":"https://github.com/google/agera/raw/42c7440a3851c594d19316f45f45b3c21a2d0ece/testapp/src/main/java/com/google/android/agera/testapp/UrlToHttpRequest.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/UrlToHttpRequest.java?ref=42c7440a3851c594d19316f45f45b3c21a2d0ece","patch":"@@ -1,31 +0,0 @@\n-/*\n- * Copyright 2016 Google Inc. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package com.google.android.agera.testapp;\n-\n-import static com.google.android.agera.net.HttpRequests.httpGetRequest;\n-\n-import com.google.android.agera.Function;\n-import com.google.android.agera.net.HttpRequest;\n-\n-import android.support.annotation.NonNull;\n-\n-final class UrlToHttpRequest implements Function<String, HttpRequest> {\n-  @NonNull\n-  @Override\n-  public HttpRequest apply(@NonNull final String input) {\n-    return httpGetRequest(input).compile();\n-  }\n-}"}]}