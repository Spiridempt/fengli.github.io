{"sha":"5182f91a1b5ffae62c5fe21ff97975012e69f638","commit":{"author":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-05-15T07:33:14Z"},"committer":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-05-15T07:33:14Z"},"message":"Added func compiler unit tests","tree":{"sha":"c46b1e4540b65626acd114946bdb1faa5517b16d","url":"https://api.github.com/repos/google/agera/git/trees/c46b1e4540b65626acd114946bdb1faa5517b16d"},"url":"https://api.github.com/repos/google/agera/git/commits/5182f91a1b5ffae62c5fe21ff97975012e69f638","comment_count":0},"url":"https://api.github.com/repos/google/agera/commits/5182f91a1b5ffae62c5fe21ff97975012e69f638","html_url":"https://github.com/google/agera/commit/5182f91a1b5ffae62c5fe21ff97975012e69f638","comments_url":"https://api.github.com/repos/google/agera/commits/5182f91a1b5ffae62c5fe21ff97975012e69f638/comments","author":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"committer":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"parents":[{"sha":"478d09eefdb499d177f59f4efc512d8d22f533f0","url":"https://api.github.com/repos/google/agera/commits/478d09eefdb499d177f59f4efc512d8d22f533f0","html_url":"https://github.com/google/agera/commit/478d09eefdb499d177f59f4efc512d8d22f533f0"}],"stats":{"total":27,"additions":27,"deletions":0},"files":[{"sha":"6c5173eb470de43e9fc38bfefa2f0a143729d2fe","filename":"agera/src/main/java/com/google/android/agera/FunctionCompiler.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/google/agera/blob/5182f91a1b5ffae62c5fe21ff97975012e69f638/agera/src/main/java/com/google/android/agera/FunctionCompiler.java","raw_url":"https://github.com/google/agera/raw/5182f91a1b5ffae62c5fe21ff97975012e69f638/agera/src/main/java/com/google/android/agera/FunctionCompiler.java","contents_url":"https://api.github.com/repos/google/agera/contents/agera/src/main/java/com/google/android/agera/FunctionCompiler.java?ref=5182f91a1b5ffae62c5fe21ff97975012e69f638","patch":"@@ -49,6 +49,9 @@ public Function thenApply(@NonNull final Function function) {\n \n   @NonNull\n   private Function createFunction() {\n+    if (functions.isEmpty()) {\n+      return IDENTITY_FUNCTION;\n+    }\n     return new ChainFunction(functions.toArray(new Function[functions.size()]));\n   }\n "},{"sha":"fe1d57e3efac0e83f5b0a446dc3aa1d81f9c5353","filename":"agera/src/test/java/com/google/android/agera/FunctionsTest.java","status":"modified","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/google/agera/blob/5182f91a1b5ffae62c5fe21ff97975012e69f638/agera/src/test/java/com/google/android/agera/FunctionsTest.java","raw_url":"https://github.com/google/agera/raw/5182f91a1b5ffae62c5fe21ff97975012e69f638/agera/src/test/java/com/google/android/agera/FunctionsTest.java","contents_url":"https://api.github.com/repos/google/agera/contents/agera/src/test/java/com/google/android/agera/FunctionsTest.java?ref=5182f91a1b5ffae62c5fe21ff97975012e69f638","patch":"@@ -30,7 +30,9 @@\n import static org.hamcrest.Matchers.is;\n import static org.hamcrest.Matchers.sameInstance;\n import static org.mockito.Matchers.anyInt;\n+import static org.mockito.Matchers.anyString;\n import static org.mockito.Matchers.eq;\n+import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.when;\n import static org.mockito.MockitoAnnotations.initMocks;\n \n@@ -189,6 +191,28 @@ public void shouldCreateFunctionFromListToListWithLimitLargerThanInputList() {\n     assertThat(function.apply(INPUT_LIST), contains(4, 7, 3, 7));\n   }\n \n+  @Test\n+  public void shouldReturnEmptyListForFilterOfEmptyList() {\n+    final Predicate<String> predicate = mock(Predicate.class);\n+    when(predicate.apply(anyString())).thenReturn(true);\n+\n+    final Function<List<String>, List<String>> function = functionFromListOf(String.class)\n+        .thenFilter(predicate);\n+\n+    assertThat(function.apply(new ArrayList<String>()),\n+        sameInstance(Collections.<String>emptyList()));\n+  }\n+\n+  @Test\n+  public void shouldReturnIdentityFunctionIfNoFunctionsAddedToCompiler() {\n+    final Function<List<String>, List<String>> function = functionFromListOf(String.class)\n+        .map(Functions.<String>identityFunction())\n+        .filter(Predicates.<String>truePredicate())\n+        .thenApply(Functions.<List<String>>identityFunction());\n+\n+    assertThat(function, sameInstance(Functions.<List<String>>identityFunction()));\n+  }\n+\n   private static final class DoubleString implements Function<String, String> {\n     @NonNull\n     @Override"}]}