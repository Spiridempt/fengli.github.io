{"sha":"2ffcaf6617890eb66b58c03c93768955294d70ec","commit":{"author":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2017-03-20T14:23:57Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2017-03-20T14:23:57Z"},"message":"Simplified repository presenter compilers (#155)","tree":{"sha":"f1854e2a2b17db656a9564e63de1f555992b8708","url":"https://api.github.com/repos/google/agera/git/trees/f1854e2a2b17db656a9564e63de1f555992b8708"},"url":"https://api.github.com/repos/google/agera/git/commits/2ffcaf6617890eb66b58c03c93768955294d70ec","comment_count":0},"url":"https://api.github.com/repos/google/agera/commits/2ffcaf6617890eb66b58c03c93768955294d70ec","html_url":"https://github.com/google/agera/commit/2ffcaf6617890eb66b58c03c93768955294d70ec","comments_url":"https://api.github.com/repos/google/agera/commits/2ffcaf6617890eb66b58c03c93768955294d70ec/comments","author":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"avatar_url":"https://avatars0.githubusercontent.com/u/19864447?v=3","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"a92431875792b1e8d7f0379ac68e9365eac70160","url":"https://api.github.com/repos/google/agera/commits/a92431875792b1e8d7f0379ac68e9365eac70160","html_url":"https://github.com/google/agera/commit/a92431875792b1e8d7f0379ac68e9365eac70160"}],"stats":{"total":269,"additions":104,"deletions":165},"files":[{"sha":"496f37475ad9cf68faa474854252f33f68f90385","filename":"extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompiler.java","status":"modified","additions":7,"deletions":8,"changes":15,"blob_url":"https://github.com/google/agera/blob/2ffcaf6617890eb66b58c03c93768955294d70ec/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompiler.java","raw_url":"https://github.com/google/agera/raw/2ffcaf6617890eb66b58c03c93768955294d70ec/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompiler.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompiler.java?ref=2ffcaf6617890eb66b58c03c93768955294d70ec","patch":"@@ -33,15 +33,14 @@\n import com.google.android.agera.Function;\n import com.google.android.agera.Receiver;\n import com.google.android.agera.Result;\n+import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPItemCompile;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPLayout;\n-import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPViewBinderRecycleItemCompile;\n-import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPViewBinderRecycleStableIdCompile;\n+import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPMain;\n import java.lang.ref.WeakReference;\n import java.util.List;\n \n @SuppressWarnings({\"unchecked, rawtypes\"})\n-final class RepositoryPresenterCompiler implements RPLayout, RPViewBinderRecycleStableIdCompile,\n-    RPViewBinderRecycleItemCompile {\n+final class RepositoryPresenterCompiler implements RPLayout, RPMain {\n   @NonNull\n   private Function<Object, Integer> layoutForItem;\n   @NonNull\n@@ -95,28 +94,28 @@ public Object layoutForItem(@NonNull final Function layoutForItem) {\n \n   @NonNull\n   @Override\n-  public Object bindWith(@NonNull final Binder binder) {\n+  public RPMain bindWith(@NonNull final Binder binder) {\n     this.binder = binder;\n     return this;\n   }\n \n   @NonNull\n   @Override\n-  public Object stableIdForItem(@NonNull final Function stableIdForItem) {\n+  public RPMain stableIdForItem(@NonNull final Function stableIdForItem) {\n     this.stableIdForItem = stableIdForItem;\n     return this;\n   }\n \n   @NonNull\n   @Override\n-  public Object stableId(final long stableId) {\n+  public RPItemCompile stableId(final long stableId) {\n     this.stableIdForItem(staticFunction(stableId));\n     return this;\n   }\n \n   @NonNull\n   @Override\n-  public Object recycleWith(@NonNull final Receiver recycler) {\n+  public RPMain recycleWith(@NonNull final Receiver recycler) {\n     this.recycler = recycler;\n     return this;\n   }"},{"sha":"cade174ade9e9a4d657468af2e4c8427a8f9d2c2","filename":"extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompilerStates.java","status":"modified","additions":38,"deletions":84,"changes":122,"blob_url":"https://github.com/google/agera/blob/2ffcaf6617890eb66b58c03c93768955294d70ec/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompilerStates.java","raw_url":"https://github.com/google/agera/raw/2ffcaf6617890eb66b58c03c93768955294d70ec/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompilerStates.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompilerStates.java?ref=2ffcaf6617890eb66b58c03c93768955294d70ec","patch":"@@ -53,62 +53,6 @@\n   }\n \n   /**\n-   * Compiler state to specify how to bind the {@link Repository} item to the view inflated by the\n-   * layout.\n-   */\n-  interface RPViewBinder<TVal, TRet> {\n-\n-    /**\n-     * Specifies a {@link Binder} to bind a single item in the {@link Repository} to an inflated\n-     * {@code View}.\n-     */\n-    @NonNull\n-    TRet bindWith(@NonNull Binder<TVal, View> viewBinder);\n-  }\n-\n-  /**\n-   * Compiler state to specify how to recycle the {@code View}.\n-   */\n-  interface RPRecycle<TRet> {\n-\n-    /**\n-     * Specifies a {@link Receiver} to recycle the {@code View}.\n-     */\n-    @NonNull\n-    TRet recycleWith(@NonNull Receiver<View> recycler);\n-  }\n-\n-  /**\n-   * Compiler state to specify how to generate stable IDs when {@link\n-   * android.support.v7.widget.RecyclerView.Adapter#setHasStableIds(boolean)} is true.\n-   */\n-  interface RPStableId<TVal, TRet, TRetItem> {\n-\n-    /**\n-     * Specifies a {@link Function} providing a stable id for the given item. Called only if stable\n-     * IDs are enabled with {@link RepositoryAdapter#setHasStableIds}, and therefore this method is\n-     * optional with a default implementation of returning {@link RecyclerView#NO_ID}. If stable IDs\n-     * are enabled, the returned ID and the layout returned by\n-     * {@link RPLayout#layoutForItem(Function)} or {@link RPLayout#layout(int)} for the given item\n-     * should together uniquely identify this item in the whole {@link RecyclerView} throughout all\n-     * changes.\n-     */\n-    @NonNull\n-    TRet stableIdForItem(@NonNull Function<? super TVal, Long> stableIdForItem);\n-\n-    /**\n-     * Specifies a {@code stable:Id} for the given item. Called only if stable IDs are enabled with\n-     * {@link RepositoryAdapter#setHasStableIds}, and therefore this method is optional with a\n-     * default implementation of returning {@link RecyclerView#NO_ID}. If stable IDs are enabled,\n-     * the returned ID and the layout returned by {@link RPLayout#layoutForItem(Function)} or\n-     * {@link RPLayout#layout(int)} for the given item should together uniquely identify this item\n-     * in the whole {@link RecyclerView} throughout all changes.\n-     */\n-    @NonNull\n-    TRetItem stableId(long stableId);\n-  }\n-\n-  /**\n    * Compiler state to compile for the specified item container type of the associated\n    * {@link Repository}.\n    */\n@@ -130,10 +74,10 @@\n   }\n \n   /**\n-   * Compiler state to compile for the specified container type of the associated\n+   * Compiler state to compile for the pre-defined collection container type of the associated\n    * {@link Repository}.\n    */\n-  interface RPCompile<TVal> extends RPItemCompile<TVal> {\n+  interface RPSpecificCollectionCompile<TVal> {\n \n     /**\n      * Creates a {@link RepositoryPresenter} for a @{link Repository} of a {@link List} where each\n@@ -152,35 +96,45 @@\n   }\n \n   /**\n-   * Compiler state allowing to specify Recycle or compile.\n+   * Compiler state to specify how to bind the {@link Repository} item to the view inflated by the\n+   * layout.\n    */\n-  interface RPRecycleItemCompile<TVal, TRec>\n-      extends RPRecycle<TRec>, RPItemCompile<TVal> {}\n+  interface RPMain<T> extends RPItemCompile<T>, RPSpecificCollectionCompile<T> {\n \n-  /**\n-   * Compiler state allowing to specify view binder, view recycler, function or compile.\n-   */\n-  interface RPViewBinderRecycleItemCompile<TVal, TVBin>\n-      extends RPRecycleItemCompile<TVal, RPCompile<TVal>>,\n-      RPViewBinder<TVal, TVBin> {}\n+    /**\n+     * Specifies a {@link Binder} to bind a single item in the {@link Repository} to an inflated\n+     * {@code View}.\n+     */\n+    @NonNull\n+    RPMain<T> bindWith(@NonNull Binder<T, View> viewBinder);\n \n-  /**\n-   * Compiler state allowing to specify Recycle or compile.\n-   */\n-  interface RPRecycleCompile<TVal, TRec> extends RPRecycle<TRec>,\n-      RPCompile<TVal> {}\n+    /**\n+     * Specifies a {@link Receiver} to recycle the {@code View}.\n+     */\n+    @NonNull\n+    RPMain<T> recycleWith(@NonNull Receiver<View> recycler);\n \n-  /**\n-   * Compiler state allowing to specify view binder, view recycler, function or compile.\n-   */\n-  interface RPViewBinderRecycleCompile<TVal, TVBin> extends RPRecycleCompile<TVal, RPCompile<TVal>>,\n-      RPViewBinder<TVal, TVBin> {}\n+    /**\n+     * Specifies a {@link Function} providing a stable id for the given item. Called only if stable\n+     * IDs are enabled with {@link RepositoryAdapter#setHasStableIds}, and therefore this method is\n+     * optional with a default implementation of returning {@link RecyclerView#NO_ID}. If stable IDs\n+     * are enabled, the returned ID and the layout returned by\n+     * {@link RPLayout#layoutForItem(Function)} or {@link RPLayout#layout(int)} for the given item\n+     * should together uniquely identify this item in the whole {@link RecyclerView} throughout all\n+     * changes.\n+     */\n+    @NonNull\n+    RPMain<T> stableIdForItem(@NonNull Function<? super T, Long> stableIdForItem);\n \n-  /**\n-   * Compiler state allowing to specify view binder, view recycler, stable id function or compile.\n-   */\n-  interface RPViewBinderRecycleStableIdCompile<TVal, TVBRC>\n-      extends RPViewBinderRecycleCompile<TVal, TVBRC>,\n-      RPStableId<TVal, RPViewBinderRecycleCompile<TVal, RPRecycleCompile<TVal, RPCompile<TVal>>>,\n-          RPViewBinderRecycleItemCompile<TVal, RPRecycleItemCompile<TVal, RPCompile<TVal>>>> {}\n+    /**\n+     * Specifies a {@code stable:Id} for the given item. Called only if stable IDs are enabled with\n+     * {@link RepositoryAdapter#setHasStableIds}, and therefore this method is optional with a\n+     * default implementation of returning {@link RecyclerView#NO_ID}. If stable IDs are enabled,\n+     * the returned ID and the layout returned by {@link RPLayout#layoutForItem(Function)} or\n+     * {@link RPLayout#layout(int)} for the given item should together uniquely identify this item\n+     * in the whole {@link RecyclerView} throughout all changes.\n+     */\n+    @NonNull\n+    RPItemCompile<T> stableId(long stableId);\n+  }\n }"},{"sha":"f525945b7899afa53da1cace8b3205e28ce4d29d","filename":"extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenters.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/google/agera/blob/2ffcaf6617890eb66b58c03c93768955294d70ec/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenters.java","raw_url":"https://github.com/google/agera/raw/2ffcaf6617890eb66b58c03c93768955294d70ec/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenters.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenters.java?ref=2ffcaf6617890eb66b58c03c93768955294d70ec","patch":"@@ -19,10 +19,8 @@\n import android.support.annotation.Nullable;\n import com.google.android.agera.Repository;\n import com.google.android.agera.Result;\n-import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPCompile;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPLayout;\n-import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPRecycleCompile;\n-import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPViewBinderRecycleStableIdCompile;\n+import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPMain;\n import java.util.List;\n \n /**\n@@ -37,9 +35,7 @@\n    */\n   @SuppressWarnings({\"unchecked\", \"UnusedParameters\"})\n   @NonNull\n-  public static <T> RPLayout<T, RPViewBinderRecycleStableIdCompile<T,\n-      RPRecycleCompile<T, RPCompile<T>>>>\n-  repositoryPresenterOf(@Nullable final Class<T> type) {\n+  public static <T> RPLayout<T, RPMain<T>> repositoryPresenterOf(@Nullable final Class<T> type) {\n     return new RepositoryPresenterCompiler();\n   }\n "},{"sha":"a7d3e0102746079085dc9226deb05d3af0ac9607","filename":"extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompiler.java","status":"modified","additions":18,"deletions":19,"changes":37,"blob_url":"https://github.com/google/agera/blob/2ffcaf6617890eb66b58c03c93768955294d70ec/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompiler.java","raw_url":"https://github.com/google/agera/raw/2ffcaf6617890eb66b58c03c93768955294d70ec/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompiler.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompiler.java?ref=2ffcaf6617890eb66b58c03c93768955294d70ec","patch":"@@ -36,16 +36,14 @@\n import com.google.android.agera.Function;\n import com.google.android.agera.Result;\n import com.google.android.agera.rvadapter.RepositoryPresenter;\n+import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPItemCompile;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPLayout;\n-import com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenterCompilerStates.DBRPHandlerStableIdRecycleCompile;\n-import com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenterCompilerStates.DBRPItemBinding;\n+import com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenterCompilerStates.DBRPMain;\n import java.lang.ref.WeakReference;\n-import com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenterCompilerStates.DBRPRecycleItemCompile;\n import java.util.List;\n \n @SuppressWarnings(\"unchecked\")\n-final class DataBindingRepositoryPresenterCompiler implements DBRPItemBinding,\n-    DBRPHandlerStableIdRecycleCompile, DBRPRecycleItemCompile, RPLayout {\n+final class DataBindingRepositoryPresenterCompiler implements DBRPMain, RPLayout {\n   @NonNull\n   private final SparseArray<Object> handlers;\n   private Function<Object, Integer> layoutFactory;\n@@ -61,44 +59,44 @@\n \n   @NonNull\n   @Override\n-  public Object handler(final int handlerId, @NonNull final Object handler) {\n+  public DBRPMain handler(final int handlerId, @NonNull final Object handler) {\n     handlers.put(handlerId, handler);\n     return this;\n   }\n \n   @NonNull\n   @Override\n-  public Object itemId(final int itemId) {\n+  public DBRPMain itemId(final int itemId) {\n     this.itemId = staticFunction(itemId);\n     return this;\n   }\n \n   @NonNull\n   @Override\n-  public Object itemIdForItem(@NonNull final Function itemIdForItem) {\n+  public DBRPMain itemIdForItem(@NonNull final Function itemIdForItem) {\n     this.itemId = checkNotNull(itemIdForItem);\n     return this;\n   }\n \n   @NonNull\n   @Override\n   public RepositoryPresenter forItem() {\n-    return new CompiledRepositoryPresenter(itemId, layoutFactory, stableIdForItem, handlers,\n-        recycleConfig, itemAsList());\n+    return new CompiledRepositoryPresenter(itemId, layoutFactory, stableIdForItem,\n+        handlers, recycleConfig, itemAsList());\n   }\n \n   @NonNull\n   @Override\n   public RepositoryPresenter<List<Object>> forList() {\n-    return new CompiledRepositoryPresenter(itemId, layoutFactory, stableIdForItem, handlers,\n-        recycleConfig, (Function) identityFunction());\n+    return new CompiledRepositoryPresenter(itemId, layoutFactory, stableIdForItem,\n+        handlers, recycleConfig, (Function) identityFunction());\n   }\n \n   @NonNull\n   @Override\n   public RepositoryPresenter<Result<Object>> forResult() {\n-    return new CompiledRepositoryPresenter(itemId, layoutFactory, stableIdForItem, handlers,\n-        recycleConfig, (Function) resultAsList());\n+    return new CompiledRepositoryPresenter(itemId, layoutFactory, stableIdForItem,\n+        handlers, recycleConfig, (Function) resultAsList());\n   }\n \n   @NonNull\n@@ -110,7 +108,7 @@ public RepositoryPresenter forItem() {\n \n   @NonNull\n   @Override\n-  public Object layout(@LayoutRes final int layoutId) {\n+  public Object layout(@LayoutRes int layoutId) {\n     this.layoutFactory = staticFunction(layoutId);\n     return this;\n   }\n@@ -124,21 +122,21 @@ public Object layoutForItem(@NonNull final Function layoutForItem) {\n \n   @NonNull\n   @Override\n-  public Object stableIdForItem(@NonNull final Function stableIdForItem) {\n+  public DBRPMain stableIdForItem(@NonNull final Function stableIdForItem) {\n     this.stableIdForItem = stableIdForItem;\n     return this;\n   }\n \n   @NonNull\n   @Override\n-  public Object stableId(final long stableId) {\n+  public RPItemCompile stableId(final long stableId) {\n     this.stableIdForItem = staticFunction(stableId);\n     return this;\n   }\n \n   @NonNull\n   @Override\n-  public Object onRecycle(@RecycleConfig final int recycleConfig) {\n+  public DBRPMain onRecycle(@RecycleConfig final int recycleConfig) {\n     this.recycleConfig = recycleConfig;\n     return this;\n   }\n@@ -166,7 +164,8 @@ public Object onRecycle(@RecycleConfig final int recycleConfig) {\n         @NonNull final Function<Object, Integer> layoutId,\n         @NonNull final Function<Object, Long> stableIdForItem,\n         @NonNull final SparseArray<Object> handlers,\n-        final int recycleConfig, @NonNull final Function<Object, List<Object>> converter) {\n+        final int recycleConfig,\n+        @NonNull final Function<Object, List<Object>> converter) {\n       this.itemId = itemId;\n       this.converter = converter;\n       this.layoutId = layoutId;"},{"sha":"d09641e86337e00057971f2f6eec734c155626e4","filename":"extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompilerStates.java","status":"modified","additions":32,"deletions":41,"changes":73,"blob_url":"https://github.com/google/agera/blob/2ffcaf6617890eb66b58c03c93768955294d70ec/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompilerStates.java","raw_url":"https://github.com/google/agera/raw/2ffcaf6617890eb66b58c03c93768955294d70ec/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompilerStates.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompilerStates.java?ref=2ffcaf6617890eb66b58c03c93768955294d70ec","patch":"@@ -16,12 +16,14 @@\n package com.google.android.agera.rvdatabinding;\n \n import android.support.annotation.NonNull;\n+import android.support.v7.widget.RecyclerView;\n import com.google.android.agera.Function;\n import com.google.android.agera.Repository;\n+import com.google.android.agera.rvadapter.RepositoryAdapter;\n import com.google.android.agera.rvadapter.RepositoryPresenter;\n-import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPCompile;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPItemCompile;\n-import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPStableId;\n+import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPLayout;\n+import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPSpecificCollectionCompile;\n \n /**\n  * Container of the compiler state interfaces supporting the creation of a data binding\n@@ -32,69 +34,58 @@\n   /**\n    * Compiler state to specify how to bind the {@code View} using data binding.\n    */\n-  interface DBRPItemBinding<TVal, TRet> {\n+  interface DBRPMain<T> extends RPItemCompile<T>, RPSpecificCollectionCompile<T> {\n \n     /**\n      * Specifies a data binding @{code itemId} from the previously given {@code layout} to bind a\n      * single item in the {@link Repository}.\n      */\n     @NonNull\n-    TRet itemId(int itemId);\n+    DBRPMain<T> itemId(int itemId);\n \n     /**\n      * Specifies a {@link Function} to return a data binding @{code itemId} from the previously\n      * given {@code layout} to bind a single item in the {@link Repository}.\n      */\n     @NonNull\n-    TRet itemIdForItem(@NonNull Function<TVal, Integer> itemIdForItem);\n-  }\n+    DBRPMain<T> itemIdForItem(@NonNull Function<T, Integer> itemIdForItem);\n \n-  /**\n-   * Compiler state to specify index independent handlers from the given {@code layout}.\n-   */\n-  interface DBRPHandlerBinding<TRet> {\n     /**\n      * Specifies what {@code handler} is associated with the {@code handlerId} in the previously\n      * given {@code layout}.\n      */\n     @NonNull\n-    TRet handler(int handlerId, @NonNull Object handler);\n-  }\n+    DBRPMain<T> handler(int handlerId, @NonNull Object handler);\n \n-  /**\n-   * Compiler state to specify a recycle config.\n-   */\n-  interface DBRPRecycle<TRet> {\n     /**\n      * Specifies what {@code handler} is associated with the {@code handlerId} in the previously\n      * given {@code layout}.\n      */\n     @NonNull\n-    TRet onRecycle(@RecycleConfig int recycleConfig);\n-  }\n-\n-  /**\n-   * Compiler state allowing to specify handlers, stable id, recycle strategy or compile.\n-   */\n-  interface DBRPHandlerStableIdRecycleCompile<TVal, TCom>\n-      extends DBRPHandlerBinding<DBRPHandlerStableIdRecycleCompile<TVal, TCom>>,\n-      DBRPStableIdRecycleCompile<TVal, TCom, RPItemCompile<TVal>> {}\n-\n-  /**\n-   * Compiler state allowing to specify stable id, recycle strategy or compile.\n-   */\n-  interface DBRPStableIdRecycleCompile<TVal, TCom, TICom>\n-      extends RPStableId<TVal, DBRPRecycleCompile<TVal, TCom>,\n-      DBRPRecycleItemCompile<TVal, TICom>>, DBRPRecycleCompile<TVal, TCom> {}\n+    DBRPMain<T> onRecycle(@RecycleConfig int recycleConfig);\n \n-  /**\n-   * Compiler state allowing to specify recycle strategy or compile.\n-   */\n-  interface DBRPRecycleCompile<TVal, TRec> extends RPCompile<TVal>, DBRPRecycle<TRec> {}\n+    /**\n+     * Specifies a {@link Function} providing a stable id for the given item. Called only if stable\n+     * IDs are enabled with {@link RepositoryAdapter#setHasStableIds}, and therefore this method is\n+     * optional with a default implementation of returning {@link RecyclerView#NO_ID}. If stable IDs\n+     * are enabled, the returned ID and the layout returned by\n+     * {@link RPLayout#layoutForItem(Function)} or {@link RPLayout#layout(int)} for the given item\n+     * should together uniquely identify this item in the whole {@link RecyclerView} throughout all\n+     * changes.\n+     */\n+    @NonNull\n+    DBRPMain<T> stableIdForItem(@NonNull Function<? super T, Long> stableIdForItem);\n \n-  /**\n-   * Compiler state allowing to specify recycle strategy or compile.\n-   */\n-  interface DBRPRecycleItemCompile<TVal, TRec>\n-      extends RPItemCompile<TVal>, DBRPRecycle<TRec> {}\n+    /**\n+     * Specifies a {@code stable:Id} for the given item. Called only if stable IDs are enabled with\n+     * {@link RepositoryAdapter#setHasStableIds}, and therefore this method is optional with a\n+     * default implementation of returning {@link RecyclerView#NO_ID}. If stable IDs are enabled,\n+     * the returned ID and the layout returned by {@link RPLayout#layoutForItem(Function)} or\n+     * {@link RPLayout#layout(int)} for the given item should together uniquely identify this item\n+     * in the whole {@link RecyclerView} throughout all changes.\n+     */\n+    @NonNull\n+    RPItemCompile<T> stableId(long stableId);\n+  }\n }\n+"},{"sha":"73b30a02539a326a70fa350f269961473a862b25","filename":"extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenters.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/google/agera/blob/2ffcaf6617890eb66b58c03c93768955294d70ec/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenters.java","raw_url":"https://github.com/google/agera/raw/2ffcaf6617890eb66b58c03c93768955294d70ec/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenters.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenters.java?ref=2ffcaf6617890eb66b58c03c93768955294d70ec","patch":"@@ -19,10 +19,8 @@\n import android.support.annotation.Nullable;\n import com.google.android.agera.Repository;\n import com.google.android.agera.rvadapter.RepositoryPresenter;\n-import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPCompile;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPLayout;\n-import com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenterCompilerStates.DBRPHandlerStableIdRecycleCompile;\n-import com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenterCompilerStates.DBRPItemBinding;\n+import com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenterCompilerStates.DBRPMain;\n \n /**\n  * Contains concrete implementations of {@link RepositoryPresenter} to present the content of a\n@@ -67,18 +65,20 @@\n  *   .layout(R.layout.item_layout)\n  *   .itemId(BR.user)\n  *   .handler(BR.handlers, new Handlers())\n- *   .compileList();\n+ *   .forList();\n  * }\n  * </pre>\n  * <p> See the data binding library documentation for details.\n  */\n public final class DataBindingRepositoryPresenters {\n \n+  /**\n+   * Starts the creation of a {@link RepositoryPresenter} using the Android data binding library.\n+   */\n   @SuppressWarnings(\"unchecked\")\n   @NonNull\n-  public static <T> RPLayout<T, DBRPItemBinding<T,\n-      DBRPHandlerStableIdRecycleCompile<T, RPCompile<T>>>>\n-  dataBindingRepositoryPresenterOf(@Nullable final Class<T> type) {\n+  public static <T> RPLayout<T, DBRPMain<T>> dataBindingRepositoryPresenterOf(\n+      @Nullable final Class<T> type) {\n     return new DataBindingRepositoryPresenterCompiler();\n   }\n "}]}