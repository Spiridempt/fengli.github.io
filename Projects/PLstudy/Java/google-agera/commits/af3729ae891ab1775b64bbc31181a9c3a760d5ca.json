{"sha":"af3729ae891ab1775b64bbc31181a9c3a760d5ca","commit":{"author":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-04-30T22:28:59Z"},"committer":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-04-30T22:28:59Z"},"message":"Added missing Repository bindWith unit test\n\nAlso bumped coverage of Result","tree":{"sha":"e0d003301b2052bfe2d5c95f1b966bde3181abb1","url":"https://api.github.com/repos/google/agera/git/trees/e0d003301b2052bfe2d5c95f1b966bde3181abb1"},"url":"https://api.github.com/repos/google/agera/git/commits/af3729ae891ab1775b64bbc31181a9c3a760d5ca","comment_count":0},"url":"https://api.github.com/repos/google/agera/commits/af3729ae891ab1775b64bbc31181a9c3a760d5ca","html_url":"https://github.com/google/agera/commit/af3729ae891ab1775b64bbc31181a9c3a760d5ca","comments_url":"https://api.github.com/repos/google/agera/commits/af3729ae891ab1775b64bbc31181a9c3a760d5ca/comments","author":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"committer":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"parents":[{"sha":"d7214d07e0aeb5e17fd8986e107394e1f898525e","url":"https://api.github.com/repos/google/agera/commits/d7214d07e0aeb5e17fd8986e107394e1f898525e","html_url":"https://github.com/google/agera/commit/d7214d07e0aeb5e17fd8986e107394e1f898525e"}],"stats":{"total":27,"additions":27,"deletions":0},"files":[{"sha":"6da0906753c00f7a87a34168530fe3c6a39524a6","filename":"agera/src/test/java/com/google/android/agera/RepositoriesTest.java","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/google/agera/blob/af3729ae891ab1775b64bbc31181a9c3a760d5ca/agera/src/test/java/com/google/android/agera/RepositoriesTest.java","raw_url":"https://github.com/google/agera/raw/af3729ae891ab1775b64bbc31181a9c3a760d5ca/agera/src/test/java/com/google/android/agera/RepositoriesTest.java","contents_url":"https://api.github.com/repos/google/agera/contents/agera/src/test/java/com/google/android/agera/RepositoriesTest.java?ref=af3729ae891ab1775b64bbc31181a9c3a760d5ca","patch":"@@ -56,6 +56,7 @@\n public final class RepositoriesTest {\n   private static final int INITIAL_INT_VALUE = 0;\n   private static final int INT_VALUE = 2;\n+  private static final String STRING_VALUE = \"string\";\n   private static final List<Integer> INITIAL_VALUE = singletonList(1);\n   private static final List<Integer> LIST = asList(1, 2, 3);\n   private static final List<Integer> OTHER_LIST = asList(4, 5);\n@@ -71,8 +72,12 @@\n   @Mock\n   private Receiver<List<Integer>> mockIntegerListReceiver;\n   @Mock\n+  private Binder<List<Integer>, String> mockIntegerListStringBinder;\n+  @Mock\n   private Supplier<List<Integer>> mockIntegerListSupplier;\n   @Mock\n+  private Supplier<String> mockStringSupplier;\n+  @Mock\n   private Predicate<List<Integer>> mockIntegerListPredicate;\n   @Mock\n   private Function<List<Integer>, Integer> mockIntegerListToIntValueFunction;\n@@ -81,6 +86,7 @@\n   public void setUp() {\n     initMocks(this);\n     when(mockIntegerListSupplier.get()).thenReturn(LIST);\n+    when(mockStringSupplier.get()).thenReturn(STRING_VALUE);\n     when(mockIntegerListToIntValueFunction.apply(Matchers.<List<Integer>>any()))\n         .thenReturn(INT_VALUE);\n     updateDispatcher = updateDispatcher();\n@@ -327,6 +333,22 @@ public void shouldSendTo() throws Exception {\n   }\n \n   @Test\n+  public void shouldBindWith() throws Exception {\n+    final Repository<List<Integer>> repository = repositoryWithInitialValue(INITIAL_VALUE)\n+        .observe()\n+        .onUpdatesPerLoop()\n+        .bindWith(mockStringSupplier, mockIntegerListStringBinder)\n+        .thenSkip()\n+        .compile();\n+\n+    updatable.addToObservable(repository);\n+\n+    verify(mockIntegerListStringBinder).bind(INITIAL_VALUE, STRING_VALUE);\n+    assertThat(updatable, wasNotUpdated());\n+    assertThat(repository, has(INITIAL_VALUE));\n+  }\n+\n+  @Test\n   public void shouldHavePrivateConstructor() {\n     assertThat(Repositories.class, hasPrivateConstructor());\n   }"},{"sha":"7b70426f16e79381cda26ce653c6789fa340efc4","filename":"agera/src/test/java/com/google/android/agera/ResultTest.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/google/agera/blob/af3729ae891ab1775b64bbc31181a9c3a760d5ca/agera/src/test/java/com/google/android/agera/ResultTest.java","raw_url":"https://github.com/google/agera/raw/af3729ae891ab1775b64bbc31181a9c3a760d5ca/agera/src/test/java/com/google/android/agera/ResultTest.java","contents_url":"https://api.github.com/repos/google/agera/contents/agera/src/test/java/com/google/android/agera/ResultTest.java?ref=af3729ae891ab1775b64bbc31181a9c3a760d5ca","patch":"@@ -500,6 +500,11 @@ public void shouldHaveSameHashcodeForSameValue() {\n   }\n \n   @Test\n+  public void shouldHaveSameHashcodeForSameFailure() {\n+    assertThat(FAILURE_WITH_THROWABLE, hasHashCodeOf(failure(THROWABLE)));\n+  }\n+\n+  @Test\n   public void shouldPrintStringRepresentationForSuccess() {\n     assertThat(SUCCESS_WITH_VALUE, hasToString(not(isEmptyOrNullString())));\n   }"}]}