{"sha":"b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1","commit":{"author":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-12-17T15:43:22Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2016-12-17T15:43:22Z"},"message":"Extracted Activity functionality to Fragment (#124)","tree":{"sha":"ee6d51bec9eb17ace2f93d7f6134036c7df0481b","url":"https://api.github.com/repos/google/agera/git/trees/ee6d51bec9eb17ace2f93d7f6134036c7df0481b"},"url":"https://api.github.com/repos/google/agera/git/commits/b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1","comment_count":0},"url":"https://api.github.com/repos/google/agera/commits/b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1","html_url":"https://github.com/google/agera/commit/b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1","comments_url":"https://api.github.com/repos/google/agera/commits/b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1/comments","author":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"avatar_url":"https://avatars0.githubusercontent.com/u/19864447?v=3","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"6bd3b06e975111dcb4354d7605f38c6073152099","url":"https://api.github.com/repos/google/agera/commits/6bd3b06e975111dcb4354d7605f38c6073152099","html_url":"https://github.com/google/agera/commit/6bd3b06e975111dcb4354d7605f38c6073152099"}],"stats":{"total":367,"additions":213,"deletions":154},"files":[{"sha":"97de055713faf29d292353dfc37c153ae3fe6bf1","filename":"testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java","status":"modified","additions":3,"deletions":123,"changes":126,"blob_url":"https://github.com/google/agera/blob/b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1/testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java","raw_url":"https://github.com/google/agera/raw/b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1/testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java?ref=b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1","patch":"@@ -15,133 +15,13 @@\n  */\n package com.google.android.agera.testapp;\n \n-import static android.graphics.BitmapFactory.decodeByteArray;\n-import static android.os.StrictMode.ThreadPolicy;\n-import static android.os.StrictMode.VmPolicy;\n-import static android.os.StrictMode.setThreadPolicy;\n-import static android.os.StrictMode.setVmPolicy;\n-import static com.google.android.agera.Repositories.repositoryWithInitialValue;\n-import static com.google.android.agera.RepositoryConfig.SEND_INTERRUPT;\n-import static com.google.android.agera.Result.absentIfNull;\n-import static com.google.android.agera.net.HttpFunctions.httpFunction;\n-import static com.google.android.agera.net.HttpRequests.httpGetRequest;\n-import static com.google.android.agera.rvadapter.RepositoryAdapter.repositoryAdapter;\n-import static com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenters.dataBindingRepositoryPresenterOf;\n-import static com.google.android.agera.testapp.NotesStore.notesStore;\n-import static java.util.concurrent.Executors.newSingleThreadExecutor;\n-\n-import com.google.android.agera.Predicate;\n-import com.google.android.agera.Receiver;\n-import com.google.android.agera.Repository;\n-import com.google.android.agera.Result;\n-import com.google.android.agera.Updatable;\n-\n-import android.app.Activity;\n-import android.app.AlertDialog;\n-import android.graphics.Bitmap;\n import android.os.Bundle;\n-import android.support.v7.widget.LinearLayoutManager;\n-import android.support.v7.widget.RecyclerView;\n-import android.support.v7.widget.RecyclerView.Adapter;\n-import android.support.v7.widget.RecyclerView.ViewHolder;\n-import android.util.DisplayMetrics;\n-import android.widget.EditText;\n-import android.widget.ImageView;\n-\n-import java.util.concurrent.Executor;\n-\n-public final class NotesActivity extends Activity {\n-  private static final Executor networkExecutor = newSingleThreadExecutor();\n-  private static final Executor calculationExecutor = newSingleThreadExecutor();\n-\n-  private Repository<Result<Bitmap>> backgroundRepository;\n-  private Updatable updatable;\n+import android.support.v4.app.FragmentActivity;\n \n+public final class NotesActivity extends FragmentActivity {\n   @Override\n   protected void onCreate(final Bundle savedInstanceState) {\n     super.onCreate(savedInstanceState);\n     setContentView(R.layout.notes_activity);\n-\n-    // Create the notes store, containing all async IO\n-    final NotesStore notesStore = notesStore(getApplicationContext());\n-\n-    // Find the clear button and wire the click listener to call the clear notes updatable\n-    findViewById(R.id.clear).setOnClickListener(v -> notesStore.clearNotes());\n-\n-    // Find the add button and wire the click listener to show a dialog that in turn calls the add\n-    // note from text from the notes store when adding notes\n-    findViewById(R.id.add).setOnClickListener(v -> {\n-      final EditText editText = new EditText(v.getContext());\n-      editText.setId(R.id.edit);\n-      new AlertDialog.Builder(v.getContext())\n-          .setTitle(R.string.add_note)\n-          .setView(editText)\n-          .setPositiveButton(R.string.add, (d, i) -> {\n-            notesStore.insertNoteFromText(editText.getText().toString());\n-          })\n-          .create().show();\n-    });\n-\n-    final Adapter<ViewHolder> adapter = repositoryAdapter()\n-        .add(notesStore.getNotesRepository(), dataBindingRepositoryPresenterOf(Note.class)\n-            .layout(R.layout.text_layout)\n-            .itemId(com.google.android.agera.testapp.BR.note)\n-            .stableIdForItem(input -> (long) input.getId())\n-            .handler(com.google.android.agera.testapp.BR.click,\n-                (Receiver<Note>) note -> {\n-                  final EditText editText = new EditText(this);\n-                  editText.setId(R.id.edit);\n-                  editText.setText(note.getNote());\n-                  new AlertDialog.Builder(this)\n-                      .setTitle(R.string.edit_note)\n-                      .setView(editText)\n-                      .setPositiveButton(R.string.edit,\n-                          (d, i) -> notesStore.updateNote(note, editText.getText().toString()))\n-                      .create().show();\n-                })\n-            .handler(com.google.android.agera.testapp.BR.longClick,\n-                (Predicate<Note>) notesStore::deleteNote)\n-            .forList())\n-        .whileStarted(this);\n-    adapter.setHasStableIds(true);\n-\n-    // Setup the recycler view using the repository adapter\n-    final RecyclerView recyclerView = (RecyclerView) findViewById(R.id.result);\n-    recyclerView.setAdapter(adapter);\n-    recyclerView.setLayoutManager(new LinearLayoutManager(this));\n-\n-    final DisplayMetrics displayMetrics = getResources().getDisplayMetrics();\n-\n-    backgroundRepository = repositoryWithInitialValue(Result.<Bitmap>absent())\n-        .observe()\n-        .onUpdatesPerLoop()\n-        .goTo(networkExecutor)\n-        .getFrom(() -> \"http://www.gravatar.com/avatar/4df6f4fe5976df17deeea19443d4429d?s=\"\n-            + Math.max(displayMetrics.heightPixels, displayMetrics.widthPixels))\n-        .transform(url -> httpGetRequest(url).compile())\n-        .attemptTransform(httpFunction()).orEnd(Result::failure)\n-        .goTo(calculationExecutor)\n-        .thenTransform(input -> {\n-          final byte[] body = input.getBody();\n-          return absentIfNull(decodeByteArray(body, 0, body.length));\n-        })\n-        .onDeactivation(SEND_INTERRUPT)\n-        .compile();\n-\n-    final ImageView imageView = (ImageView) findViewById(R.id.background);\n-\n-    updatable = () -> backgroundRepository.get().ifSucceededSendTo(imageView::setImageBitmap);\n-  }\n-\n-  @Override\n-  protected void onResume() {\n-    super.onResume();\n-    backgroundRepository.addUpdatable(updatable);\n-  }\n-\n-  @Override\n-  protected void onPause() {\n-    super.onPause();\n-    backgroundRepository.removeUpdatable(updatable);\n   }\n-}\n\\ No newline at end of file\n+}"},{"sha":"a36324f3586486e7ca9845533823eb43b9444cab","filename":"testapp/src/main/java/com/google/android/agera/testapp/NotesFragment.java","status":"added","additions":157,"deletions":0,"changes":157,"blob_url":"https://github.com/google/agera/blob/b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1/testapp/src/main/java/com/google/android/agera/testapp/NotesFragment.java","raw_url":"https://github.com/google/agera/raw/b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1/testapp/src/main/java/com/google/android/agera/testapp/NotesFragment.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/NotesFragment.java?ref=b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1","patch":"@@ -0,0 +1,157 @@\n+/*\n+ * Copyright 2015 Google Inc. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.android.agera.testapp;\n+\n+import static android.graphics.BitmapFactory.decodeByteArray;\n+import static com.google.android.agera.Repositories.repositoryWithInitialValue;\n+import static com.google.android.agera.RepositoryConfig.SEND_INTERRUPT;\n+import static com.google.android.agera.Result.absentIfNull;\n+import static com.google.android.agera.net.HttpFunctions.httpFunction;\n+import static com.google.android.agera.net.HttpRequests.httpGetRequest;\n+import static com.google.android.agera.rvadapter.RepositoryAdapter.repositoryAdapter;\n+import static com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenters.dataBindingRepositoryPresenterOf;\n+import static com.google.android.agera.testapp.NotesStore.notesStore;\n+import static java.util.concurrent.Executors.newSingleThreadExecutor;\n+\n+import com.google.android.agera.Predicate;\n+import com.google.android.agera.Receiver;\n+import com.google.android.agera.Repository;\n+import com.google.android.agera.Result;\n+import com.google.android.agera.Updatable;\n+import com.google.android.agera.rvadapter.RepositoryAdapter;\n+\n+import android.app.AlertDialog;\n+import android.graphics.Bitmap;\n+import android.os.Bundle;\n+import android.support.annotation.Nullable;\n+import android.support.v4.app.Fragment;\n+import android.support.v7.widget.LinearLayoutManager;\n+import android.support.v7.widget.RecyclerView;\n+import android.util.DisplayMetrics;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.EditText;\n+import android.widget.ImageView;\n+\n+import java.util.concurrent.Executor;\n+\n+public final class NotesFragment extends Fragment {\n+  private static final Executor networkExecutor = newSingleThreadExecutor();\n+  private static final Executor calculationExecutor = newSingleThreadExecutor();\n+\n+  private Repository<Result<Bitmap>> backgroundRepository;\n+  private Updatable updatable;\n+  private RepositoryAdapter adapter;\n+\n+  @Override\n+  public void onCreate(@Nullable final Bundle savedInstanceState) {\n+    super.onCreate(savedInstanceState);\n+    setRetainInstance(true);\n+  }\n+\n+  @Nullable\n+  @Override\n+  public View onCreateView(final LayoutInflater inflater, @Nullable final ViewGroup container,\n+      @Nullable final Bundle savedInstanceState) {\n+    final View view = inflater.inflate(R.layout.notes_fragment, container, false);\n+\n+    // Create the notes store, containing all async IO\n+    final NotesStore notesStore = notesStore(getContext().getApplicationContext());\n+\n+    // Find the clear button and wire the click listener to call the clear notes updatable\n+    view.findViewById(R.id.clear).setOnClickListener(v -> notesStore.clearNotes());\n+\n+    // Find the add button and wire the click listener to show a dialog that in turn calls the add\n+    // note from text from the notes store when adding notes\n+    view.findViewById(R.id.add).setOnClickListener(v -> {\n+      final EditText editText = new EditText(v.getContext());\n+      editText.setId(R.id.edit);\n+      new AlertDialog.Builder(v.getContext())\n+          .setTitle(R.string.add_note)\n+          .setView(editText)\n+          .setPositiveButton(R.string.add, (d, i) -> {\n+            notesStore.insertNoteFromText(editText.getText().toString());\n+          })\n+          .create().show();\n+    });\n+\n+    adapter = repositoryAdapter()\n+        .add(notesStore.getNotesRepository(), dataBindingRepositoryPresenterOf(Note.class)\n+            .layout(R.layout.text_layout)\n+            .itemId(BR.note)\n+            .stableIdForItem(input -> (long) input.getId())\n+            .handler(BR.click,\n+                (Receiver<Note>) note -> {\n+                  final EditText editText = new EditText(getContext());\n+                  editText.setId(R.id.edit);\n+                  editText.setText(note.getNote());\n+                  new AlertDialog.Builder(getContext())\n+                      .setTitle(R.string.edit_note)\n+                      .setView(editText)\n+                      .setPositiveButton(R.string.edit,\n+                          (d, i) -> notesStore.updateNote(note, editText.getText().toString()))\n+                      .create().show();\n+                })\n+            .handler(BR.longClick,\n+                (Predicate<Note>) notesStore::deleteNote)\n+            .forList())\n+        .build();\n+    adapter.setHasStableIds(true);\n+\n+    // Setup the recycler view using the repository adapter\n+    final RecyclerView recyclerView = (RecyclerView) view.findViewById(R.id.result);\n+    recyclerView.setAdapter(adapter);\n+    recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));\n+\n+    final DisplayMetrics displayMetrics = getResources().getDisplayMetrics();\n+\n+    backgroundRepository = repositoryWithInitialValue(Result.<Bitmap>absent())\n+        .observe()\n+        .onUpdatesPerLoop()\n+        .goTo(networkExecutor)\n+        .getFrom(() -> \"http://www.gravatar.com/avatar/4df6f4fe5976df17deeea19443d4429d?s=\"\n+            + Math.max(displayMetrics.heightPixels, displayMetrics.widthPixels))\n+        .transform(url -> httpGetRequest(url).compile())\n+        .attemptTransform(httpFunction()).orEnd(Result::failure)\n+        .goTo(calculationExecutor)\n+        .thenTransform(input -> {\n+          final byte[] body = input.getBody();\n+          return absentIfNull(decodeByteArray(body, 0, body.length));\n+        })\n+        .onDeactivation(SEND_INTERRUPT)\n+        .compile();\n+\n+    final ImageView imageView = (ImageView) view.findViewById(R.id.background);\n+\n+    updatable = () -> backgroundRepository.get().ifSucceededSendTo(imageView::setImageBitmap);\n+    return view;\n+  }\n+\n+  @Override\n+  public void onStart() {\n+    super.onStart();\n+    adapter.startObserving();\n+    backgroundRepository.addUpdatable(updatable);\n+  }\n+\n+  @Override\n+  public void onStop() {\n+    super.onStop();\n+    backgroundRepository.removeUpdatable(updatable);\n+    adapter.stopObserving();\n+  }\n+}"},{"sha":"5ad780ea92314f847cdd4ce91614c707076a03ab","filename":"testapp/src/main/res/layout/notes_activity.xml","status":"modified","additions":5,"deletions":31,"changes":36,"blob_url":"https://github.com/google/agera/blob/b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1/testapp/src/main/res/layout/notes_activity.xml","raw_url":"https://github.com/google/agera/raw/b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1/testapp/src/main/res/layout/notes_activity.xml","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/res/layout/notes_activity.xml?ref=b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1","patch":"@@ -14,35 +14,9 @@\n   ~ See the License for the specific language governing permissions and\n   ~ limitations under the License.\n   -->\n-<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+<fragment\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/notes_fragment\"\n+    android:name=\"com.google.android.agera.testapp.NotesFragment\"\n     android:layout_width=\"match_parent\"\n-    android:layout_height=\"match_parent\">\n-  <ImageView\n-      android:id=\"@+id/background\"\n-      android:layout_width=\"match_parent\"\n-      android:layout_height=\"match_parent\"\n-      android:background=\"@android:color/white\"/>\n-  <android.support.v7.widget.RecyclerView\n-      android:id=\"@+id/result\"\n-      android:layout_width=\"match_parent\"\n-      android:layout_height=\"match_parent\"/>\n-  <LinearLayout\n-      android:layout_width=\"match_parent\"\n-      android:layout_height=\"wrap_content\"\n-      android:layout_gravity=\"bottom\"\n-      android:weightSum=\"4\"\n-      android:orientation=\"horizontal\">\n-    <Button\n-        android:id=\"@+id/add\"\n-        android:layout_width=\"0dp\"\n-        android:layout_height=\"wrap_content\"\n-        android:layout_weight=\"1\"\n-        android:text=\"@string/add\"/>\n-    <Button\n-        android:id=\"@+id/clear\"\n-        android:layout_width=\"0dp\"\n-        android:layout_height=\"wrap_content\"\n-        android:layout_weight=\"1\"\n-        android:text=\"@string/clear\"/>\n-  </LinearLayout>\n-</FrameLayout>\n\\ No newline at end of file\n+    android:layout_height=\"match_parent\"/>"},{"sha":"74e3d48eea4b221540bc720968582803b1861738","filename":"testapp/src/main/res/layout/notes_fragment.xml","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/google/agera/blob/b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1/testapp/src/main/res/layout/notes_fragment.xml","raw_url":"https://github.com/google/agera/raw/b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1/testapp/src/main/res/layout/notes_fragment.xml","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/res/layout/notes_fragment.xml?ref=b2a3b264ea95dc47d5bda490cc0dad48dfa22dc1","patch":"@@ -0,0 +1,48 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+  ~ Copyright 2015 Google Inc. All Rights Reserved.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\">\n+  <ImageView\n+      android:id=\"@+id/background\"\n+      android:layout_width=\"match_parent\"\n+      android:layout_height=\"match_parent\"\n+      android:background=\"@android:color/white\"/>\n+  <android.support.v7.widget.RecyclerView\n+      android:id=\"@+id/result\"\n+      android:layout_width=\"match_parent\"\n+      android:layout_height=\"match_parent\"/>\n+  <LinearLayout\n+      android:layout_width=\"match_parent\"\n+      android:layout_height=\"wrap_content\"\n+      android:layout_gravity=\"bottom\"\n+      android:weightSum=\"4\"\n+      android:orientation=\"horizontal\">\n+    <Button\n+        android:id=\"@+id/add\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_weight=\"1\"\n+        android:text=\"@string/add\"/>\n+    <Button\n+        android:id=\"@+id/clear\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_weight=\"1\"\n+        android:text=\"@string/clear\"/>\n+  </LinearLayout>\n+</FrameLayout>"}]}