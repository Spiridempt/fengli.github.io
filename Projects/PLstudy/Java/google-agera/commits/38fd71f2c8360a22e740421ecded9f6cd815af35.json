{"sha":"38fd71f2c8360a22e740421ecded9f6cd815af35","commit":{"author":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2017-01-10T18:16:04Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2017-01-10T18:16:04Z"},"message":"Simplified test app row handler (#140)","tree":{"sha":"4ec0eeffe325ba5b3b5c960a257ffb1723e28e99","url":"https://api.github.com/repos/google/agera/git/trees/4ec0eeffe325ba5b3b5c960a257ffb1723e28e99"},"url":"https://api.github.com/repos/google/agera/git/commits/38fd71f2c8360a22e740421ecded9f6cd815af35","comment_count":0},"url":"https://api.github.com/repos/google/agera/commits/38fd71f2c8360a22e740421ecded9f6cd815af35","html_url":"https://github.com/google/agera/commit/38fd71f2c8360a22e740421ecded9f6cd815af35","comments_url":"https://api.github.com/repos/google/agera/commits/38fd71f2c8360a22e740421ecded9f6cd815af35/comments","author":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"avatar_url":"https://avatars0.githubusercontent.com/u/19864447?v=3","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"ff0237fb2a29fe73e159caaadf8392ad75da4461","url":"https://api.github.com/repos/google/agera/commits/ff0237fb2a29fe73e159caaadf8392ad75da4461","html_url":"https://github.com/google/agera/commit/ff0237fb2a29fe73e159caaadf8392ad75da4461"}],"stats":{"total":18,"additions":3,"deletions":15},"files":[{"sha":"3bf662cf67c77dda32b12d929afcdf6d2ce3439b","filename":"testapp/src/main/java/com/google/android/agera/testapp/RowHandler.java","status":"modified","additions":3,"deletions":15,"changes":18,"blob_url":"https://github.com/google/agera/blob/38fd71f2c8360a22e740421ecded9f6cd815af35/testapp/src/main/java/com/google/android/agera/testapp/RowHandler.java","raw_url":"https://github.com/google/agera/raw/38fd71f2c8360a22e740421ecded9f6cd815af35/testapp/src/main/java/com/google/android/agera/testapp/RowHandler.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/RowHandler.java?ref=38fd71f2c8360a22e740421ecded9f6cd815af35","patch":"@@ -114,27 +114,15 @@ public void bind(@NonNull final TRow row, @NonNull final View view) {\n         startedAdapters.add(adapter);\n       }\n     }\n-    final LayoutManager layoutManager = recyclerView.getLayoutManager();\n-    final Parcelable state = itemRowStates.get(id);\n-    layoutManager.onRestoreInstanceState(state);\n-    if (state == null) {\n-      layoutManager.scrollToPosition(0);\n-    }\n-  }\n-\n-  @Override\n-  public void onScrollStateChanged(final RecyclerView recyclerView, final int newState) {\n-    if (recyclerView != null\n-        && recyclerView.getLayoutManager() != null) {\n-      itemRowStates.put(previousStableIds.get(recyclerView.getAdapter()),\n-          recyclerView.getLayoutManager().onSaveInstanceState());\n-    }\n+    recyclerView.getLayoutManager().onRestoreInstanceState(itemRowStates.get(id));\n   }\n \n   @Override\n   public void accept(@NonNull final View view) {\n     final RecyclerView recyclerView = (RecyclerView) view;\n     final RepositoryAdapter adapter = (RepositoryAdapter) recyclerView.getAdapter();\n+    itemRowStates.put(previousStableIds.get(adapter),\n+        recyclerView.getLayoutManager().onSaveInstanceState());\n     if (startedAdapters.remove(adapter)) {\n       adapter.stopObserving();\n     }"}]}