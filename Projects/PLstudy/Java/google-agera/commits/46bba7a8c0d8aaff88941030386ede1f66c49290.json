{
  "sha": "46bba7a8c0d8aaff88941030386ede1f66c49290",
  "commit": {
    "author": {
      "name": "Magnus Ernstsson",
      "email": "magnus@ernstsson.net",
      "date": "2016-05-15T09:12:26Z"
    },
    "committer": {
      "name": "Magnus Ernstsson",
      "email": "magnus@ernstsson.net",
      "date": "2016-05-15T09:12:26Z"
    },
    "message": "Added test of illegal add/remove from non looper thread",
    "tree": {
      "sha": "a1261ebe26254e3586093f2e2089fae88502d596",
      "url": "https://api.github.com/repos/google/agera/git/trees/a1261ebe26254e3586093f2e2089fae88502d596"
    },
    "url": "https://api.github.com/repos/google/agera/git/commits/46bba7a8c0d8aaff88941030386ede1f66c49290",
    "comment_count": 0
  },
  "url": "https://api.github.com/repos/google/agera/commits/46bba7a8c0d8aaff88941030386ede1f66c49290",
  "html_url": "https://github.com/google/agera/commit/46bba7a8c0d8aaff88941030386ede1f66c49290",
  "comments_url": "https://api.github.com/repos/google/agera/commits/46bba7a8c0d8aaff88941030386ede1f66c49290/comments",
  "author": {
    "login": "ernstsson",
    "id": 378389,
    "avatar_url": "https://avatars2.githubusercontent.com/u/378389?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ernstsson",
    "html_url": "https://github.com/ernstsson",
    "followers_url": "https://api.github.com/users/ernstsson/followers",
    "following_url": "https://api.github.com/users/ernstsson/following{/other_user}",
    "gists_url": "https://api.github.com/users/ernstsson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ernstsson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ernstsson/subscriptions",
    "organizations_url": "https://api.github.com/users/ernstsson/orgs",
    "repos_url": "https://api.github.com/users/ernstsson/repos",
    "events_url": "https://api.github.com/users/ernstsson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ernstsson/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ernstsson",
    "id": 378389,
    "avatar_url": "https://avatars2.githubusercontent.com/u/378389?v=3",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ernstsson",
    "html_url": "https://github.com/ernstsson",
    "followers_url": "https://api.github.com/users/ernstsson/followers",
    "following_url": "https://api.github.com/users/ernstsson/following{/other_user}",
    "gists_url": "https://api.github.com/users/ernstsson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ernstsson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ernstsson/subscriptions",
    "organizations_url": "https://api.github.com/users/ernstsson/orgs",
    "repos_url": "https://api.github.com/users/ernstsson/repos",
    "events_url": "https://api.github.com/users/ernstsson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ernstsson/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e02dae6a9474d323fc52b5b3e3472ec125b3c221",
      "url": "https://api.github.com/repos/google/agera/commits/e02dae6a9474d323fc52b5b3e3472ec125b3c221",
      "html_url": "https://github.com/google/agera/commit/e02dae6a9474d323fc52b5b3e3472ec125b3c221"
    }
  ],
  "stats": {
    "total": 68,
    "additions": 68,
    "deletions": 0
  },
  "files": [
    {
      "sha": "624a0b6604e701937ee5f24e069abf35f27bc3ac",
      "filename": "agera/src/test/java/com/google/android/agera/ObservablesTest.java",
      "status": "modified",
      "additions": 68,
      "deletions": 0,
      "changes": 68,
      "blob_url": "https://github.com/google/agera/blob/46bba7a8c0d8aaff88941030386ede1f66c49290/agera/src/test/java/com/google/android/agera/ObservablesTest.java",
      "raw_url": "https://github.com/google/agera/raw/46bba7a8c0d8aaff88941030386ede1f66c49290/agera/src/test/java/com/google/android/agera/ObservablesTest.java",
      "contents_url": "https://api.github.com/repos/google/agera/contents/agera/src/test/java/com/google/android/agera/ObservablesTest.java?ref=46bba7a8c0d8aaff88941030386ede1f66c49290",
      "patch": "@@ -30,6 +30,7 @@\n import static com.google.android.agera.test.mocks.MockUpdatable.mockUpdatable;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.greaterThanOrEqualTo;\n+import static org.hamcrest.Matchers.is;\n import static org.hamcrest.Matchers.not;\n import static org.hamcrest.Matchers.notNullValue;\n import static org.mockito.Mockito.mock;\n@@ -44,6 +45,7 @@\n \n import com.google.android.agera.test.mocks.MockUpdatable;\n \n+import android.support.annotation.NonNull;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n@@ -57,6 +59,7 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n+import java.util.concurrent.atomic.AtomicBoolean;\n \n @Config(manifest = NONE)\n @RunWith(RobolectricTestRunner.class)\n@@ -321,7 +324,72 @@ public void shouldCallMessageObjUpdateForMsgCallUpdatableMessage() {\n   }\n \n   @Test\n+  public void shouldNotAllowAddingUpdatablesOnNonLooperThreadInBaseObservable() {\n+    final Observable observable = new BaseObservable() {};\n+\n+    assertThat(throwsIllegalStateExceptionForCallOnNonLooperThread(new Runnable() {\n+      @Override\n+      public void run() {\n+        updatable.addToObservable(observable);\n+      }\n+    }), is(true));\n+  }\n+\n+  @Test\n+  public void shouldNotAllowCreatingBaseObservableOnNonLooperThread() {\n+\n+    assertThat(throwsIllegalStateExceptionForCallOnNonLooperThread(new Runnable() {\n+      @Override\n+      public void run() {\n+        new BaseObservable() {};\n+      }\n+    }), is(true));\n+  }\n+\n+  @Test\n+  public void shouldNotAllowRemovingUpdatablesOnNonLooperThreadInBaseObservable() {\n+    final Observable observable = new BaseObservable() {};\n+    updatable.addToObservable(observable);\n+\n+    assertThat(throwsIllegalStateExceptionForCallOnNonLooperThread(new Runnable() {\n+      @Override\n+      public void run() {\n+        updatable.removeFromObservables();\n+      }\n+    }), is(true));\n+  }\n+\n+  @Test\n+  public void shouldHandleLifeCycleInBaseObservable() {\n+    final Observable observable = new BaseObservable() {};\n+\n+    updatable.addToObservable(observable);\n+    updatable.removeFromObservables();\n+  }\n+\n+  @Test\n   public void shouldHavePrivateConstructor() {\n     assertThat(Observables.class, hasPrivateConstructor());\n   }\n+\n+  private boolean throwsIllegalStateExceptionForCallOnNonLooperThread(\n+      @NonNull final Runnable runnable) {\n+    final AtomicBoolean gotException = new AtomicBoolean(false);\n+    final Thread thread = new Thread(new Runnable() {\n+      @Override\n+      public void run() {\n+        try {\n+          runnable.run();\n+        } catch (IllegalStateException e) {\n+          gotException.set(true);\n+        }\n+      }\n+    });\n+    thread.start();\n+    try {\n+      thread.join();\n+    } catch (InterruptedException ignored) {\n+    }\n+    return gotException.get();\n+  }\n }"
    }
  ]
}
