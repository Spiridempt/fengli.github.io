{"sha":"2b241e54a5b80303a8699efaf0fa3eb1ad24774d","commit":{"author":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-10-08T12:46:50Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2016-10-08T12:46:50Z"},"message":"Tidied up a few minor issues found in review (#108)","tree":{"sha":"a95fdde9cd76ad39338602f5d3e11ed2d9e84a5b","url":"https://api.github.com/repos/google/agera/git/trees/a95fdde9cd76ad39338602f5d3e11ed2d9e84a5b"},"url":"https://api.github.com/repos/google/agera/git/commits/2b241e54a5b80303a8699efaf0fa3eb1ad24774d","comment_count":0},"url":"https://api.github.com/repos/google/agera/commits/2b241e54a5b80303a8699efaf0fa3eb1ad24774d","html_url":"https://github.com/google/agera/commit/2b241e54a5b80303a8699efaf0fa3eb1ad24774d","comments_url":"https://api.github.com/repos/google/agera/commits/2b241e54a5b80303a8699efaf0fa3eb1ad24774d/comments","author":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"avatar_url":"https://avatars0.githubusercontent.com/u/19864447?v=3","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"1d10eee46b8d4144586669446c8711444f66863e","url":"https://api.github.com/repos/google/agera/commits/1d10eee46b8d4144586669446c8711444f66863e","html_url":"https://github.com/google/agera/commit/1d10eee46b8d4144586669446c8711444f66863e"}],"stats":{"total":14,"additions":9,"deletions":5},"files":[{"sha":"72e9e0fd35b1714923c6a9a497916c3dfe975130","filename":"agera/src/main/java/com/google/android/agera/ActivationHandler.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/google/agera/blob/2b241e54a5b80303a8699efaf0fa3eb1ad24774d/agera/src/main/java/com/google/android/agera/ActivationHandler.java","raw_url":"https://github.com/google/agera/raw/2b241e54a5b80303a8699efaf0fa3eb1ad24774d/agera/src/main/java/com/google/android/agera/ActivationHandler.java","contents_url":"https://api.github.com/repos/google/agera/contents/agera/src/main/java/com/google/android/agera/ActivationHandler.java?ref=2b241e54a5b80303a8699efaf0fa3eb1ad24774d","patch":"@@ -25,8 +25,8 @@\n  * <p>Typically an {@link Observable} service implemented using a {@link UpdateDispatcher} only\n  * needs to be updated if it has clients of its own. By starting to listen to updates from its\n  * clients on {@link #observableActivated} and stopping on {@link #observableDeactivated}, the\n- * service of the service can implement an <i>active</i>/<i>inactive</i> lifecycle,\n- * saving memory and execution time when not needed.\n+ * service can implement an <i>active</i>/<i>inactive</i> lifecycle, saving memory and execution\n+ * time when not needed.\n  */\n public interface ActivationHandler {\n "},{"sha":"b4e8b806fb180f65e005fcf2da8aa0801529a0d6","filename":"agera/src/main/java/com/google/android/agera/BaseObservable.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/google/agera/blob/2b241e54a5b80303a8699efaf0fa3eb1ad24774d/agera/src/main/java/com/google/android/agera/BaseObservable.java","raw_url":"https://github.com/google/agera/raw/2b241e54a5b80303a8699efaf0fa3eb1ad24774d/agera/src/main/java/com/google/android/agera/BaseObservable.java","contents_url":"https://api.github.com/repos/google/agera/contents/agera/src/main/java/com/google/android/agera/BaseObservable.java?ref=2b241e54a5b80303a8699efaf0fa3eb1ad24774d","patch":"@@ -46,6 +46,7 @@\n   @NonNull\n   private final Object token = new Object();\n   final int shortestUpdateWindowMillis;\n+  // Pairs of updatables and their associated handlers. Always of even length.\n   @NonNull\n   private Object[] updatablesAndHandlers;\n   private int size;"},{"sha":"7bf44ccb3f012742146b21ea26dc74f94afb7a9f","filename":"agera/src/test/java/com/google/android/agera/test/mocks/MockUpdatable.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/google/agera/blob/2b241e54a5b80303a8699efaf0fa3eb1ad24774d/agera/src/test/java/com/google/android/agera/test/mocks/MockUpdatable.java","raw_url":"https://github.com/google/agera/raw/2b241e54a5b80303a8699efaf0fa3eb1ad24774d/agera/src/test/java/com/google/android/agera/test/mocks/MockUpdatable.java","contents_url":"https://api.github.com/repos/google/agera/contents/agera/src/test/java/com/google/android/agera/test/mocks/MockUpdatable.java?ref=2b241e54a5b80303a8699efaf0fa3eb1ad24774d","patch":"@@ -26,11 +26,14 @@\n import java.util.List;\n \n public final class MockUpdatable implements Updatable {\n-  private final List<Observable> observables = new ArrayList<>();\n+  private final List<Observable> observables;\n \n-  private boolean updated = false;\n+  private boolean updated;\n \n-  private MockUpdatable() {}\n+  private MockUpdatable() {\n+    this.observables = new ArrayList<>();\n+    this.updated = false;\n+  }\n \n   @NonNull\n   public static MockUpdatable mockUpdatable() {"}]}