{"sha":"ebe9c5745d49d8861d2b4160ae455b8f163c02e5","commit":{"author":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-05-02T11:03:33Z"},"committer":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-05-07T17:30:21Z"},"message":"Tidied up RepositoryAdapter","tree":{"sha":"6ce1819112c06c958495dfc8e73f35bdd49d3254","url":"https://api.github.com/repos/google/agera/git/trees/6ce1819112c06c958495dfc8e73f35bdd49d3254"},"url":"https://api.github.com/repos/google/agera/git/commits/ebe9c5745d49d8861d2b4160ae455b8f163c02e5","comment_count":0},"url":"https://api.github.com/repos/google/agera/commits/ebe9c5745d49d8861d2b4160ae455b8f163c02e5","html_url":"https://github.com/google/agera/commit/ebe9c5745d49d8861d2b4160ae455b8f163c02e5","comments_url":"https://api.github.com/repos/google/agera/commits/ebe9c5745d49d8861d2b4160ae455b8f163c02e5/comments","author":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"committer":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"parents":[{"sha":"a8b1523fb1584c1ce31e594181f84d5e01ce7f8d","url":"https://api.github.com/repos/google/agera/commits/a8b1523fb1584c1ce31e594181f84d5e01ce7f8d","html_url":"https://github.com/google/agera/commit/a8b1523fb1584c1ce31e594181f84d5e01ce7f8d"}],"stats":{"total":23,"additions":12,"deletions":11},"files":[{"sha":"dceafc507ad54e7da02256cfe3632dee3b586c1b","filename":"extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryAdapter.java","status":"modified","additions":12,"deletions":11,"changes":23,"blob_url":"https://github.com/google/agera/blob/ebe9c5745d49d8861d2b4160ae455b8f163c02e5/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryAdapter.java","raw_url":"https://github.com/google/agera/raw/ebe9c5745d49d8861d2b4160ae455b8f163c02e5/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryAdapter.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryAdapter.java?ref=ebe9c5745d49d8861d2b4160ae455b8f163c02e5","patch":"@@ -84,13 +84,13 @@ public static Builder repositoryAdapter() {\n      *     position.\n      * @return This instance, for chaining.\n      */\n-    public <T> Builder add(@NonNull final  Repository<T> repository,\n+    public <T> Builder add(@NonNull final Repository<T> repository,\n         @NonNull final RepositoryPresenter<T> presenter) {\n       @SuppressWarnings(\"unchecked\")\n-      Repository<Object> untypedRepository = (Repository<Object>) checkNotNull(repository);\n+      final Repository<Object> untypedRepository = (Repository<Object>) checkNotNull(repository);\n       repositories.add(untypedRepository);\n       @SuppressWarnings(\"unchecked\")\n-      RepositoryPresenter<Object> untypedPresenter =\n+      final RepositoryPresenter<Object> untypedPresenter =\n           (RepositoryPresenter<Object>) checkNotNull(presenter);\n       presenters.add(untypedPresenter);\n       observables.add(untypedRepository);\n@@ -144,17 +144,17 @@ private Builder() {}\n   private int resolvedItemIndex;\n \n   public RepositoryAdapter(@NonNull final Builder builder) {\n-    int count = builder.repositories.size();\n+    final int count = builder.repositories.size();\n     checkArgument(count > 0, \"Must add at least one repository\");\n     checkArgument(builder.presenters.size() == count,\n         \"Unexpected repository and presenter count mismatch\");\n \n     @SuppressWarnings(\"unchecked\")\n-    Repository<Object>[] repositories = builder.repositories.toArray(\n+    final Repository<Object>[] repositories = builder.repositories.toArray(\n         (Repository<Object>[]) new Repository[count]);\n \n     @SuppressWarnings(\"unchecked\")\n-    RepositoryPresenter<Object>[] presenters = builder.presenters.toArray(\n+    final RepositoryPresenter<Object>[] presenters = builder.presenters.toArray(\n         (RepositoryPresenter<Object>[]) new RepositoryPresenter[count]);\n \n     final Observable[] observables =\n@@ -209,7 +209,7 @@ public final int getItemCount() {\n   }\n \n   @Override\n-  public final int getItemViewType(int position) {\n+  public final int getItemViewType(final int position) {\n     resolveIndices(position);\n     int resolvedRepositoryIndex = this.resolvedRepositoryIndex;\n     int resolvedItemIndex = this.resolvedItemIndex;\n@@ -218,7 +218,7 @@ public final int getItemViewType(int position) {\n   }\n \n   @Override\n-  public final long getItemId(int position) {\n+  public final long getItemId(final int position) {\n     resolveIndices(position);\n     int resolvedRepositoryIndex = this.resolvedRepositoryIndex;\n     int resolvedItemIndex = this.resolvedItemIndex;\n@@ -233,13 +233,14 @@ public final long getItemId(int position) {\n    * any special requirements.\n    */\n   @Override\n-  public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int layoutResourceId) {\n+  public RecyclerView.ViewHolder onCreateViewHolder(final ViewGroup parent,\n+      final int layoutResourceId) {\n     return new RecyclerView.ViewHolder(\n         LayoutInflater.from(parent.getContext()).inflate(layoutResourceId, parent, false)) {};\n   }\n \n   @Override\n-  public final void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {\n+  public final void onBindViewHolder(final RecyclerView.ViewHolder holder, final int position) {\n     resolveIndices(position);\n     int resolvedRepositoryIndex = this.resolvedRepositoryIndex;\n     int resolvedItemIndex = this.resolvedItemIndex;\n@@ -251,7 +252,7 @@ public final void onBindViewHolder(RecyclerView.ViewHolder holder, int position)\n    * Converts the given overall adapter {@code position} into {@link #resolvedRepositoryIndex}\n    * and {@link #resolvedItemIndex}.\n    */\n-  private void resolveIndices(int position) {\n+  private void resolveIndices(final int position) {\n     int itemCount = getItemCount(); // This conveniently rebuilds endPositions if necessary.\n     if (position < 0 || position >= itemCount) {\n       throw new IndexOutOfBoundsException("}]}