{"sha":"14f962950d780421b3640fd13faac791ff111453","commit":{"author":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-08-14T03:59:37Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2016-08-14T03:59:37Z"},"message":"Added basic IdentityMultimap unit tests (#96)","tree":{"sha":"80a904dcea6d6bf7f1cff5a1bf72a285e2c99901","url":"https://api.github.com/repos/google/agera/git/trees/80a904dcea6d6bf7f1cff5a1bf72a285e2c99901"},"url":"https://api.github.com/repos/google/agera/git/commits/14f962950d780421b3640fd13faac791ff111453","comment_count":0},"url":"https://api.github.com/repos/google/agera/commits/14f962950d780421b3640fd13faac791ff111453","html_url":"https://github.com/google/agera/commit/14f962950d780421b3640fd13faac791ff111453","comments_url":"https://api.github.com/repos/google/agera/commits/14f962950d780421b3640fd13faac791ff111453/comments","author":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"avatar_url":"https://avatars0.githubusercontent.com/u/19864447?v=3","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"ac38f82a004d2a6025108b20f4eb30fe231849fa","url":"https://api.github.com/repos/google/agera/commits/ac38f82a004d2a6025108b20f4eb30fe231849fa","html_url":"https://github.com/google/agera/commit/ac38f82a004d2a6025108b20f4eb30fe231849fa"}],"stats":{"total":91,"additions":91,"deletions":0},"files":[{"sha":"d490cc764468cc914769f8c56c93e914ae8196f3","filename":"agera/src/test/java/com/google/android/agera/IdentityMultimapTest.java","status":"added","additions":91,"deletions":0,"changes":91,"blob_url":"https://github.com/google/agera/blob/14f962950d780421b3640fd13faac791ff111453/agera/src/test/java/com/google/android/agera/IdentityMultimapTest.java","raw_url":"https://github.com/google/agera/raw/14f962950d780421b3640fd13faac791ff111453/agera/src/test/java/com/google/android/agera/IdentityMultimapTest.java","contents_url":"https://api.github.com/repos/google/agera/contents/agera/src/test/java/com/google/android/agera/IdentityMultimapTest.java?ref=14f962950d780421b3640fd13faac791ff111453","patch":"@@ -0,0 +1,91 @@\n+package com.google.android.agera;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public final class IdentityMultimapTest {\n+  private static final String KEY_1 = \"key1\";\n+  private static final String KEY_2 = \"key2\";\n+  private static final String VALUE_1 = \"value1\";\n+  private static final String VALUE_2 = \"value2\";\n+\n+  private IdentityMultimap identityMultimap;\n+\n+  @Before\n+  public void setUp() {\n+    identityMultimap = new IdentityMultimap();\n+  }\n+\n+  @Test\n+  public void shouldReturnThatNotAddedKeyWasNotRemoved() {\n+    assertThat(identityMultimap.removeKey(new Object()), is(false));\n+  }\n+\n+  @Test\n+  public void shouldHandleRemovalOfNonAddedKeyValuePairWithoutKeyOrValue() {\n+    identityMultimap.removeKeyValuePair(new Object(), new Object());\n+  }\n+\n+  @Test\n+  public void shouldReturnThatKeyValuePairWasAdded() {\n+    assertThat(identityMultimap.addKeyValuePair(KEY_1, VALUE_1), is(true));\n+  }\n+\n+  @Test\n+  public void shouldReturnThatKeyValuePairWasNotAdded() {\n+    identityMultimap.addKeyValuePair(KEY_1, VALUE_1);\n+\n+    assertThat(identityMultimap.addKeyValuePair(KEY_1, VALUE_1), is(false));\n+  }\n+\n+  @Test\n+  public void shouldHandleRemovalOfAddedKeyValuePairWithoutKeyOrValue() {\n+    identityMultimap.addKeyValuePair(KEY_1, VALUE_1);\n+\n+    identityMultimap.removeKeyValuePair(KEY_1, VALUE_1);\n+  }\n+\n+  @Test\n+  public void shouldRemoveSecondValueForKeyOnRemoveKey() {\n+    identityMultimap.addKeyValuePair(KEY_1, VALUE_1);\n+    identityMultimap.addKeyValuePair(KEY_1, VALUE_2);\n+    identityMultimap.removeKeyValuePair(KEY_1, VALUE_1);\n+\n+    assertThat(identityMultimap.removeKey(KEY_1), is(true));\n+    assertThat(identityMultimap.removeKey(KEY_1), is(false));\n+  }\n+\n+  @Test\n+  public void shouldRemoveOnlyKeySpecified() {\n+    identityMultimap.addKeyValuePair(KEY_1, VALUE_1);\n+    identityMultimap.addKeyValuePair(KEY_2, VALUE_2);\n+\n+    identityMultimap.removeKeyValuePair(KEY_1, VALUE_1);\n+\n+    assertThat(identityMultimap.removeKey(KEY_2), is(true));\n+  }\n+\n+  @Test\n+  public void shouldRemoveOnlyKeyValueSpecified() {\n+    identityMultimap.addKeyValuePair(KEY_1, VALUE_1);\n+    identityMultimap.addKeyValuePair(KEY_2, VALUE_2);\n+\n+    identityMultimap.removeKey(KEY_1);\n+\n+    assertThat(identityMultimap.removeKey(KEY_2), is(true));\n+  }\n+\n+  @Test\n+  public void shouldHandleAddOfNewKeyValueAfterRemove() {\n+    identityMultimap.addKeyValuePair(KEY_1, VALUE_1);\n+\n+    identityMultimap.removeKey(KEY_1);\n+\n+    identityMultimap.addKeyValuePair(KEY_2, VALUE_2);\n+\n+    assertThat(identityMultimap.removeKey(KEY_2), is(true));\n+  }\n+}"}]}