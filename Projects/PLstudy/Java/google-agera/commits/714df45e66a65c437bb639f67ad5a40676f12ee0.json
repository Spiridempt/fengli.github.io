{"sha":"714df45e66a65c437bb639f67ad5a40676f12ee0","commit":{"author":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-08-09T14:21:32Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2016-08-09T14:21:32Z"},"message":"Changed implementations of Observable to extend BaseObservable (#93)","tree":{"sha":"aa01fa88ff6d50ab9c01e03fde891dd739429927","url":"https://api.github.com/repos/google/agera/git/trees/aa01fa88ff6d50ab9c01e03fde891dd739429927"},"url":"https://api.github.com/repos/google/agera/git/commits/714df45e66a65c437bb639f67ad5a40676f12ee0","comment_count":0},"url":"https://api.github.com/repos/google/agera/commits/714df45e66a65c437bb639f67ad5a40676f12ee0","html_url":"https://github.com/google/agera/commit/714df45e66a65c437bb639f67ad5a40676f12ee0","comments_url":"https://api.github.com/repos/google/agera/commits/714df45e66a65c437bb639f67ad5a40676f12ee0/comments","author":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"avatar_url":"https://avatars0.githubusercontent.com/u/19864447?v=3","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"e11702c177a65241220ca111699bdfae54ea3f30","url":"https://api.github.com/repos/google/agera/commits/e11702c177a65241220ca111699bdfae54ea3f30","html_url":"https://github.com/google/agera/commit/e11702c177a65241220ca111699bdfae54ea3f30"}],"stats":{"total":77,"additions":21,"deletions":56},"files":[{"sha":"953f3ff319c9453a36767e3feda05ecdfbb6ffae","filename":"agera/src/main/java/com/google/android/agera/Repositories.java","status":"modified","additions":3,"deletions":15,"changes":18,"blob_url":"https://github.com/google/agera/blob/714df45e66a65c437bb639f67ad5a40676f12ee0/agera/src/main/java/com/google/android/agera/Repositories.java","raw_url":"https://github.com/google/agera/raw/714df45e66a65c437bb639f67ad5a40676f12ee0/agera/src/main/java/com/google/android/agera/Repositories.java","contents_url":"https://api.github.com/repos/google/agera/contents/agera/src/main/java/com/google/android/agera/Repositories.java?ref=714df45e66a65c437bb639f67ad5a40676f12ee0","patch":"@@ -55,14 +55,12 @@\n     return new SimpleRepository<>(object);\n   }\n \n-  private static final class SimpleRepository<T> implements MutableRepository<T> {\n-    @NonNull\n-    private final UpdateDispatcher updateDispatcher;\n+  private static final class SimpleRepository<T> extends BaseObservable\n+      implements MutableRepository<T> {\n     @NonNull\n     private T reference;\n \n     SimpleRepository(@NonNull final T reference) {\n-      this.updateDispatcher = updateDispatcher();\n       this.reference = checkNotNull(reference);\n     }\n \n@@ -81,17 +79,7 @@ public void accept(@NonNull final T reference) {\n         }\n         this.reference = reference;\n       }\n-      updateDispatcher.update();\n-    }\n-\n-    @Override\n-    public void addUpdatable(@NonNull final Updatable updatable) {\n-      updateDispatcher.addUpdatable(updatable);\n-    }\n-\n-    @Override\n-    public void removeUpdatable(@NonNull final Updatable updatable) {\n-      updateDispatcher.removeUpdatable(updatable);\n+      dispatchUpdate();\n     }\n   }\n "},{"sha":"760a64b017a575fb2ae8746f94dcbf008976934a","filename":"extensions/content/src/main/java/com/google/android/agera/content/ContentObservables.java","status":"modified","additions":18,"deletions":41,"changes":59,"blob_url":"https://github.com/google/agera/blob/714df45e66a65c437bb639f67ad5a40676f12ee0/extensions/content/src/main/java/com/google/android/agera/content/ContentObservables.java","raw_url":"https://github.com/google/agera/raw/714df45e66a65c437bb639f67ad5a40676f12ee0/extensions/content/src/main/java/com/google/android/agera/content/ContentObservables.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/content/src/main/java/com/google/android/agera/content/ContentObservables.java?ref=714df45e66a65c437bb639f67ad5a40676f12ee0","patch":"@@ -20,6 +20,7 @@\n import static com.google.android.agera.Preconditions.checkNotNull;\n \n import com.google.android.agera.ActivationHandler;\n+import com.google.android.agera.BaseObservable;\n import com.google.android.agera.Observable;\n import com.google.android.agera.Updatable;\n import com.google.android.agera.UpdateDispatcher;\n@@ -70,10 +71,9 @@ public static Observable sharedPreferencesObservable(@NonNull final SharedPrefer\n     return new SharedPreferencesObservable(preferences, keys);\n   }\n \n-  private static final class BroadcastObservable extends BroadcastReceiver\n-      implements ActivationHandler, Observable {\n+  private static final class BroadcastObservable extends BaseObservable {\n     @NonNull\n-    private final UpdateDispatcher updateDispatcher;\n+    private final BroadcastReceiver broadcastReceiver;\n     @NonNull\n     private final Context context;\n     @NonNull\n@@ -82,43 +82,31 @@ public static Observable sharedPreferencesObservable(@NonNull final SharedPrefer\n     BroadcastObservable(@NonNull final Context applicationContext,\n         @NonNull final String... actions) {\n       this.context = checkNotNull(applicationContext);\n-      this.updateDispatcher = updateDispatcher(this);\n+      this.broadcastReceiver = new BroadcastReceiver() {\n+        @Override\n+        public void onReceive(final Context context, final Intent intent) {\n+          dispatchUpdate();\n+        }\n+      };\n       this.filter = new IntentFilter();\n       for (final String action : actions) {\n         this.filter.addAction(action);\n       }\n     }\n \n     @Override\n-    public void observableActivated(@NonNull final UpdateDispatcher caller) {\n-      context.registerReceiver(this, filter);\n+    public void observableActivated() {\n+      context.registerReceiver(broadcastReceiver, filter);\n     }\n \n     @Override\n-    public void observableDeactivated(@NonNull final UpdateDispatcher caller) {\n-      context.unregisterReceiver(this);\n-    }\n-\n-    @Override\n-    public void onReceive(final Context context, final Intent intent) {\n-      updateDispatcher.update();\n-    }\n-\n-    @Override\n-    public void addUpdatable(@NonNull final Updatable updatable) {\n-      updateDispatcher.addUpdatable(updatable);\n-    }\n-\n-    @Override\n-    public void removeUpdatable(@NonNull final Updatable updatable) {\n-      updateDispatcher.removeUpdatable(updatable);\n+    public void observableDeactivated() {\n+      context.unregisterReceiver(broadcastReceiver);\n     }\n   }\n \n-  private static final class SharedPreferencesObservable implements\n-      OnSharedPreferenceChangeListener, Observable, ActivationHandler {\n-    @NonNull\n-    private final UpdateDispatcher updateDispatcher;\n+  private static final class SharedPreferencesObservable extends BaseObservable implements\n+      OnSharedPreferenceChangeListener {\n     @NonNull\n     private final SharedPreferences preferences;\n     @NonNull\n@@ -128,34 +116,23 @@ public void removeUpdatable(@NonNull final Updatable updatable) {\n         @NonNull final String... keys) {\n       this.keys = new HashSet<>(Arrays.asList(keys));\n       this.preferences = checkNotNull(preferences);\n-      this.updateDispatcher = updateDispatcher(this);\n     }\n \n     @Override\n-    public void observableActivated(@NonNull final UpdateDispatcher caller) {\n+    public void observableActivated() {\n       preferences.registerOnSharedPreferenceChangeListener(this);\n     }\n \n     @Override\n-    public void observableDeactivated(@NonNull final UpdateDispatcher caller) {\n+    public void observableDeactivated() {\n       preferences.unregisterOnSharedPreferenceChangeListener(this);\n     }\n \n     @Override\n-    public void addUpdatable(@NonNull final Updatable updatable) {\n-      updateDispatcher.addUpdatable(updatable);\n-    }\n-\n-    @Override\n-    public void removeUpdatable(@NonNull final Updatable updatable) {\n-      updateDispatcher.removeUpdatable(updatable);\n-    }\n-\n-    @Override\n     public void onSharedPreferenceChanged(final SharedPreferences sharedPreferences,\n         final String key) {\n       if (keys.contains(key)) {\n-        updateDispatcher.update();\n+        dispatchUpdate();\n       }\n     }\n   }"}]}