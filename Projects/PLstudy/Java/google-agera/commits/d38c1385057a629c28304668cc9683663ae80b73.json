{"sha":"d38c1385057a629c28304668cc9683663ae80b73","commit":{"author":{"name":"Johan Gardell","email":"johan@gardell.me","date":"2016-10-13T12:08:42Z"},"committer":{"name":"Magnus Ernstsson","email":"magnus@ernstsson.net","date":"2016-10-13T12:08:42Z"},"message":"RecyclerView stable ids for rvadapter/rvdatabinding repository presenters. (#109)\n\nModified the testapp to use stable ids.\r\n  Notes are sorted on their content text instead of ID.\r\n  Whenever the content is changed causing a reorder,\r\n  notice the animations caused by the RecyclerView ItemAnimator.","tree":{"sha":"5d33cfa0b7a6ef07a25088652b676fb00e0011bc","url":"https://api.github.com/repos/google/agera/git/trees/5d33cfa0b7a6ef07a25088652b676fb00e0011bc"},"url":"https://api.github.com/repos/google/agera/git/commits/d38c1385057a629c28304668cc9683663ae80b73","comment_count":0},"url":"https://api.github.com/repos/google/agera/commits/d38c1385057a629c28304668cc9683663ae80b73","html_url":"https://github.com/google/agera/commit/d38c1385057a629c28304668cc9683663ae80b73","comments_url":"https://api.github.com/repos/google/agera/commits/d38c1385057a629c28304668cc9683663ae80b73/comments","author":{"login":"gardell","id":736172,"avatar_url":"https://avatars3.githubusercontent.com/u/736172?v=3","gravatar_id":"","url":"https://api.github.com/users/gardell","html_url":"https://github.com/gardell","followers_url":"https://api.github.com/users/gardell/followers","following_url":"https://api.github.com/users/gardell/following{/other_user}","gists_url":"https://api.github.com/users/gardell/gists{/gist_id}","starred_url":"https://api.github.com/users/gardell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gardell/subscriptions","organizations_url":"https://api.github.com/users/gardell/orgs","repos_url":"https://api.github.com/users/gardell/repos","events_url":"https://api.github.com/users/gardell/events{/privacy}","received_events_url":"https://api.github.com/users/gardell/received_events","type":"User","site_admin":false},"committer":{"login":"ernstsson","id":378389,"avatar_url":"https://avatars2.githubusercontent.com/u/378389?v=3","gravatar_id":"","url":"https://api.github.com/users/ernstsson","html_url":"https://github.com/ernstsson","followers_url":"https://api.github.com/users/ernstsson/followers","following_url":"https://api.github.com/users/ernstsson/following{/other_user}","gists_url":"https://api.github.com/users/ernstsson/gists{/gist_id}","starred_url":"https://api.github.com/users/ernstsson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ernstsson/subscriptions","organizations_url":"https://api.github.com/users/ernstsson/orgs","repos_url":"https://api.github.com/users/ernstsson/repos","events_url":"https://api.github.com/users/ernstsson/events{/privacy}","received_events_url":"https://api.github.com/users/ernstsson/received_events","type":"User","site_admin":false},"parents":[{"sha":"2b241e54a5b80303a8699efaf0fa3eb1ad24774d","url":"https://api.github.com/repos/google/agera/commits/2b241e54a5b80303a8699efaf0fa3eb1ad24774d","html_url":"https://github.com/google/agera/commit/2b241e54a5b80303a8699efaf0fa3eb1ad24774d"}],"stats":{"total":177,"additions":157,"deletions":20},"files":[{"sha":"6a2b3983a02b204db4ccc2b8ab339e2c04205ac0","filename":"extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompiler.java","status":"modified","additions":32,"deletions":14,"changes":46,"blob_url":"https://github.com/google/agera/blob/d38c1385057a629c28304668cc9683663ae80b73/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompiler.java","raw_url":"https://github.com/google/agera/raw/d38c1385057a629c28304668cc9683663ae80b73/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompiler.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompiler.java?ref=d38c1385057a629c28304668cc9683663ae80b73","patch":"@@ -22,7 +22,7 @@\n import com.google.android.agera.Function;\n import com.google.android.agera.Result;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPLayout;\n-import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPViewBinderCompile;\n+import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPViewBinderStableIdCompile;\n \n import android.support.annotation.LayoutRes;\n import android.support.annotation.NonNull;\n@@ -32,29 +32,31 @@\n import java.util.List;\n \n @SuppressWarnings({\"unchecked, rawtypes\"})\n-final class RepositoryPresenterCompiler implements RPLayout, RPViewBinderCompile {\n+final class RepositoryPresenterCompiler implements RPLayout, RPViewBinderStableIdCompile {\n   @NonNull\n   private static final NullBinder NULL_BINDER = new NullBinder();\n   private Function<Object, Integer> layoutForItem;\n   @NonNull\n   private Binder binder = NULL_BINDER;\n+  @NonNull\n+  private Function<Object, Long> stableIdForItem = staticFunction(RecyclerView.NO_ID);\n \n   @NonNull\n   @Override\n   public RepositoryPresenter<List> forList() {\n-    return new ListBasicRepositoryPresenter(layoutForItem, binder);\n+    return new ListBasicRepositoryPresenter(layoutForItem, binder, stableIdForItem);\n   }\n \n   @NonNull\n   @Override\n   public RepositoryPresenter<Result> forResult() {\n-    return new SingleResultRepositoryPresenter(layoutForItem, binder);\n+    return new SingleResultRepositoryPresenter(layoutForItem, binder, stableIdForItem);\n   }\n \n   @NonNull\n   @Override\n   public RepositoryPresenter<Result<List>> forResultList() {\n-    return new ListResultRepositoryPresenter(layoutForItem, binder);\n+    return new ListResultRepositoryPresenter(layoutForItem, binder, stableIdForItem);\n   }\n \n   @NonNull\n@@ -78,6 +80,13 @@ public Object bindWith(@NonNull final Binder binder) {\n     return this;\n   }\n \n+  @NonNull\n+  @Override\n+  public Object stableIdForItem(@NonNull final Function stableIdForItem) {\n+    this.stableIdForItem = stableIdForItem;\n+    return this;\n+  }\n+\n   private static final class NullBinder implements Binder {\n     @Override\n     public void bind(@NonNull Object o, @NonNull Object o2) {}\n@@ -89,11 +98,15 @@ public void bind(@NonNull Object o, @NonNull Object o2) {}\n     private final Function<Object, Integer> layoutId;\n     @NonNull\n     private final Binder<TVal, View> binder;\n+    @NonNull\n+    private final Function<TVal, Long> stableIdForItem;\n \n     BasicRepositoryPresenter(@NonNull final Function<Object, Integer> layoutId,\n-        @NonNull final Binder<TVal, View> binder) {\n+        @NonNull final Binder<TVal, View> binder,\n+        @NonNull final Function<TVal, Long> stableIdForItem) {\n       this.layoutId = checkNotNull(layoutId);\n       this.binder = checkNotNull(binder);\n+      this.stableIdForItem = stableIdForItem;\n     }\n \n     @NonNull\n@@ -104,6 +117,11 @@ public final int getLayoutResId(@NonNull final T data, final int index) {\n       return layoutId.apply(getValue(data, index));\n     }\n \n+    @Override\n+    public long getItemId(@NonNull T data, int index) {\n+      return stableIdForItem.apply(getValue(data, index));\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public void bind(@NonNull final T data, final int index,\n@@ -116,8 +134,8 @@ public void bind(@NonNull final T data, final int index,\n       extends BasicRepositoryPresenter<T, List<T>> {\n \n     public ListBasicRepositoryPresenter(@NonNull final Function<Object, Integer> layoutId,\n-        @NonNull final Binder<T, View> binder) {\n-      super(layoutId, binder);\n+        @NonNull final Binder<T, View> binder, Function<T, Long> stableIdForItem) {\n+      super(layoutId, binder, stableIdForItem);\n     }\n \n     @Override\n@@ -136,8 +154,8 @@ protected T getValue(@NonNull final List<T> data, final int index) {\n       extends BasicRepositoryPresenter<TVal, Result<T>> {\n \n     ResultRepositoryPresenter(@NonNull final Function<Object, Integer> layoutId,\n-        @NonNull final Binder<TVal, View> binder) {\n-      super(layoutId, binder);\n+        @NonNull final Binder<TVal, View> binder, Function<TVal, Long> stableIdForItem) {\n+      super(layoutId, binder, stableIdForItem);\n     }\n \n     @NonNull\n@@ -160,8 +178,8 @@ public final int getItemCount(@NonNull final Result<T> data) {\n   private static final class SingleResultRepositoryPresenter<T>\n       extends ResultRepositoryPresenter<T, T> {\n     public SingleResultRepositoryPresenter(@NonNull final Function<Object, Integer> layoutId,\n-        @NonNull final Binder<T, View> binder) {\n-      super(layoutId, binder);\n+        @NonNull final Binder<T, View> binder, Function stableIdForItem) {\n+      super(layoutId, binder, stableIdForItem);\n     }\n \n     @Override\n@@ -180,8 +198,8 @@ protected T getResultValue(@NonNull final T data, final int index) {\n       extends ResultRepositoryPresenter<T, List<T>> {\n \n     public ListResultRepositoryPresenter(@NonNull final Function<Object, Integer> layoutId,\n-        @NonNull final Binder<T, View> binder) {\n-      super(layoutId, binder);\n+        @NonNull final Binder<T, View> binder, Function stableIdForItem) {\n+      super(layoutId, binder, stableIdForItem);\n     }\n \n     @Override"},{"sha":"bea8fa43ff152883e22b3b64e32a2b545198defd","filename":"extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompilerStates.java","status":"modified","additions":26,"deletions":2,"changes":28,"blob_url":"https://github.com/google/agera/blob/d38c1385057a629c28304668cc9683663ae80b73/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompilerStates.java","raw_url":"https://github.com/google/agera/raw/d38c1385057a629c28304668cc9683663ae80b73/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompilerStates.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenterCompilerStates.java?ref=d38c1385057a629c28304668cc9683663ae80b73","patch":"@@ -69,6 +69,25 @@\n   }\n \n   /**\n+   * Compiler state to specify how to generate stable IDs when\n+   * {@link android.support.v7.widget.RecyclerView.Adapter#setHasStableIds(boolean)} is true.\n+   */\n+  interface RPStableId<TVal, TRet> {\n+\n+    /**\n+     * Specifies a {@link Function} providing a stable id for the given item.\n+     * Called only if stable IDs are enabled with {@link RepositoryAdapter#setHasStableIds\n+     * RepositoryAdapter.setHasStableIds(true)}, and therefore this method is optional with a\n+     * default implementation of returning {@link RecyclerView#NO_ID}. If stable IDs are enabled,\n+     * the returned ID and the layout returned by {@link RPLayout#layoutForItem(Function)} or\n+     * {@link RPLayout#layout(int)} for the given item should together uniquely identify this item\n+     * in the whole {@link RecyclerView} throughout all changes.\n+     */\n+    @NonNull\n+    TRet stableIdForItem(@NonNull Function<TVal, Long> stableIdForItem);\n+  }\n+\n+  /**\n    * Compiler state to create the @{link RepositoryPresenter}.\n    */\n   interface RPCompile<TVal> {\n@@ -99,6 +118,11 @@\n   /**\n    * Compiler state allowing to specify view binder, view recycler or compile.\n    */\n-  interface RPViewBinderCompile<TVal>\n-      extends RPViewBinder<TVal, RPCompile<TVal>>, RPCompile<TVal> {}\n+  interface RPViewBinderCompile<TVal> extends RPViewBinder<TVal, RPCompile<TVal>>,\n+      RPCompile<TVal> {}\n+  /**\n+   * Compiler state allowing to specify view binder, view recycler, stable id function or compile.\n+   */\n+  interface RPViewBinderStableIdCompile<TVal> extends RPViewBinderCompile<TVal>,\n+      RPStableId<TVal, RPViewBinderCompile<TVal>> {}\n }"},{"sha":"e3286fbbac0157769a876a2e1867f9ce4c85520b","filename":"extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenters.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/google/agera/blob/d38c1385057a629c28304668cc9683663ae80b73/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenters.java","raw_url":"https://github.com/google/agera/raw/d38c1385057a629c28304668cc9683663ae80b73/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenters.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvadapter/src/main/java/com/google/android/agera/rvadapter/RepositoryPresenters.java?ref=d38c1385057a629c28304668cc9683663ae80b73","patch":"@@ -18,7 +18,7 @@\n import com.google.android.agera.Repository;\n import com.google.android.agera.Result;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPLayout;\n-import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPViewBinderCompile;\n+import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPViewBinderStableIdCompile;\n \n import android.support.annotation.NonNull;\n import android.support.annotation.Nullable;\n@@ -37,7 +37,7 @@\n    */\n   @SuppressWarnings({\"unchecked\", \"UnusedParameters\"})\n   @NonNull\n-  public static <T> RPLayout<T, RPViewBinderCompile<T>> repositoryPresenterOf(\n+  public static <T> RPLayout<T, RPViewBinderStableIdCompile<T>> repositoryPresenterOf(\n       @Nullable final Class<T> type) {\n     return new RepositoryPresenterCompiler();\n   }"},{"sha":"de600c07dcc4af0e31f999ebd089d2431e6eaf9d","filename":"extensions/rvadapter/src/test/java/com/google/android/agera/rvadapter/RepositoryPresentersTest.java","status":"modified","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/google/agera/blob/d38c1385057a629c28304668cc9683663ae80b73/extensions/rvadapter/src/test/java/com/google/android/agera/rvadapter/RepositoryPresentersTest.java","raw_url":"https://github.com/google/agera/raw/d38c1385057a629c28304668cc9683663ae80b73/extensions/rvadapter/src/test/java/com/google/android/agera/rvadapter/RepositoryPresentersTest.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvadapter/src/test/java/com/google/android/agera/rvadapter/RepositoryPresentersTest.java?ref=d38c1385057a629c28304668cc9683663ae80b73","patch":"@@ -13,6 +13,7 @@\n \n import com.google.android.agera.Binder;\n import com.google.android.agera.Function;\n+import com.google.android.agera.Functions;\n import com.google.android.agera.Result;\n \n import android.support.v7.widget.RecyclerView;\n@@ -39,6 +40,7 @@\n   private static final Result<List<String>> LIST_FAILURE = Result.<List<String>>failure();\n   private static final int LAYOUT_ID = 0;\n   private static final int DYNAMIC_LAYOUT_ID = 1;\n+  private static final long STABLE_ID = 2;\n   @Mock\n   private Binder<String, View> binder;\n   @Mock\n@@ -162,4 +164,45 @@ public void shouldGenerateLayoutForItemOfRepositoryPresenterOfResultList() {\n   public void shouldHavePrivateConstructor() {\n     assertThat(RepositoryPresenters.class, hasPrivateConstructor());\n   }\n+\n+  @Test\n+  public void shouldReturnStableIdForRepositoryPresenterOfResult() {\n+    final RepositoryPresenter<Result<String>> resultRepositoryPresenter =\n+        repositoryPresenterOf(String.class)\n+            .layout(LAYOUT_ID)\n+            .stableIdForItem(Functions.<String, Long>staticFunction(STABLE_ID))\n+            .forResult();\n+    assertThat(resultRepositoryPresenter.getItemId(STRING_RESULT, 0), is(STABLE_ID));\n+  }\n+\n+  @Test\n+  public void shouldReturnStableIdForRepositoryPresenterOfResultList() {\n+    final RepositoryPresenter<Result<List<String>>> resultListRepositoryPresenter =\n+        repositoryPresenterOf(String.class)\n+            .layout(LAYOUT_ID)\n+            .stableIdForItem(Functions.<String, Long>staticFunction(STABLE_ID))\n+            .forResultList();\n+    assertThat(resultListRepositoryPresenter.getItemId(STRING_LIST_RESULT, 1), is(STABLE_ID));\n+  }\n+\n+  @Test\n+  public void shouldReturnStableIdForRepositoryPresenterOfList() {\n+    final RepositoryPresenter<List<String>> listRepositoryPresenter =\n+        repositoryPresenterOf(String.class)\n+            .layout(LAYOUT_ID)\n+            .stableIdForItem(Functions.<String, Long>staticFunction(STABLE_ID))\n+            .forList();\n+    assertThat(listRepositoryPresenter.getItemId(STRING_LIST, 1), is(STABLE_ID));\n+  }\n+\n+  @Test\n+  public void shouldReturnStableIdForRepositoryPresenterOfListWithBinder() {\n+    final RepositoryPresenter<List<String>> resultRepositoryPresenter =\n+        repositoryPresenterOf(String.class)\n+            .layout(LAYOUT_ID)\n+            .stableIdForItem(Functions.<String, Long>staticFunction(STABLE_ID))\n+            .bindWith(binder)\n+            .forList();\n+    assertThat(resultRepositoryPresenter.getItemId(STRING_LIST, 1), is(STABLE_ID));\n+  }\n }"},{"sha":"07e26271cd9934692b6b48552219b24d15ad60a1","filename":"extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompiler.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/google/agera/blob/d38c1385057a629c28304668cc9683663ae80b73/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompiler.java","raw_url":"https://github.com/google/agera/raw/d38c1385057a629c28304668cc9683663ae80b73/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompiler.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompiler.java?ref=d38c1385057a629c28304668cc9683663ae80b73","patch":"@@ -34,6 +34,7 @@\n import android.support.annotation.NonNull;\n import android.support.annotation.VisibleForTesting;\n import android.support.v4.util.Pair;\n+import android.support.v7.widget.RecyclerView;\n import android.view.View;\n \n import java.util.ArrayList;\n@@ -46,6 +47,8 @@\n   private final List<Pair<Integer, Object>> handlers;\n   private Function<Object, Integer> layoutFactory;\n   private Function itemId;\n+  @NonNull\n+  private Function<Object, Long> stableIdForItem = staticFunction(RecyclerView.NO_ID);\n \n   DataBindingRepositoryPresenterCompiler() {\n     this.handlers = new ArrayList<>();\n@@ -77,6 +80,7 @@ public Object itemIdForItem(@NonNull final Function itemIdForItem) {\n   public RepositoryPresenter<List<Object>> forList() {\n     return repositoryPresenterOf(null)\n         .layoutForItem(layoutFactory)\n+        .stableIdForItem(stableIdForItem)\n         .bindWith(new ViewBinder(itemId, new ArrayList<>(handlers)))\n         .forList();\n   }\n@@ -86,6 +90,7 @@ public Object itemIdForItem(@NonNull final Function itemIdForItem) {\n   public RepositoryPresenter<Result<Object>> forResult() {\n     return repositoryPresenterOf(Object.class)\n         .layoutForItem(layoutFactory)\n+        .stableIdForItem(stableIdForItem)\n         .bindWith(new ViewBinder(itemId, new ArrayList<>(handlers)))\n         .forResult();\n   }\n@@ -95,6 +100,7 @@ public Object itemIdForItem(@NonNull final Function itemIdForItem) {\n   public RepositoryPresenter<Result<List<Object>>> forResultList() {\n     return repositoryPresenterOf(null)\n         .layoutForItem(layoutFactory)\n+        .stableIdForItem(stableIdForItem)\n         .bindWith(new ViewBinder(itemId, new ArrayList<>(handlers)))\n         .forResultList();\n   }\n@@ -113,6 +119,13 @@ public Object layoutForItem(@NonNull Function layoutForItem) {\n     return this;\n   }\n \n+  @NonNull\n+  @Override\n+  public Object stableIdForItem(@NonNull final Function stableIdForItem) {\n+    this.stableIdForItem = stableIdForItem;\n+    return this;\n+  }\n+\n   private static final class ViewBinder implements Binder<Object, View> {\n     private final Function<Object, Integer> itemId;\n     @NonNull"},{"sha":"4cb47d195af6806a3ab6976166421d95c663e84e","filename":"extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompilerStates.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/google/agera/blob/d38c1385057a629c28304668cc9683663ae80b73/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompilerStates.java","raw_url":"https://github.com/google/agera/raw/d38c1385057a629c28304668cc9683663ae80b73/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompilerStates.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvdatabinding/src/main/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresenterCompilerStates.java?ref=d38c1385057a629c28304668cc9683663ae80b73","patch":"@@ -17,6 +17,7 @@\n \n import com.google.android.agera.Function;\n import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPCompile;\n+import com.google.android.agera.rvadapter.RepositoryPresenterCompilerStates.RPStableId;\n \n import android.support.annotation.LayoutRes;\n import android.support.annotation.NonNull;\n@@ -36,5 +37,6 @@\n   }\n \n   interface DBRPHandlerBindingCompile<TVal>\n-      extends RPCompile<TVal>, DBRPHandlerBinding<DBRPHandlerBindingCompile<TVal>> {}\n+      extends RPCompile<TVal>, DBRPHandlerBinding<DBRPHandlerBindingCompile<TVal>>,\n+      RPStableId<TVal, DBRPHandlerBindingCompile<TVal>> {}\n }"},{"sha":"0ee8376a7c095aeccd6eb715e594bae8aba13d47","filename":"extensions/rvdatabinding/src/test/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresentersTest.java","status":"modified","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/google/agera/blob/d38c1385057a629c28304668cc9683663ae80b73/extensions/rvdatabinding/src/test/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresentersTest.java","raw_url":"https://github.com/google/agera/raw/d38c1385057a629c28304668cc9683663ae80b73/extensions/rvdatabinding/src/test/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresentersTest.java","contents_url":"https://api.github.com/repos/google/agera/contents/extensions/rvdatabinding/src/test/java/com/google/android/agera/rvdatabinding/DataBindingRepositoryPresentersTest.java?ref=d38c1385057a629c28304668cc9683663ae80b73","patch":"@@ -13,6 +13,7 @@\n \n import com.google.android.agera.Binder;\n import com.google.android.agera.Function;\n+import com.google.android.agera.Functions;\n import com.google.android.agera.Result;\n import com.google.android.agera.rvadapter.RepositoryPresenter;\n \n@@ -46,6 +47,7 @@\n   private static final int DYNAMIC_ITEM_ID = 4;\n   private static final int HANDLER_ID = 5;\n   private static final int SECOND_HANDLER_ID = 6;\n+  private static final long STABLE_ID = 2;\n   @Mock\n   private Binder<String, View> binder;\n   @Mock\n@@ -189,6 +191,39 @@ public void shouldGenerateItemIdForItemOfRepositoryPresenterOfResultList() {\n   }\n \n   @Test\n+  public void shouldReturnStableIdForRepositoryPresenterOfResult() {\n+    final RepositoryPresenter<Result<String>> resultRepositoryPresenter =\n+        dataBindingRepositoryPresenterOf(String.class)\n+            .layout(LAYOUT_ID)\n+            .itemId(ITEM_ID)\n+            .stableIdForItem(Functions.<String, Long>staticFunction(STABLE_ID))\n+        .forResult();\n+    assertThat(resultRepositoryPresenter.getItemId(STRING_RESULT, 0), is(STABLE_ID));\n+  }\n+\n+  @Test\n+  public void shouldReturnStableIdForRepositoryPresenterOfResultList() {\n+    final RepositoryPresenter<Result<List<String>>> resultListRepositoryPresenter =\n+        dataBindingRepositoryPresenterOf(String.class)\n+            .layout(LAYOUT_ID)\n+            .itemId(ITEM_ID)\n+            .stableIdForItem(Functions.<String, Long>staticFunction(STABLE_ID))\n+            .forResultList();\n+    assertThat(resultListRepositoryPresenter.getItemId(STRING_LIST_RESULT, 0), is(STABLE_ID));\n+  }\n+\n+  @Test\n+  public void shouldReturnStableIdForRepositoryPresenterOfList() {\n+    final RepositoryPresenter<List<String>> listRepositoryPresenter =\n+        dataBindingRepositoryPresenterOf(String.class)\n+            .layout(LAYOUT_ID)\n+            .itemId(ITEM_ID)\n+            .stableIdForItem(Functions.<String, Long>staticFunction(STABLE_ID))\n+            .forList();\n+    assertThat(listRepositoryPresenter.getItemId(STRING_LIST, 0), is(STABLE_ID));\n+  }\n+\n+  @Test\n   public void shouldHavePrivateConstructor() {\n     assertThat(DataBindingRepositoryPresenters.class, hasPrivateConstructor());\n   }"},{"sha":"68780a946c918962684fbe163679250655dc71be","filename":"testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/google/agera/blob/d38c1385057a629c28304668cc9683663ae80b73/testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java","raw_url":"https://github.com/google/agera/raw/d38c1385057a629c28304668cc9683663ae80b73/testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/NotesActivity.java?ref=d38c1385057a629c28304668cc9683663ae80b73","patch":"@@ -90,6 +90,7 @@ protected void onCreate(final Bundle savedInstanceState) {\n         .add(notesStore.getNotesRepository(), dataBindingRepositoryPresenterOf(Note.class)\n             .layout(R.layout.text_layout)\n             .itemId(com.google.android.agera.testapp.BR.note)\n+            .stableIdForItem(input -> (long) input.getId())\n             .handler(com.google.android.agera.testapp.BR.click,\n                 (Receiver<Note>) note -> {\n                   final EditText editText = new EditText(this);\n@@ -106,6 +107,7 @@ protected void onCreate(final Bundle savedInstanceState) {\n                 (Predicate<Note>) notesStore::deleteNote)\n             .forList())\n         .whileStarted(this);\n+    adapter.setHasStableIds(true);\n \n     // Setup the recycler view using the repository adapter\n     final RecyclerView recyclerView = (RecyclerView) findViewById(R.id.result);"},{"sha":"09222dbb45da66aef1182c15092022aea0a6e1ae","filename":"testapp/src/main/java/com/google/android/agera/testapp/NotesStore.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/google/agera/blob/d38c1385057a629c28304668cc9683663ae80b73/testapp/src/main/java/com/google/android/agera/testapp/NotesStore.java","raw_url":"https://github.com/google/agera/raw/d38c1385057a629c28304668cc9683663ae80b73/testapp/src/main/java/com/google/android/agera/testapp/NotesStore.java","contents_url":"https://api.github.com/repos/google/agera/contents/testapp/src/main/java/com/google/android/agera/testapp/NotesStore.java?ref=d38c1385057a629c28304668cc9683663ae80b73","patch":"@@ -64,7 +64,7 @@\n   private static final String MODIFY_NOTE_WHERE = NOTES_NOTE_ID_COLUMN + \"=?\";\n   private static final String GET_NOTES_FROM_TABLE =\n       \"SELECT \" + NOTES_NOTE_ID_COLUMN + \", \" + NOTES_NOTE_COLUMN + \" FROM \" + NOTES_TABLE\n-          + \" ORDER BY \" + NOTES_NOTE_ID_COLUMN;\n+          + \" ORDER BY \" + NOTES_NOTE_COLUMN;\n   private static final int ID_COLUMN_INDEX = 0;\n   private static final int NOTE_COLUMN_INDEX = 1;\n   private static final List<Note> INITIAL_VALUE = emptyList();"}]}